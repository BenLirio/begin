# command-line-arguments
"".rot64 STEXT nosplit size=35 args=0x10 locals=0x0
	0x0000 00000 (/usr/local/go/test/codegen/rotate.go:13)	TEXT	"".rot64(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (/usr/local/go/test/codegen/rotate.go:13)	FUNCDATA	$0, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x0000 00000 (/usr/local/go/test/codegen/rotate.go:13)	FUNCDATA	$1, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x0000 00000 (/usr/local/go/test/codegen/rotate.go:21)	MOVQ	"".x+8(SP), AX
	0x0005 00005 (/usr/local/go/test/codegen/rotate.go:21)	MOVQ	AX, CX
	0x0008 00008 (/usr/local/go/test/codegen/rotate.go:21)	ROLQ	$7, AX
	0x000c 00012 (/usr/local/go/test/codegen/rotate.go:28)	MOVQ	CX, DX
	0x000f 00015 (/usr/local/go/test/codegen/rotate.go:28)	ROLQ	$8, CX
	0x0013 00019 (/usr/local/go/test/codegen/rotate.go:28)	ADDQ	CX, AX
	0x0016 00022 (/usr/local/go/test/codegen/rotate.go:35)	ROLQ	$9, DX
	0x001a 00026 (/usr/local/go/test/codegen/rotate.go:35)	ADDQ	DX, AX
	0x001d 00029 (/usr/local/go/test/codegen/rotate.go:37)	MOVQ	AX, "".~r1+16(SP)
	0x0022 00034 (/usr/local/go/test/codegen/rotate.go:37)	RET
	0x0000 48 8b 44 24 08 48 89 c1 48 c1 c0 07 48 89 ca 48  H.D$.H..H...H..H
	0x0010 c1 c1 08 48 01 c8 48 c1 c2 09 48 01 d0 48 89 44  ...H..H...H..H.D
	0x0020 24 10 c3                                         $..
"".rot32 STEXT nosplit size=26 args=0x10 locals=0x0
	0x0000 00000 (/usr/local/go/test/codegen/rotate.go:40)	TEXT	"".rot32(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (/usr/local/go/test/codegen/rotate.go:40)	FUNCDATA	$0, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x0000 00000 (/usr/local/go/test/codegen/rotate.go:40)	FUNCDATA	$1, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x0000 00000 (/usr/local/go/test/codegen/rotate.go:49)	MOVL	"".x+8(SP), AX
	0x0004 00004 (/usr/local/go/test/codegen/rotate.go:49)	MOVL	AX, CX
	0x0006 00006 (/usr/local/go/test/codegen/rotate.go:49)	ROLL	$7, AX
	0x0009 00009 (/usr/local/go/test/codegen/rotate.go:57)	MOVL	CX, DX
	0x000b 00011 (/usr/local/go/test/codegen/rotate.go:57)	ROLL	$8, CX
	0x000e 00014 (/usr/local/go/test/codegen/rotate.go:57)	ADDL	CX, AX
	0x0010 00016 (/usr/local/go/test/codegen/rotate.go:65)	ROLL	$9, DX
	0x0013 00019 (/usr/local/go/test/codegen/rotate.go:65)	ADDL	DX, AX
	0x0015 00021 (/usr/local/go/test/codegen/rotate.go:67)	MOVL	AX, "".~r1+16(SP)
	0x0019 00025 (/usr/local/go/test/codegen/rotate.go:67)	RET
	0x0000 8b 44 24 08 89 c1 c1 c0 07 89 ca c1 c1 08 01 c8  .D$.............
	0x0010 c1 c2 09 01 d0 89 44 24 10 c3                    ......D$..
"".rot16 STEXT nosplit size=31 args=0x10 locals=0x0
	0x0000 00000 (/usr/local/go/test/codegen/rotate.go:70)	TEXT	"".rot16(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (/usr/local/go/test/codegen/rotate.go:70)	FUNCDATA	$0, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x0000 00000 (/usr/local/go/test/codegen/rotate.go:70)	FUNCDATA	$1, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x0000 00000 (/usr/local/go/test/codegen/rotate.go:74)	MOVWLZX	"".x+8(SP), AX
	0x0005 00005 (/usr/local/go/test/codegen/rotate.go:74)	MOVL	AX, CX
	0x0007 00007 (/usr/local/go/test/codegen/rotate.go:74)	ROLW	$7, AX
	0x000b 00011 (/usr/local/go/test/codegen/rotate.go:77)	MOVL	CX, DX
	0x000d 00013 (/usr/local/go/test/codegen/rotate.go:77)	ROLW	$8, CX
	0x0011 00017 (/usr/local/go/test/codegen/rotate.go:77)	ADDL	CX, AX
	0x0013 00019 (/usr/local/go/test/codegen/rotate.go:80)	ROLW	$9, DX
	0x0017 00023 (/usr/local/go/test/codegen/rotate.go:80)	ADDL	DX, AX
	0x0019 00025 (/usr/local/go/test/codegen/rotate.go:82)	MOVW	AX, "".~r1+16(SP)
	0x001e 00030 (/usr/local/go/test/codegen/rotate.go:82)	RET
	0x0000 0f b7 44 24 08 89 c1 66 c1 c0 07 89 ca 66 c1 c1  ..D$...f.....f..
	0x0010 08 01 c8 66 c1 c2 09 01 d0 66 89 44 24 10 c3     ...f.....f.D$..
"".rot8 STEXT nosplit size=27 args=0x10 locals=0x0
	0x0000 00000 (/usr/local/go/test/codegen/rotate.go:85)	TEXT	"".rot8(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (/usr/local/go/test/codegen/rotate.go:85)	FUNCDATA	$0, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x0000 00000 (/usr/local/go/test/codegen/rotate.go:85)	FUNCDATA	$1, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x0000 00000 (/usr/local/go/test/codegen/rotate.go:89)	MOVBLZX	"".x+8(SP), AX
	0x0005 00005 (/usr/local/go/test/codegen/rotate.go:89)	MOVL	AX, CX
	0x0007 00007 (/usr/local/go/test/codegen/rotate.go:89)	ROLB	$5, AL
	0x000a 00010 (/usr/local/go/test/codegen/rotate.go:92)	MOVL	CX, DX
	0x000c 00012 (/usr/local/go/test/codegen/rotate.go:92)	ROLB	$6, CL
	0x000f 00015 (/usr/local/go/test/codegen/rotate.go:92)	ADDL	CX, AX
	0x0011 00017 (/usr/local/go/test/codegen/rotate.go:95)	ROLB	$7, DL
	0x0014 00020 (/usr/local/go/test/codegen/rotate.go:95)	ADDL	DX, AX
	0x0016 00022 (/usr/local/go/test/codegen/rotate.go:97)	MOVB	AL, "".~r1+16(SP)
	0x001a 00026 (/usr/local/go/test/codegen/rotate.go:97)	RET
	0x0000 0f b6 44 24 08 89 c1 c0 c0 05 89 ca c0 c1 06 01  ..D$............
	0x0010 c8 c0 c2 07 01 d0 88 44 24 10 c3                 .......D$..
"".rot64nc STEXT nosplit size=28 args=0x18 locals=0x0
	0x0000 00000 (/usr/local/go/test/codegen/rotate.go:104)	TEXT	"".rot64nc(SB), NOSPLIT|ABIInternal, $0-24
	0x0000 00000 (/usr/local/go/test/codegen/rotate.go:104)	FUNCDATA	$0, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x0000 00000 (/usr/local/go/test/codegen/rotate.go:104)	FUNCDATA	$1, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x0000 00000 (/usr/local/go/test/codegen/rotate.go:112)	MOVQ	"".z+16(SP), CX
	0x0005 00005 (/usr/local/go/test/codegen/rotate.go:112)	MOVQ	"".x+8(SP), AX
	0x000a 00010 (/usr/local/go/test/codegen/rotate.go:112)	MOVQ	AX, DX
	0x000d 00013 (/usr/local/go/test/codegen/rotate.go:112)	ROLQ	CX, AX
	0x0010 00016 (/usr/local/go/test/codegen/rotate.go:115)	RORQ	CX, DX
	0x0013 00019 (/usr/local/go/test/codegen/rotate.go:115)	ADDQ	DX, AX
	0x0016 00022 (/usr/local/go/test/codegen/rotate.go:117)	MOVQ	AX, "".~r2+24(SP)
	0x001b 00027 (/usr/local/go/test/codegen/rotate.go:117)	RET
	0x0000 48 8b 4c 24 10 48 8b 44 24 08 48 89 c2 48 d3 c0  H.L$.H.D$.H..H..
	0x0010 48 d3 ca 48 01 d0 48 89 44 24 18 c3              H..H..H.D$..
"".rot32nc STEXT nosplit size=22 args=0x18 locals=0x0
	0x0000 00000 (/usr/local/go/test/codegen/rotate.go:120)	TEXT	"".rot32nc(SB), NOSPLIT|ABIInternal, $0-24
	0x0000 00000 (/usr/local/go/test/codegen/rotate.go:120)	FUNCDATA	$0, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x0000 00000 (/usr/local/go/test/codegen/rotate.go:120)	FUNCDATA	$1, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x0000 00000 (/usr/local/go/test/codegen/rotate.go:128)	MOVQ	"".z+16(SP), CX
	0x0005 00005 (/usr/local/go/test/codegen/rotate.go:128)	MOVL	"".x+8(SP), AX
	0x0009 00009 (/usr/local/go/test/codegen/rotate.go:128)	MOVL	AX, DX
	0x000b 00011 (/usr/local/go/test/codegen/rotate.go:128)	ROLL	CX, AX
	0x000d 00013 (/usr/local/go/test/codegen/rotate.go:131)	RORL	CX, DX
	0x000f 00015 (/usr/local/go/test/codegen/rotate.go:131)	ADDL	DX, AX
	0x0011 00017 (/usr/local/go/test/codegen/rotate.go:133)	MOVL	AX, "".~r2+24(SP)
	0x0015 00021 (/usr/local/go/test/codegen/rotate.go:133)	RET
	0x0000 48 8b 4c 24 10 8b 44 24 08 89 c2 d3 c0 d3 ca 01  H.L$..D$........
	0x0010 d0 89 44 24 18 c3                                ..D$..
"".rot16nc STEXT nosplit size=26 args=0x18 locals=0x0
	0x0000 00000 (/usr/local/go/test/codegen/rotate.go:136)	TEXT	"".rot16nc(SB), NOSPLIT|ABIInternal, $0-24
	0x0000 00000 (/usr/local/go/test/codegen/rotate.go:136)	FUNCDATA	$0, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x0000 00000 (/usr/local/go/test/codegen/rotate.go:136)	FUNCDATA	$1, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x0000 00000 (/usr/local/go/test/codegen/rotate.go:142)	MOVQ	"".z+16(SP), CX
	0x0005 00005 (/usr/local/go/test/codegen/rotate.go:142)	MOVWLZX	"".x+8(SP), AX
	0x000a 00010 (/usr/local/go/test/codegen/rotate.go:142)	MOVL	AX, DX
	0x000c 00012 (/usr/local/go/test/codegen/rotate.go:142)	ROLW	CX, AX
	0x000f 00015 (/usr/local/go/test/codegen/rotate.go:145)	RORW	CX, DX
	0x0012 00018 (/usr/local/go/test/codegen/rotate.go:145)	ADDL	DX, AX
	0x0014 00020 (/usr/local/go/test/codegen/rotate.go:147)	MOVW	AX, "".~r2+24(SP)
	0x0019 00025 (/usr/local/go/test/codegen/rotate.go:147)	RET
	0x0000 48 8b 4c 24 10 0f b7 44 24 08 89 c2 66 d3 c0 66  H.L$...D$...f..f
	0x0010 d3 ca 01 d0 66 89 44 24 18 c3                    ....f.D$..
"".rot8nc STEXT nosplit size=23 args=0x18 locals=0x0
	0x0000 00000 (/usr/local/go/test/codegen/rotate.go:150)	TEXT	"".rot8nc(SB), NOSPLIT|ABIInternal, $0-24
	0x0000 00000 (/usr/local/go/test/codegen/rotate.go:150)	FUNCDATA	$0, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x0000 00000 (/usr/local/go/test/codegen/rotate.go:150)	FUNCDATA	$1, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x0000 00000 (/usr/local/go/test/codegen/rotate.go:156)	MOVQ	"".z+16(SP), CX
	0x0005 00005 (/usr/local/go/test/codegen/rotate.go:156)	MOVBLZX	"".x+8(SP), AX
	0x000a 00010 (/usr/local/go/test/codegen/rotate.go:156)	MOVL	AX, DX
	0x000c 00012 (/usr/local/go/test/codegen/rotate.go:156)	ROLB	CL, AL
	0x000e 00014 (/usr/local/go/test/codegen/rotate.go:159)	RORB	CL, DL
	0x0010 00016 (/usr/local/go/test/codegen/rotate.go:159)	ADDL	DX, AX
	0x0012 00018 (/usr/local/go/test/codegen/rotate.go:161)	MOVB	AL, "".~r2+24(SP)
	0x0016 00022 (/usr/local/go/test/codegen/rotate.go:161)	RET
	0x0000 48 8b 4c 24 10 0f b6 44 24 08 89 c2 d2 c0 d2 ca  H.L$...D$.......
	0x0010 01 d0 88 44 24 18 c3                             ...D$..
"".f32 STEXT nosplit size=19 args=0x10 locals=0x0
	0x0000 00000 (/usr/local/go/test/codegen/rotate.go:165)	TEXT	"".f32(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (/usr/local/go/test/codegen/rotate.go:165)	FUNCDATA	$0, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x0000 00000 (/usr/local/go/test/codegen/rotate.go:165)	FUNCDATA	$1, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x0000 00000 (<unknown line number>)	NOP
	0x0000 00000 (/usr/local/go/test/codegen/rotate.go:167)	MOVL	"".x+8(SP), AX
	0x0004 00004 (/usr/local/go/test/codegen/rotate.go:167)	MOVL	AX, CX
	0x0006 00006 (/usr/local/go/test/codegen/rotate.go:167)	ROLL	$7, AX
	0x0009 00009 (/usr/local/go/test/codegen/rotate.go:167)	ROLL	$25, CX
	0x000c 00012 (/usr/local/go/test/codegen/rotate.go:167)	ADDL	CX, AX
	0x000e 00014 (/usr/local/go/test/codegen/rotate.go:167)	MOVL	AX, "".~r1+16(SP)
	0x0012 00018 (/usr/local/go/test/codegen/rotate.go:167)	RET
	0x0000 8b 44 24 08 89 c1 c1 c0 07 c1 c1 19 01 c8 89 44  .D$............D
	0x0010 24 10 c3                                         $..
go.cuinfo.packagename.command-line-arguments SDWARFINFO dupok size=0
	0x0000 63 6f 64 65 67 65 6e                             codegen
go.info."".rot32nc$abstract SDWARFINFO dupok size=59
	0x0000 04 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 72 6f 74 33 32 6e 63 00  guments.rot32nc.
	0x0020 01 01 11 78 00 00 00 00 00 00 11 7a 00 00 00 00  ...x.......z....
	0x0030 00 00 0c 61 00 79 00 00 00 00 00                 ...a.y.....
	rel 38+4 t=29 go.info.uint32+0
	rel 46+4 t=29 go.info.uint+0
	rel 54+4 t=29 go.info.uint32+0
gclocals·33cdeccccebe80329f1fdbee7f5874cb SRODATA dupok size=8
	0x0000 01 00 00 00 00 00 00 00                          ........
aux for "".rot64 SDWARFLOC size=102
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 16 00 00 00 00 00 00 00 23 00 00 00 00 00 00 00  ........#.......
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 23 00 00 00 00  ...........#....
	0x0050 00 00 00 01 00 9c 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00                                ......
	rel 8+8 t=1 "".rot64+0
	rel 59+8 t=1 "".rot64+0
aux for "".rot64 SDWARFLINES size=28
	0x0000 04 02 03 0f 14 06 41 06 03 02 5a 06 2d 06 03 02  ......A...Z.-...
	0x0010 5a 06 37 06 2f 06 41 02 01 00 01 01              Z.7./.A.....
aux for "".rot64 SDWARFINFO size=91
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 72 6f 74 36 34 00 00 00  guments.rot64...
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 9c  ................
	0x0030 02 00 00 00 01 0b 61 00 0e 00 00 00 00 00 00 00  ......a.........
	0x0040 00 10 78 00 00 0d 00 00 00 00 00 00 00 00 0f 7e  ..x............~
	0x0050 72 31 00 01 0d 00 00 00 00 00 00                 r1.........
	rel 0+0 t=24 type.uint64+0
	rel 30+8 t=1 "".rot64+0
	rel 38+8 t=1 "".rot64+35
	rel 57+4 t=29 go.info.uint64+0
	rel 61+4 t=29 +0
	rel 70+4 t=29 go.info.uint64+0
	rel 74+4 t=29 +51
	rel 85+4 t=29 go.info.uint64+0
aux for "".rot32 SDWARFLOC size=102
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 10 00 00 00 00 00 00 00 1a 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 1a 00 00 00 00  ................
	0x0050 00 00 00 01 00 9c 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00                                ......
	rel 8+8 t=1 "".rot32+0
	rel 59+8 t=1 "".rot32+0
aux for "".rot32 SDWARFLINES size=28
	0x0000 04 02 03 2b 14 06 37 06 03 03 46 06 23 06 03 03  ...+..7...F.#...
	0x0010 46 06 2d 06 25 06 37 02 01 00 01 01              F.-.%.7.....
aux for "".rot32 SDWARFINFO size=91
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 72 6f 74 33 32 00 00 00  guments.rot32...
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 9c  ................
	0x0030 02 00 00 00 01 0b 61 00 29 00 00 00 00 00 00 00  ......a.).......
	0x0040 00 10 78 00 00 28 00 00 00 00 00 00 00 00 0f 7e  ..x..(.........~
	0x0050 72 31 00 01 28 00 00 00 00 00 00                 r1..(......
	rel 0+0 t=24 type.uint32+0
	rel 30+8 t=1 "".rot32+0
	rel 38+8 t=1 "".rot32+26
	rel 57+4 t=29 go.info.uint32+0
	rel 61+4 t=29 +0
	rel 70+4 t=29 go.info.uint32+0
	rel 74+4 t=29 +51
	rel 85+4 t=29 go.info.uint32+0
aux for "".rot16 SDWARFLOC size=102
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 13 00 00 00 00 00 00 00 1f 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 1f 00 00 00 00  ................
	0x0050 00 00 00 01 00 9c 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00                                ......
	rel 8+8 t=1 "".rot16+0
	rel 59+8 t=1 "".rot16+0
aux for "".rot16 SDWARFLINES size=25
	0x0000 04 02 03 c4 00 14 06 41 06 4e 06 23 06 4e 06 37  .......A.N.#.N.7
	0x0010 06 25 06 41 02 01 00 01 01                       .%.A.....
aux for "".rot16 SDWARFINFO size=91
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 72 6f 74 31 36 00 00 00  guments.rot16...
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 9c  ................
	0x0030 02 00 00 00 01 0b 61 00 47 00 00 00 00 00 00 00  ......a.G.......
	0x0040 00 10 78 00 00 46 00 00 00 00 00 00 00 00 0f 7e  ..x..F.........~
	0x0050 72 31 00 01 46 00 00 00 00 00 00                 r1..F......
	rel 0+0 t=24 type.uint16+0
	rel 30+8 t=1 "".rot16+0
	rel 38+8 t=1 "".rot16+31
	rel 57+4 t=29 go.info.uint16+0
	rel 61+4 t=29 +0
	rel 70+4 t=29 go.info.uint16+0
	rel 74+4 t=29 +51
	rel 85+4 t=29 go.info.uint16+0
aux for "".rot8 SDWARFLOC size=102
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 11 00 00 00 00 00 00 00 1b 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 1b 00 00 00 00  ................
	0x0050 00 00 00 01 00 9c 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00                                ......
	rel 8+8 t=1 "".rot8+0
	rel 59+8 t=1 "".rot8+0
aux for "".rot8 SDWARFLINES size=25
	0x0000 04 02 03 d3 00 14 06 41 06 44 06 23 06 44 06 2d  .......A.D.#.D.-
	0x0010 06 25 06 37 02 01 00 01 01                       .%.7.....
aux for "".rot8 SDWARFINFO size=90
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 72 6f 74 38 00 00 00 00  guments.rot8....
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 01 9c 02  ................
	0x0030 00 00 00 01 0b 61 00 56 00 00 00 00 00 00 00 00  .....a.V........
	0x0040 10 78 00 00 55 00 00 00 00 00 00 00 00 0f 7e 72  .x..U.........~r
	0x0050 31 00 01 55 00 00 00 00 00 00                    1..U......
	rel 0+0 t=24 type.uint8+0
	rel 29+8 t=1 "".rot8+0
	rel 37+8 t=1 "".rot8+27
	rel 56+4 t=29 go.info.uint8+0
	rel 60+4 t=29 +0
	rel 69+4 t=29 go.info.uint8+0
	rel 73+4 t=29 +51
	rel 84+4 t=29 go.info.uint8+0
aux for "".rot64nc SDWARFLOC size=154
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 16 00 00 00 00 00 00 00 1c 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 1c 00 00 00 00  ................
	0x0050 00 00 00 01 00 9c 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 1c 00  ................
	0x0080 00 00 00 00 00 00 02 00 91 08 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00                    ..........
	rel 8+8 t=1 "".rot64nc+0
	rel 59+8 t=1 "".rot64nc+0
	rel 110+8 t=1 "".rot64nc+0
aux for "".rot64nc SDWARFLINES size=21
	0x0000 04 02 03 ea 00 14 06 41 06 80 06 2d 06 2f 06 41  .......A...-./.A
	0x0010 02 01 00 01 01                                   .....
aux for "".rot64nc SDWARFINFO size=106
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 72 6f 74 36 34 6e 63 00  guments.rot64nc.
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 01 9c 02 00 00 00 01 0b 61 00 69 00 00 00 00 00  ........a.i.....
	0x0040 00 00 00 10 78 00 00 68 00 00 00 00 00 00 00 00  ....x..h........
	0x0050 10 7a 00 00 68 00 00 00 00 00 00 00 00 0f 7e 72  .z..h.........~r
	0x0060 32 00 01 68 00 00 00 00 00 00                    2..h......
	rel 0+0 t=24 type.uint+0
	rel 0+0 t=24 type.uint64+0
	rel 32+8 t=1 "".rot64nc+0
	rel 40+8 t=1 "".rot64nc+28
	rel 59+4 t=29 go.info.uint64+0
	rel 63+4 t=29 +0
	rel 72+4 t=29 go.info.uint64+0
	rel 76+4 t=29 +51
	rel 85+4 t=29 go.info.uint+0
	rel 89+4 t=29 +102
	rel 100+4 t=29 go.info.uint64+0
aux for "".rot32nc SDWARFLOC size=154
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 16 00 00 00 00 00 00 00  ................
	0x0020 01 00 9c 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 16 00 00 00 00  ................
	0x0050 00 00 00 02 00 91 08 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00  ................
	0x0070 00 00 00 00 00 00 00 11 00 00 00 00 00 00 00 16  ................
	0x0080 00 00 00 00 00 00 00 01 00 50 00 00 00 00 00 00  .........P......
	0x0090 00 00 00 00 00 00 00 00 00 00                    ..........
	rel 8+8 t=1 "".rot32nc+0
	rel 59+8 t=1 "".rot32nc+0
	rel 111+8 t=1 "".rot32nc+0
aux for "".rot32nc SDWARFLINES size=21
	0x0000 04 02 03 fa 00 14 06 41 06 62 06 23 06 25 06 37  .......A.b.#.%.7
	0x0010 02 01 00 01 01                                   .....
aux for "".rot32nc SDWARFINFO size=63
	0x0000 05 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 01 9c 13 00 00 00 00 00 00 00 00  ................
	0x0020 13 00 00 00 00 00 00 00 00 0f 7e 72 32 00 01 78  ..........~r2..x
	0x0030 00 00 00 00 00 0e 00 00 00 00 00 00 00 00 00     ...............
	rel 0+0 t=24 type.uint+0
	rel 0+0 t=24 type.uint32+0
	rel 1+4 t=29 go.info."".rot32nc$abstract+0
	rel 5+8 t=1 "".rot32nc+0
	rel 13+8 t=1 "".rot32nc+22
	rel 24+4 t=29 go.info."".rot32nc$abstract+34
	rel 28+4 t=29 +0
	rel 33+4 t=29 go.info."".rot32nc$abstract+42
	rel 37+4 t=29 +51
	rel 48+4 t=29 go.info.uint32+0
	rel 54+4 t=29 go.info."".rot32nc$abstract+50
	rel 58+4 t=29 +103
aux for "".rot16nc SDWARFLOC size=154
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 14 00 00 00 00 00 00 00 1a 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 1a 00 00 00 00  ................
	0x0050 00 00 00 01 00 9c 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 1a 00  ................
	0x0080 00 00 00 00 00 00 02 00 91 08 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00                    ..........
	rel 8+8 t=1 "".rot16nc+0
	rel 59+8 t=1 "".rot16nc+0
	rel 110+8 t=1 "".rot16nc+0
aux for "".rot16nc SDWARFLINES size=21
	0x0000 04 02 03 88 01 14 06 41 06 76 06 2d 06 25 06 41  .......A.v.-.%.A
	0x0010 02 01 00 01 01                                   .....
aux for "".rot16nc SDWARFINFO size=110
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 72 6f 74 31 36 6e 63 00  guments.rot16nc.
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 01 9c 02 00 00 00 01 0b 61 00 89 01 00 00 00 00  ........a.......
	0x0040 00 00 00 00 10 78 00 00 88 01 00 00 00 00 00 00  .....x..........
	0x0050 00 00 10 7a 00 00 88 01 00 00 00 00 00 00 00 00  ...z............
	0x0060 0f 7e 72 32 00 01 88 01 00 00 00 00 00 00        .~r2..........
	rel 0+0 t=24 type.uint+0
	rel 0+0 t=24 type.uint16+0
	rel 32+8 t=1 "".rot16nc+0
	rel 40+8 t=1 "".rot16nc+26
	rel 60+4 t=29 go.info.uint16+0
	rel 64+4 t=29 +0
	rel 74+4 t=29 go.info.uint16+0
	rel 78+4 t=29 +51
	rel 88+4 t=29 go.info.uint+0
	rel 92+4 t=29 +102
	rel 104+4 t=29 go.info.uint16+0
aux for "".rot8nc SDWARFLOC size=154
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 12 00 00 00 00 00 00 00 17 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 17 00 00 00 00  ................
	0x0050 00 00 00 01 00 9c 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 17 00  ................
	0x0080 00 00 00 00 00 00 02 00 91 08 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00                    ..........
	rel 8+8 t=1 "".rot8nc+0
	rel 59+8 t=1 "".rot8nc+0
	rel 110+8 t=1 "".rot8nc+0
aux for "".rot8nc SDWARFLINES size=21
	0x0000 04 02 03 96 01 14 06 41 06 6c 06 23 06 25 06 37  .......A.l.#.%.7
	0x0010 02 01 00 01 01                                   .....
aux for "".rot8nc SDWARFINFO size=109
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 72 6f 74 38 6e 63 00 00  guments.rot8nc..
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01  ................
	0x0030 9c 02 00 00 00 01 0b 61 00 97 01 00 00 00 00 00  .......a........
	0x0040 00 00 00 10 78 00 00 96 01 00 00 00 00 00 00 00  ....x...........
	0x0050 00 10 7a 00 00 96 01 00 00 00 00 00 00 00 00 0f  ..z.............
	0x0060 7e 72 32 00 01 96 01 00 00 00 00 00 00           ~r2..........
	rel 0+0 t=24 type.uint+0
	rel 0+0 t=24 type.uint8+0
	rel 31+8 t=1 "".rot8nc+0
	rel 39+8 t=1 "".rot8nc+23
	rel 59+4 t=29 go.info.uint8+0
	rel 63+4 t=29 +0
	rel 73+4 t=29 go.info.uint8+0
	rel 77+4 t=29 +51
	rel 87+4 t=29 go.info.uint+0
	rel 91+4 t=29 +102
	rel 103+4 t=29 go.info.uint8+0
aux for "".f32 SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 13 00 00 00 00 00 00 00  ................
	0x0020 01 00 9c 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 13 00 00 00 00  ................
	0x0050 00 00 00 01 00 9c 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 0e 00 00 00 00 00 00 00 13 00  ................
	0x0080 00 00 00 00 00 00 01 00 50 00 00 00 00 00 00 00  ........P.......
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=1 "".f32+0
	rel 59+8 t=1 "".f32+0
	rel 110+8 t=1 "".f32+0
aux for "".f32 SDWARFLINES size=26
	0x0000 04 02 03 a1 01 14 03 5d 33 06 23 06 30 06 2d 06  .......]3.#.0.-.
	0x0010 03 1f 28 06 37 02 01 00 01 01                    ..(.7.....
aux for "".f32 SDWARFINFO size=125
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 66 33 32 00 00 00 00 00  guments.f32.....
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 01 9c 02 00  ................
	0x0030 00 00 01 10 78 00 00 a5 01 00 00 00 00 00 00 00  ....x...........
	0x0040 00 0f 7e 72 31 00 01 a5 01 00 00 00 00 00 06 00  ..~r1...........
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 02 00 00 00 a7 01 13 00 00 00 00 00 00  ................
	0x0070 00 00 0e 00 00 00 00 00 00 00 00 00 00           .............
	rel 0+0 t=24 type.uint32+0
	rel 28+8 t=1 "".f32+0
	rel 36+8 t=1 "".f32+19
	rel 57+4 t=29 go.info.uint32+0
	rel 61+4 t=29 +0
	rel 73+4 t=29 go.info.uint32+0
	rel 79+4 t=29 go.info."".rot32nc$abstract+0
	rel 83+8 t=1 "".f32+4
	rel 91+8 t=1 "".f32+14
	rel 106+4 t=29 go.info."".rot32nc$abstract+34
	rel 110+4 t=29 +51
	rel 115+4 t=29 go.info."".rot32nc$abstract+50
	rel 119+4 t=29 +102
