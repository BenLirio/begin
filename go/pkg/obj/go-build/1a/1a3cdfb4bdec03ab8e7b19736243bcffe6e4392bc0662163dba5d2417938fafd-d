# command-line-arguments
"".load_le64 STEXT nosplit size=61 args=0x18 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:22)	TEXT	"".load_le64(SB), NOSPLIT|ABIInternal, $24-24
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:22)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:22)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:22)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:22)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:22)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (<unknown line number>)	NOP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:27)	MOVQ	"".b+40(SP), CX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:27)	CMPQ	CX, $7
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:27)	JLS	50
	0x0019 00025 (/usr/local/go/test/codegen/memcombine.go:27)	MOVQ	"".b+32(SP), AX
	0x001e 00030 (/usr/local/go/test/codegen/memcombine.go:27)	MOVQ	(AX), AX
	0x0021 00033 (/usr/local/go/test/codegen/memcombine.go:27)	MOVQ	AX, "".sink64(SB)
	0x0028 00040 (/usr/local/go/test/codegen/memcombine.go:28)	MOVQ	16(SP), BP
	0x002d 00045 (/usr/local/go/test/codegen/memcombine.go:28)	ADDQ	$24, SP
	0x0031 00049 (/usr/local/go/test/codegen/memcombine.go:28)	RET
	0x0032 00050 (/usr/local/go/test/codegen/memcombine.go:27)	MOVL	$7, AX
	0x0037 00055 (/usr/local/go/test/codegen/memcombine.go:27)	PCDATA	$1, $1
	0x0037 00055 (/usr/local/go/test/codegen/memcombine.go:27)	CALL	runtime.panicIndex(SB)
	0x003c 00060 (/usr/local/go/test/codegen/memcombine.go:27)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 4c 24 28 48 83 f9 07 76 19 48 8b 44 24 20 48 8b  L$(H...v.H.D$ H.
	0x0020 00 48 89 05 00 00 00 00 48 8b 6c 24 10 48 83 c4  .H......H.l$.H..
	0x0030 18 c3 b8 07 00 00 00 e8 00 00 00 00 90           .............
	rel 36+4 t=16 "".sink64+0
	rel 56+4 t=8 runtime.panicIndex+0
"".load_le64_idx STEXT nosplit size=102 args=0x20 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:30)	TEXT	"".load_le64_idx(SB), NOSPLIT|ABIInternal, $24-32
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:30)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:30)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:30)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:30)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:30)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:35)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:35)	MOVQ	"".b+40(SP), CX
	0x0018 00024 (/usr/local/go/test/codegen/memcombine.go:35)	CMPQ	AX, CX
	0x001b 00027 (/usr/local/go/test/codegen/memcombine.go:35)	JHI	96
	0x001d 00029 (<unknown line number>)	NOP
	0x001d 00029 (/usr/local/go/test/codegen/memcombine.go:35)	SUBQ	AX, CX
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:35)	MOVQ	"".b+48(SP), DX
	0x0025 00037 (/usr/local/go/test/codegen/memcombine.go:35)	MOVQ	AX, BX
	0x0028 00040 (/usr/local/go/test/codegen/memcombine.go:35)	SUBQ	DX, AX
	0x002b 00043 (/usr/local/go/test/codegen/memcombine.go:35)	SARQ	$63, AX
	0x002f 00047 (/usr/local/go/test/codegen/memcombine.go:35)	ANDQ	AX, BX
	0x0032 00050 (/usr/local/go/test/codegen/memcombine.go:35)	CMPQ	CX, $7
	0x0036 00054 (/usr/local/go/test/codegen/memcombine.go:35)	JLS	82
	0x0038 00056 (/usr/local/go/test/codegen/memcombine.go:35)	MOVQ	"".b+32(SP), AX
	0x003d 00061 (/usr/local/go/test/codegen/memcombine.go:35)	MOVQ	(AX)(BX*1), AX
	0x0041 00065 (/usr/local/go/test/codegen/memcombine.go:35)	MOVQ	AX, "".sink64(SB)
	0x0048 00072 (/usr/local/go/test/codegen/memcombine.go:36)	MOVQ	16(SP), BP
	0x004d 00077 (/usr/local/go/test/codegen/memcombine.go:36)	ADDQ	$24, SP
	0x0051 00081 (/usr/local/go/test/codegen/memcombine.go:36)	RET
	0x0052 00082 (/usr/local/go/test/codegen/memcombine.go:35)	MOVL	$7, AX
	0x0057 00087 (/usr/local/go/test/codegen/memcombine.go:35)	PCDATA	$1, $1
	0x0057 00087 (/usr/local/go/test/codegen/memcombine.go:35)	CALL	runtime.panicIndex(SB)
	0x005c 00092 (/usr/local/go/test/codegen/memcombine.go:35)	NOP
	0x0060 00096 (/usr/local/go/test/codegen/memcombine.go:35)	CALL	runtime.panicSliceB(SB)
	0x0065 00101 (/usr/local/go/test/codegen/memcombine.go:35)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 8b 4c 24 28 48 39 c8 77 43 48 29 c1  D$8H.L$(H9.wCH).
	0x0020 48 8b 54 24 30 48 89 c3 48 29 d0 48 c1 f8 3f 48  H.T$0H..H).H..?H
	0x0030 21 c3 48 83 f9 07 76 1a 48 8b 44 24 20 48 8b 04  !.H...v.H.D$ H..
	0x0040 18 48 89 05 00 00 00 00 48 8b 6c 24 10 48 83 c4  .H......H.l$.H..
	0x0050 18 c3 b8 07 00 00 00 e8 00 00 00 00 0f 1f 40 00  ..............@.
	0x0060 e8 00 00 00 00 90                                ......
	rel 68+4 t=16 "".sink64+0
	rel 88+4 t=8 runtime.panicIndex+0
	rel 97+4 t=8 runtime.panicSliceB+0
"".load_le32 STEXT nosplit size=59 args=0x18 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:38)	TEXT	"".load_le32(SB), NOSPLIT|ABIInternal, $24-24
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:38)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:38)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:38)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:38)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:38)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (<unknown line number>)	NOP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:44)	MOVQ	"".b+40(SP), CX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:44)	CMPQ	CX, $3
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:44)	JLS	48
	0x0019 00025 (/usr/local/go/test/codegen/memcombine.go:44)	MOVQ	"".b+32(SP), AX
	0x001e 00030 (/usr/local/go/test/codegen/memcombine.go:44)	MOVL	(AX), AX
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:44)	MOVL	AX, "".sink32(SB)
	0x0026 00038 (/usr/local/go/test/codegen/memcombine.go:45)	MOVQ	16(SP), BP
	0x002b 00043 (/usr/local/go/test/codegen/memcombine.go:45)	ADDQ	$24, SP
	0x002f 00047 (/usr/local/go/test/codegen/memcombine.go:45)	RET
	0x0030 00048 (/usr/local/go/test/codegen/memcombine.go:44)	MOVL	$3, AX
	0x0035 00053 (/usr/local/go/test/codegen/memcombine.go:44)	PCDATA	$1, $1
	0x0035 00053 (/usr/local/go/test/codegen/memcombine.go:44)	CALL	runtime.panicIndex(SB)
	0x003a 00058 (/usr/local/go/test/codegen/memcombine.go:44)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 4c 24 28 48 83 f9 03 76 17 48 8b 44 24 20 8b 00  L$(H...v.H.D$ ..
	0x0020 89 05 00 00 00 00 48 8b 6c 24 10 48 83 c4 18 c3  ......H.l$.H....
	0x0030 b8 03 00 00 00 e8 00 00 00 00 90                 ...........
	rel 34+4 t=16 "".sink32+0
	rel 54+4 t=8 runtime.panicIndex+0
"".load_le32_idx STEXT nosplit size=96 args=0x20 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:47)	TEXT	"".load_le32_idx(SB), NOSPLIT|ABIInternal, $24-32
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:47)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:47)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:47)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:47)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:47)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:53)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:53)	MOVQ	"".b+40(SP), CX
	0x0018 00024 (/usr/local/go/test/codegen/memcombine.go:53)	CMPQ	AX, CX
	0x001b 00027 (/usr/local/go/test/codegen/memcombine.go:53)	JHI	90
	0x001d 00029 (<unknown line number>)	NOP
	0x001d 00029 (/usr/local/go/test/codegen/memcombine.go:53)	SUBQ	AX, CX
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:53)	MOVQ	"".b+48(SP), DX
	0x0025 00037 (/usr/local/go/test/codegen/memcombine.go:53)	MOVQ	AX, BX
	0x0028 00040 (/usr/local/go/test/codegen/memcombine.go:53)	SUBQ	DX, AX
	0x002b 00043 (/usr/local/go/test/codegen/memcombine.go:53)	SARQ	$63, AX
	0x002f 00047 (/usr/local/go/test/codegen/memcombine.go:53)	ANDQ	AX, BX
	0x0032 00050 (/usr/local/go/test/codegen/memcombine.go:53)	CMPQ	CX, $3
	0x0036 00054 (/usr/local/go/test/codegen/memcombine.go:53)	JLS	80
	0x0038 00056 (/usr/local/go/test/codegen/memcombine.go:53)	MOVQ	"".b+32(SP), AX
	0x003d 00061 (/usr/local/go/test/codegen/memcombine.go:53)	MOVL	(AX)(BX*1), AX
	0x0040 00064 (/usr/local/go/test/codegen/memcombine.go:53)	MOVL	AX, "".sink32(SB)
	0x0046 00070 (/usr/local/go/test/codegen/memcombine.go:54)	MOVQ	16(SP), BP
	0x004b 00075 (/usr/local/go/test/codegen/memcombine.go:54)	ADDQ	$24, SP
	0x004f 00079 (/usr/local/go/test/codegen/memcombine.go:54)	RET
	0x0050 00080 (/usr/local/go/test/codegen/memcombine.go:53)	MOVL	$3, AX
	0x0055 00085 (/usr/local/go/test/codegen/memcombine.go:53)	PCDATA	$1, $1
	0x0055 00085 (/usr/local/go/test/codegen/memcombine.go:53)	CALL	runtime.panicIndex(SB)
	0x005a 00090 (/usr/local/go/test/codegen/memcombine.go:53)	CALL	runtime.panicSliceB(SB)
	0x005f 00095 (/usr/local/go/test/codegen/memcombine.go:53)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 8b 4c 24 28 48 39 c8 77 3d 48 29 c1  D$8H.L$(H9.w=H).
	0x0020 48 8b 54 24 30 48 89 c3 48 29 d0 48 c1 f8 3f 48  H.T$0H..H).H..?H
	0x0030 21 c3 48 83 f9 03 76 18 48 8b 44 24 20 8b 04 18  !.H...v.H.D$ ...
	0x0040 89 05 00 00 00 00 48 8b 6c 24 10 48 83 c4 18 c3  ......H.l$.H....
	0x0050 b8 03 00 00 00 e8 00 00 00 00 e8 00 00 00 00 90  ................
	rel 66+4 t=16 "".sink32+0
	rel 86+4 t=8 runtime.panicIndex+0
	rel 91+4 t=8 runtime.panicSliceB+0
"".load_le16 STEXT nosplit size=61 args=0x18 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:56)	TEXT	"".load_le16(SB), NOSPLIT|ABIInternal, $24-24
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:56)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:56)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:56)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:56)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:56)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (<unknown line number>)	NOP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:61)	MOVQ	"".b+40(SP), CX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:61)	CMPQ	CX, $1
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:61)	JLS	50
	0x0019 00025 (/usr/local/go/test/codegen/memcombine.go:61)	MOVQ	"".b+32(SP), AX
	0x001e 00030 (/usr/local/go/test/codegen/memcombine.go:61)	MOVWLZX	(AX), AX
	0x0021 00033 (/usr/local/go/test/codegen/memcombine.go:61)	MOVW	AX, "".sink16(SB)
	0x0028 00040 (/usr/local/go/test/codegen/memcombine.go:62)	MOVQ	16(SP), BP
	0x002d 00045 (/usr/local/go/test/codegen/memcombine.go:62)	ADDQ	$24, SP
	0x0031 00049 (/usr/local/go/test/codegen/memcombine.go:62)	RET
	0x0032 00050 (/usr/local/go/test/codegen/memcombine.go:61)	MOVL	$1, AX
	0x0037 00055 (/usr/local/go/test/codegen/memcombine.go:61)	PCDATA	$1, $1
	0x0037 00055 (/usr/local/go/test/codegen/memcombine.go:61)	CALL	runtime.panicIndex(SB)
	0x003c 00060 (/usr/local/go/test/codegen/memcombine.go:61)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 4c 24 28 48 83 f9 01 76 19 48 8b 44 24 20 0f b7  L$(H...v.H.D$ ..
	0x0020 00 66 89 05 00 00 00 00 48 8b 6c 24 10 48 83 c4  .f......H.l$.H..
	0x0030 18 c3 b8 01 00 00 00 e8 00 00 00 00 90           .............
	rel 36+4 t=16 "".sink16+0
	rel 56+4 t=8 runtime.panicIndex+0
"".load_le16_idx STEXT nosplit size=102 args=0x20 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:64)	TEXT	"".load_le16_idx(SB), NOSPLIT|ABIInternal, $24-32
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:64)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:64)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:64)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:64)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:64)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:69)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:69)	MOVQ	"".b+40(SP), CX
	0x0018 00024 (/usr/local/go/test/codegen/memcombine.go:69)	CMPQ	AX, CX
	0x001b 00027 (/usr/local/go/test/codegen/memcombine.go:69)	JHI	96
	0x001d 00029 (<unknown line number>)	NOP
	0x001d 00029 (/usr/local/go/test/codegen/memcombine.go:69)	SUBQ	AX, CX
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:69)	MOVQ	"".b+48(SP), DX
	0x0025 00037 (/usr/local/go/test/codegen/memcombine.go:69)	MOVQ	AX, BX
	0x0028 00040 (/usr/local/go/test/codegen/memcombine.go:69)	SUBQ	DX, AX
	0x002b 00043 (/usr/local/go/test/codegen/memcombine.go:69)	SARQ	$63, AX
	0x002f 00047 (/usr/local/go/test/codegen/memcombine.go:69)	ANDQ	AX, BX
	0x0032 00050 (/usr/local/go/test/codegen/memcombine.go:69)	CMPQ	CX, $1
	0x0036 00054 (/usr/local/go/test/codegen/memcombine.go:69)	JLS	82
	0x0038 00056 (/usr/local/go/test/codegen/memcombine.go:69)	MOVQ	"".b+32(SP), AX
	0x003d 00061 (/usr/local/go/test/codegen/memcombine.go:69)	MOVWLZX	(AX)(BX*1), AX
	0x0041 00065 (/usr/local/go/test/codegen/memcombine.go:69)	MOVW	AX, "".sink16(SB)
	0x0048 00072 (/usr/local/go/test/codegen/memcombine.go:70)	MOVQ	16(SP), BP
	0x004d 00077 (/usr/local/go/test/codegen/memcombine.go:70)	ADDQ	$24, SP
	0x0051 00081 (/usr/local/go/test/codegen/memcombine.go:70)	RET
	0x0052 00082 (/usr/local/go/test/codegen/memcombine.go:69)	MOVL	$1, AX
	0x0057 00087 (/usr/local/go/test/codegen/memcombine.go:69)	PCDATA	$1, $1
	0x0057 00087 (/usr/local/go/test/codegen/memcombine.go:69)	CALL	runtime.panicIndex(SB)
	0x005c 00092 (/usr/local/go/test/codegen/memcombine.go:69)	NOP
	0x0060 00096 (/usr/local/go/test/codegen/memcombine.go:69)	CALL	runtime.panicSliceB(SB)
	0x0065 00101 (/usr/local/go/test/codegen/memcombine.go:69)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 8b 4c 24 28 48 39 c8 77 43 48 29 c1  D$8H.L$(H9.wCH).
	0x0020 48 8b 54 24 30 48 89 c3 48 29 d0 48 c1 f8 3f 48  H.T$0H..H).H..?H
	0x0030 21 c3 48 83 f9 01 76 1a 48 8b 44 24 20 0f b7 04  !.H...v.H.D$ ...
	0x0040 18 66 89 05 00 00 00 00 48 8b 6c 24 10 48 83 c4  .f......H.l$.H..
	0x0050 18 c3 b8 01 00 00 00 e8 00 00 00 00 0f 1f 40 00  ..............@.
	0x0060 e8 00 00 00 00 90                                ......
	rel 68+4 t=16 "".sink16+0
	rel 88+4 t=8 runtime.panicIndex+0
	rel 97+4 t=8 runtime.panicSliceB+0
"".load_be64 STEXT nosplit size=64 args=0x18 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:72)	TEXT	"".load_be64(SB), NOSPLIT|ABIInternal, $24-24
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:72)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:72)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:72)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:72)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:72)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (<unknown line number>)	NOP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:77)	MOVQ	"".b+40(SP), CX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:77)	CMPQ	CX, $7
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:77)	JLS	53
	0x0019 00025 (/usr/local/go/test/codegen/memcombine.go:77)	MOVQ	"".b+32(SP), AX
	0x001e 00030 (/usr/local/go/test/codegen/memcombine.go:77)	MOVQ	(AX), AX
	0x0021 00033 (/usr/local/go/test/codegen/memcombine.go:77)	BSWAPQ	AX
	0x0024 00036 (/usr/local/go/test/codegen/memcombine.go:77)	MOVQ	AX, "".sink64(SB)
	0x002b 00043 (/usr/local/go/test/codegen/memcombine.go:78)	MOVQ	16(SP), BP
	0x0030 00048 (/usr/local/go/test/codegen/memcombine.go:78)	ADDQ	$24, SP
	0x0034 00052 (/usr/local/go/test/codegen/memcombine.go:78)	RET
	0x0035 00053 (/usr/local/go/test/codegen/memcombine.go:77)	MOVL	$7, AX
	0x003a 00058 (/usr/local/go/test/codegen/memcombine.go:77)	PCDATA	$1, $1
	0x003a 00058 (/usr/local/go/test/codegen/memcombine.go:77)	CALL	runtime.panicIndex(SB)
	0x003f 00063 (/usr/local/go/test/codegen/memcombine.go:77)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 4c 24 28 48 83 f9 07 76 1c 48 8b 44 24 20 48 8b  L$(H...v.H.D$ H.
	0x0020 00 48 0f c8 48 89 05 00 00 00 00 48 8b 6c 24 10  .H..H......H.l$.
	0x0030 48 83 c4 18 c3 b8 07 00 00 00 e8 00 00 00 00 90  H...............
	rel 39+4 t=16 "".sink64+0
	rel 59+4 t=8 runtime.panicIndex+0
"".load_be64_idx STEXT nosplit size=102 args=0x20 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:80)	TEXT	"".load_be64_idx(SB), NOSPLIT|ABIInternal, $24-32
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:80)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:80)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:80)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:80)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:80)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:85)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:85)	MOVQ	"".b+40(SP), CX
	0x0018 00024 (/usr/local/go/test/codegen/memcombine.go:85)	CMPQ	AX, CX
	0x001b 00027 (/usr/local/go/test/codegen/memcombine.go:85)	JHI	96
	0x001d 00029 (<unknown line number>)	NOP
	0x001d 00029 (/usr/local/go/test/codegen/memcombine.go:85)	SUBQ	AX, CX
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:85)	MOVQ	"".b+48(SP), DX
	0x0025 00037 (/usr/local/go/test/codegen/memcombine.go:85)	MOVQ	AX, BX
	0x0028 00040 (/usr/local/go/test/codegen/memcombine.go:85)	SUBQ	DX, AX
	0x002b 00043 (/usr/local/go/test/codegen/memcombine.go:85)	SARQ	$63, AX
	0x002f 00047 (/usr/local/go/test/codegen/memcombine.go:85)	ANDQ	AX, BX
	0x0032 00050 (/usr/local/go/test/codegen/memcombine.go:85)	CMPQ	CX, $7
	0x0036 00054 (/usr/local/go/test/codegen/memcombine.go:85)	JLS	85
	0x0038 00056 (/usr/local/go/test/codegen/memcombine.go:85)	MOVQ	"".b+32(SP), AX
	0x003d 00061 (/usr/local/go/test/codegen/memcombine.go:85)	MOVQ	(AX)(BX*1), AX
	0x0041 00065 (/usr/local/go/test/codegen/memcombine.go:85)	BSWAPQ	AX
	0x0044 00068 (/usr/local/go/test/codegen/memcombine.go:85)	MOVQ	AX, "".sink64(SB)
	0x004b 00075 (/usr/local/go/test/codegen/memcombine.go:86)	MOVQ	16(SP), BP
	0x0050 00080 (/usr/local/go/test/codegen/memcombine.go:86)	ADDQ	$24, SP
	0x0054 00084 (/usr/local/go/test/codegen/memcombine.go:86)	RET
	0x0055 00085 (/usr/local/go/test/codegen/memcombine.go:85)	MOVL	$7, AX
	0x005a 00090 (/usr/local/go/test/codegen/memcombine.go:85)	PCDATA	$1, $1
	0x005a 00090 (/usr/local/go/test/codegen/memcombine.go:85)	CALL	runtime.panicIndex(SB)
	0x005f 00095 (/usr/local/go/test/codegen/memcombine.go:85)	NOP
	0x0060 00096 (/usr/local/go/test/codegen/memcombine.go:85)	CALL	runtime.panicSliceB(SB)
	0x0065 00101 (/usr/local/go/test/codegen/memcombine.go:85)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 8b 4c 24 28 48 39 c8 77 43 48 29 c1  D$8H.L$(H9.wCH).
	0x0020 48 8b 54 24 30 48 89 c3 48 29 d0 48 c1 f8 3f 48  H.T$0H..H).H..?H
	0x0030 21 c3 48 83 f9 07 76 1d 48 8b 44 24 20 48 8b 04  !.H...v.H.D$ H..
	0x0040 18 48 0f c8 48 89 05 00 00 00 00 48 8b 6c 24 10  .H..H......H.l$.
	0x0050 48 83 c4 18 c3 b8 07 00 00 00 e8 00 00 00 00 90  H...............
	0x0060 e8 00 00 00 00 90                                ......
	rel 71+4 t=16 "".sink64+0
	rel 91+4 t=8 runtime.panicIndex+0
	rel 97+4 t=8 runtime.panicSliceB+0
"".load_be32 STEXT nosplit size=61 args=0x18 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:88)	TEXT	"".load_be32(SB), NOSPLIT|ABIInternal, $24-24
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:88)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:88)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:88)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:88)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:88)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (<unknown line number>)	NOP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:93)	MOVQ	"".b+40(SP), CX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:93)	CMPQ	CX, $3
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:93)	JLS	50
	0x0019 00025 (/usr/local/go/test/codegen/memcombine.go:93)	MOVQ	"".b+32(SP), AX
	0x001e 00030 (/usr/local/go/test/codegen/memcombine.go:93)	MOVL	(AX), AX
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:93)	BSWAPL	AX
	0x0022 00034 (/usr/local/go/test/codegen/memcombine.go:93)	MOVL	AX, "".sink32(SB)
	0x0028 00040 (/usr/local/go/test/codegen/memcombine.go:94)	MOVQ	16(SP), BP
	0x002d 00045 (/usr/local/go/test/codegen/memcombine.go:94)	ADDQ	$24, SP
	0x0031 00049 (/usr/local/go/test/codegen/memcombine.go:94)	RET
	0x0032 00050 (/usr/local/go/test/codegen/memcombine.go:93)	MOVL	$3, AX
	0x0037 00055 (/usr/local/go/test/codegen/memcombine.go:93)	PCDATA	$1, $1
	0x0037 00055 (/usr/local/go/test/codegen/memcombine.go:93)	CALL	runtime.panicIndex(SB)
	0x003c 00060 (/usr/local/go/test/codegen/memcombine.go:93)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 4c 24 28 48 83 f9 03 76 19 48 8b 44 24 20 8b 00  L$(H...v.H.D$ ..
	0x0020 0f c8 89 05 00 00 00 00 48 8b 6c 24 10 48 83 c4  ........H.l$.H..
	0x0030 18 c3 b8 03 00 00 00 e8 00 00 00 00 90           .............
	rel 36+4 t=16 "".sink32+0
	rel 56+4 t=8 runtime.panicIndex+0
"".load_be32_idx STEXT nosplit size=102 args=0x20 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:96)	TEXT	"".load_be32_idx(SB), NOSPLIT|ABIInternal, $24-32
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:96)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:96)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:96)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:96)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:96)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:101)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:101)	MOVQ	"".b+40(SP), CX
	0x0018 00024 (/usr/local/go/test/codegen/memcombine.go:101)	CMPQ	AX, CX
	0x001b 00027 (/usr/local/go/test/codegen/memcombine.go:101)	JHI	96
	0x001d 00029 (<unknown line number>)	NOP
	0x001d 00029 (/usr/local/go/test/codegen/memcombine.go:101)	SUBQ	AX, CX
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:101)	MOVQ	"".b+48(SP), DX
	0x0025 00037 (/usr/local/go/test/codegen/memcombine.go:101)	MOVQ	AX, BX
	0x0028 00040 (/usr/local/go/test/codegen/memcombine.go:101)	SUBQ	DX, AX
	0x002b 00043 (/usr/local/go/test/codegen/memcombine.go:101)	SARQ	$63, AX
	0x002f 00047 (/usr/local/go/test/codegen/memcombine.go:101)	ANDQ	AX, BX
	0x0032 00050 (/usr/local/go/test/codegen/memcombine.go:101)	CMPQ	CX, $3
	0x0036 00054 (/usr/local/go/test/codegen/memcombine.go:101)	JLS	82
	0x0038 00056 (/usr/local/go/test/codegen/memcombine.go:101)	MOVQ	"".b+32(SP), AX
	0x003d 00061 (/usr/local/go/test/codegen/memcombine.go:101)	MOVL	(AX)(BX*1), AX
	0x0040 00064 (/usr/local/go/test/codegen/memcombine.go:101)	BSWAPL	AX
	0x0042 00066 (/usr/local/go/test/codegen/memcombine.go:101)	MOVL	AX, "".sink32(SB)
	0x0048 00072 (/usr/local/go/test/codegen/memcombine.go:102)	MOVQ	16(SP), BP
	0x004d 00077 (/usr/local/go/test/codegen/memcombine.go:102)	ADDQ	$24, SP
	0x0051 00081 (/usr/local/go/test/codegen/memcombine.go:102)	RET
	0x0052 00082 (/usr/local/go/test/codegen/memcombine.go:101)	MOVL	$3, AX
	0x0057 00087 (/usr/local/go/test/codegen/memcombine.go:101)	PCDATA	$1, $1
	0x0057 00087 (/usr/local/go/test/codegen/memcombine.go:101)	CALL	runtime.panicIndex(SB)
	0x005c 00092 (/usr/local/go/test/codegen/memcombine.go:101)	NOP
	0x0060 00096 (/usr/local/go/test/codegen/memcombine.go:101)	CALL	runtime.panicSliceB(SB)
	0x0065 00101 (/usr/local/go/test/codegen/memcombine.go:101)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 8b 4c 24 28 48 39 c8 77 43 48 29 c1  D$8H.L$(H9.wCH).
	0x0020 48 8b 54 24 30 48 89 c3 48 29 d0 48 c1 f8 3f 48  H.T$0H..H).H..?H
	0x0030 21 c3 48 83 f9 03 76 1a 48 8b 44 24 20 8b 04 18  !.H...v.H.D$ ...
	0x0040 0f c8 89 05 00 00 00 00 48 8b 6c 24 10 48 83 c4  ........H.l$.H..
	0x0050 18 c3 b8 03 00 00 00 e8 00 00 00 00 0f 1f 40 00  ..............@.
	0x0060 e8 00 00 00 00 90                                ......
	rel 68+4 t=16 "".sink32+0
	rel 88+4 t=8 runtime.panicIndex+0
	rel 97+4 t=8 runtime.panicSliceB+0
"".load_be16 STEXT nosplit size=70 args=0x18 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:104)	TEXT	"".load_be16(SB), NOSPLIT|ABIInternal, $24-24
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:104)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:104)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:104)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:104)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:104)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (<unknown line number>)	NOP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:109)	MOVQ	"".b+40(SP), CX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:109)	CMPQ	CX, $1
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:109)	JLS	54
	0x0019 00025 (/usr/local/go/test/codegen/memcombine.go:109)	MOVQ	"".b+32(SP), AX
	0x001e 00030 (/usr/local/go/test/codegen/memcombine.go:109)	MOVWLZX	(AX), AX
	0x0021 00033 (/usr/local/go/test/codegen/memcombine.go:109)	ROLW	$8, AX
	0x0025 00037 (/usr/local/go/test/codegen/memcombine.go:109)	MOVW	AX, "".sink16(SB)
	0x002c 00044 (/usr/local/go/test/codegen/memcombine.go:110)	MOVQ	16(SP), BP
	0x0031 00049 (/usr/local/go/test/codegen/memcombine.go:110)	ADDQ	$24, SP
	0x0035 00053 (/usr/local/go/test/codegen/memcombine.go:110)	RET
	0x0036 00054 (/usr/local/go/test/codegen/memcombine.go:109)	MOVL	$1, AX
	0x003b 00059 (/usr/local/go/test/codegen/memcombine.go:109)	PCDATA	$1, $1
	0x003b 00059 (/usr/local/go/test/codegen/memcombine.go:109)	NOP
	0x0040 00064 (/usr/local/go/test/codegen/memcombine.go:109)	CALL	runtime.panicIndex(SB)
	0x0045 00069 (/usr/local/go/test/codegen/memcombine.go:109)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 4c 24 28 48 83 f9 01 76 1d 48 8b 44 24 20 0f b7  L$(H...v.H.D$ ..
	0x0020 00 66 c1 c0 08 66 89 05 00 00 00 00 48 8b 6c 24  .f...f......H.l$
	0x0030 10 48 83 c4 18 c3 b8 01 00 00 00 0f 1f 44 00 00  .H...........D..
	0x0040 e8 00 00 00 00 90                                ......
	rel 40+4 t=16 "".sink16+0
	rel 65+4 t=8 runtime.panicIndex+0
"".load_be16_idx STEXT nosplit size=107 args=0x20 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:112)	TEXT	"".load_be16_idx(SB), NOSPLIT|ABIInternal, $24-32
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:112)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:112)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:112)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:112)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:112)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:117)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:117)	MOVQ	"".b+40(SP), CX
	0x0018 00024 (/usr/local/go/test/codegen/memcombine.go:117)	CMPQ	AX, CX
	0x001b 00027 (/usr/local/go/test/codegen/memcombine.go:117)	JHI	101
	0x001d 00029 (<unknown line number>)	NOP
	0x001d 00029 (/usr/local/go/test/codegen/memcombine.go:117)	SUBQ	AX, CX
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:117)	MOVQ	"".b+48(SP), DX
	0x0025 00037 (/usr/local/go/test/codegen/memcombine.go:117)	MOVQ	AX, BX
	0x0028 00040 (/usr/local/go/test/codegen/memcombine.go:117)	SUBQ	DX, AX
	0x002b 00043 (/usr/local/go/test/codegen/memcombine.go:117)	SARQ	$63, AX
	0x002f 00047 (/usr/local/go/test/codegen/memcombine.go:117)	ANDQ	AX, BX
	0x0032 00050 (/usr/local/go/test/codegen/memcombine.go:117)	CMPQ	CX, $1
	0x0036 00054 (/usr/local/go/test/codegen/memcombine.go:117)	JLS	86
	0x0038 00056 (/usr/local/go/test/codegen/memcombine.go:117)	MOVQ	"".b+32(SP), AX
	0x003d 00061 (/usr/local/go/test/codegen/memcombine.go:117)	MOVWLZX	(AX)(BX*1), AX
	0x0041 00065 (/usr/local/go/test/codegen/memcombine.go:117)	ROLW	$8, AX
	0x0045 00069 (/usr/local/go/test/codegen/memcombine.go:117)	MOVW	AX, "".sink16(SB)
	0x004c 00076 (/usr/local/go/test/codegen/memcombine.go:118)	MOVQ	16(SP), BP
	0x0051 00081 (/usr/local/go/test/codegen/memcombine.go:118)	ADDQ	$24, SP
	0x0055 00085 (/usr/local/go/test/codegen/memcombine.go:118)	RET
	0x0056 00086 (/usr/local/go/test/codegen/memcombine.go:117)	MOVL	$1, AX
	0x005b 00091 (/usr/local/go/test/codegen/memcombine.go:117)	PCDATA	$1, $1
	0x005b 00091 (/usr/local/go/test/codegen/memcombine.go:117)	NOP
	0x0060 00096 (/usr/local/go/test/codegen/memcombine.go:117)	CALL	runtime.panicIndex(SB)
	0x0065 00101 (/usr/local/go/test/codegen/memcombine.go:117)	CALL	runtime.panicSliceB(SB)
	0x006a 00106 (/usr/local/go/test/codegen/memcombine.go:117)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 8b 4c 24 28 48 39 c8 77 48 48 29 c1  D$8H.L$(H9.wHH).
	0x0020 48 8b 54 24 30 48 89 c3 48 29 d0 48 c1 f8 3f 48  H.T$0H..H).H..?H
	0x0030 21 c3 48 83 f9 01 76 1e 48 8b 44 24 20 0f b7 04  !.H...v.H.D$ ...
	0x0040 18 66 c1 c0 08 66 89 05 00 00 00 00 48 8b 6c 24  .f...f......H.l$
	0x0050 10 48 83 c4 18 c3 b8 01 00 00 00 0f 1f 44 00 00  .H...........D..
	0x0060 e8 00 00 00 00 e8 00 00 00 00 90                 ...........
	rel 72+4 t=16 "".sink16+0
	rel 97+4 t=8 runtime.panicIndex+0
	rel 102+4 t=8 runtime.panicSliceB+0
"".load_le_byte2_uint16 STEXT nosplit size=71 args=0x20 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:120)	TEXT	"".load_le_byte2_uint16(SB), NOSPLIT|ABIInternal, $24-32
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:120)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:120)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:120)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:120)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:120)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:125)	MOVQ	"".s+40(SP), CX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:125)	TESTQ	CX, CX
	0x0016 00022 (/usr/local/go/test/codegen/memcombine.go:125)	JLS	63
	0x0018 00024 (/usr/local/go/test/codegen/memcombine.go:125)	CMPQ	CX, $1
	0x001c 00028 (/usr/local/go/test/codegen/memcombine.go:125)	JLS	53
	0x001e 00030 (/usr/local/go/test/codegen/memcombine.go:125)	MOVQ	"".s+32(SP), AX
	0x0023 00035 (/usr/local/go/test/codegen/memcombine.go:125)	MOVWLZX	(AX), AX
	0x0026 00038 (/usr/local/go/test/codegen/memcombine.go:125)	MOVW	AX, "".~r1+56(SP)
	0x002b 00043 (/usr/local/go/test/codegen/memcombine.go:125)	MOVQ	16(SP), BP
	0x0030 00048 (/usr/local/go/test/codegen/memcombine.go:125)	ADDQ	$24, SP
	0x0034 00052 (/usr/local/go/test/codegen/memcombine.go:125)	RET
	0x0035 00053 (/usr/local/go/test/codegen/memcombine.go:125)	MOVL	$1, AX
	0x003a 00058 (/usr/local/go/test/codegen/memcombine.go:125)	PCDATA	$1, $1
	0x003a 00058 (/usr/local/go/test/codegen/memcombine.go:125)	CALL	runtime.panicIndex(SB)
	0x003f 00063 (/usr/local/go/test/codegen/memcombine.go:125)	XORL	AX, AX
	0x0041 00065 (/usr/local/go/test/codegen/memcombine.go:125)	CALL	runtime.panicIndex(SB)
	0x0046 00070 (/usr/local/go/test/codegen/memcombine.go:125)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 4c 24 28 48 85 c9 76 27 48 83 f9 01 76 17 48 8b  L$(H..v'H...v.H.
	0x0020 44 24 20 0f b7 00 66 89 44 24 38 48 8b 6c 24 10  D$ ...f.D$8H.l$.
	0x0030 48 83 c4 18 c3 b8 01 00 00 00 e8 00 00 00 00 31  H..............1
	0x0040 c0 e8 00 00 00 00 90                             .......
	rel 59+4 t=8 runtime.panicIndex+0
	rel 66+4 t=8 runtime.panicIndex+0
"".load_le_byte2_uint16_inv STEXT nosplit size=59 args=0x20 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:128)	TEXT	"".load_le_byte2_uint16_inv(SB), NOSPLIT|ABIInternal, $24-32
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:128)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:128)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:128)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:128)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:128)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:133)	MOVQ	"".s+40(SP), CX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:133)	CMPQ	CX, $1
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:133)	JLS	48
	0x0019 00025 (/usr/local/go/test/codegen/memcombine.go:133)	MOVQ	"".s+32(SP), AX
	0x001e 00030 (/usr/local/go/test/codegen/memcombine.go:133)	MOVWLZX	(AX), AX
	0x0021 00033 (/usr/local/go/test/codegen/memcombine.go:133)	MOVW	AX, "".~r1+56(SP)
	0x0026 00038 (/usr/local/go/test/codegen/memcombine.go:133)	MOVQ	16(SP), BP
	0x002b 00043 (/usr/local/go/test/codegen/memcombine.go:133)	ADDQ	$24, SP
	0x002f 00047 (/usr/local/go/test/codegen/memcombine.go:133)	RET
	0x0030 00048 (/usr/local/go/test/codegen/memcombine.go:133)	MOVL	$1, AX
	0x0035 00053 (/usr/local/go/test/codegen/memcombine.go:133)	PCDATA	$1, $1
	0x0035 00053 (/usr/local/go/test/codegen/memcombine.go:133)	CALL	runtime.panicIndex(SB)
	0x003a 00058 (/usr/local/go/test/codegen/memcombine.go:133)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 4c 24 28 48 83 f9 01 76 17 48 8b 44 24 20 0f b7  L$(H...v.H.D$ ..
	0x0020 00 66 89 44 24 38 48 8b 6c 24 10 48 83 c4 18 c3  .f.D$8H.l$.H....
	0x0030 b8 01 00 00 00 e8 00 00 00 00 90                 ...........
	rel 54+4 t=8 runtime.panicIndex+0
"".load_le_byte4_uint32 STEXT nosplit size=103 args=0x20 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:136)	TEXT	"".load_le_byte4_uint32(SB), NOSPLIT|ABIInternal, $24-32
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:136)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:136)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:136)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:136)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:136)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:141)	MOVQ	"".s+40(SP), CX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:141)	TESTQ	CX, CX
	0x0016 00022 (/usr/local/go/test/codegen/memcombine.go:141)	JLS	95
	0x0018 00024 (/usr/local/go/test/codegen/memcombine.go:141)	CMPQ	CX, $1
	0x001c 00028 (/usr/local/go/test/codegen/memcombine.go:141)	JLS	85
	0x001e 00030 (/usr/local/go/test/codegen/memcombine.go:141)	NOP
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:141)	CMPQ	CX, $2
	0x0024 00036 (/usr/local/go/test/codegen/memcombine.go:141)	JLS	75
	0x0026 00038 (/usr/local/go/test/codegen/memcombine.go:141)	CMPQ	CX, $3
	0x002a 00042 (/usr/local/go/test/codegen/memcombine.go:141)	JLS	65
	0x002c 00044 (/usr/local/go/test/codegen/memcombine.go:141)	MOVQ	"".s+32(SP), AX
	0x0031 00049 (/usr/local/go/test/codegen/memcombine.go:141)	MOVL	(AX), AX
	0x0033 00051 (/usr/local/go/test/codegen/memcombine.go:141)	MOVL	AX, "".~r1+56(SP)
	0x0037 00055 (/usr/local/go/test/codegen/memcombine.go:141)	MOVQ	16(SP), BP
	0x003c 00060 (/usr/local/go/test/codegen/memcombine.go:141)	ADDQ	$24, SP
	0x0040 00064 (/usr/local/go/test/codegen/memcombine.go:141)	RET
	0x0041 00065 (/usr/local/go/test/codegen/memcombine.go:141)	MOVL	$3, AX
	0x0046 00070 (/usr/local/go/test/codegen/memcombine.go:141)	PCDATA	$1, $1
	0x0046 00070 (/usr/local/go/test/codegen/memcombine.go:141)	CALL	runtime.panicIndex(SB)
	0x004b 00075 (/usr/local/go/test/codegen/memcombine.go:141)	MOVL	$2, AX
	0x0050 00080 (/usr/local/go/test/codegen/memcombine.go:141)	CALL	runtime.panicIndex(SB)
	0x0055 00085 (/usr/local/go/test/codegen/memcombine.go:141)	MOVL	$1, AX
	0x005a 00090 (/usr/local/go/test/codegen/memcombine.go:141)	CALL	runtime.panicIndex(SB)
	0x005f 00095 (/usr/local/go/test/codegen/memcombine.go:141)	XORL	AX, AX
	0x0061 00097 (/usr/local/go/test/codegen/memcombine.go:141)	CALL	runtime.panicIndex(SB)
	0x0066 00102 (/usr/local/go/test/codegen/memcombine.go:141)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 4c 24 28 48 85 c9 76 47 48 83 f9 01 76 37 66 90  L$(H..vGH...v7f.
	0x0020 48 83 f9 02 76 25 48 83 f9 03 76 15 48 8b 44 24  H...v%H...v.H.D$
	0x0030 20 8b 00 89 44 24 38 48 8b 6c 24 10 48 83 c4 18   ...D$8H.l$.H...
	0x0040 c3 b8 03 00 00 00 e8 00 00 00 00 b8 02 00 00 00  ................
	0x0050 e8 00 00 00 00 b8 01 00 00 00 e8 00 00 00 00 31  ...............1
	0x0060 c0 e8 00 00 00 00 90                             .......
	rel 71+4 t=8 runtime.panicIndex+0
	rel 81+4 t=8 runtime.panicIndex+0
	rel 91+4 t=8 runtime.panicIndex+0
	rel 98+4 t=8 runtime.panicIndex+0
"".load_le_byte4_uint32_inv STEXT nosplit size=85 args=0x20 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:144)	TEXT	"".load_le_byte4_uint32_inv(SB), NOSPLIT|ABIInternal, $24-32
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:144)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:144)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:144)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:144)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:144)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:146)	MOVQ	"".s+40(SP), CX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:146)	CMPQ	CX, $3
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:146)	JLS	74
	0x0019 00025 (/usr/local/go/test/codegen/memcombine.go:146)	MOVQ	"".s+32(SP), AX
	0x001e 00030 (/usr/local/go/test/codegen/memcombine.go:146)	MOVBLZX	3(AX), CX
	0x0022 00034 (/usr/local/go/test/codegen/memcombine.go:146)	MOVBLZX	2(AX), DX
	0x0026 00038 (/usr/local/go/test/codegen/memcombine.go:146)	MOVBLZX	1(AX), BX
	0x002a 00042 (/usr/local/go/test/codegen/memcombine.go:146)	MOVBLZX	(AX), AX
	0x002d 00045 (/usr/local/go/test/codegen/memcombine.go:146)	SHLL	$24, CX
	0x0030 00048 (/usr/local/go/test/codegen/memcombine.go:146)	SHLL	$16, DX
	0x0033 00051 (/usr/local/go/test/codegen/memcombine.go:146)	ORL	DX, CX
	0x0035 00053 (/usr/local/go/test/codegen/memcombine.go:146)	SHLL	$8, BX
	0x0038 00056 (/usr/local/go/test/codegen/memcombine.go:146)	ORL	CX, BX
	0x003a 00058 (/usr/local/go/test/codegen/memcombine.go:146)	ORL	BX, AX
	0x003c 00060 (/usr/local/go/test/codegen/memcombine.go:146)	MOVL	AX, "".~r1+56(SP)
	0x0040 00064 (/usr/local/go/test/codegen/memcombine.go:146)	MOVQ	16(SP), BP
	0x0045 00069 (/usr/local/go/test/codegen/memcombine.go:146)	ADDQ	$24, SP
	0x0049 00073 (/usr/local/go/test/codegen/memcombine.go:146)	RET
	0x004a 00074 (/usr/local/go/test/codegen/memcombine.go:146)	MOVL	$3, AX
	0x004f 00079 (/usr/local/go/test/codegen/memcombine.go:146)	PCDATA	$1, $1
	0x004f 00079 (/usr/local/go/test/codegen/memcombine.go:146)	CALL	runtime.panicIndex(SB)
	0x0054 00084 (/usr/local/go/test/codegen/memcombine.go:146)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 4c 24 28 48 83 f9 03 76 31 48 8b 44 24 20 0f b6  L$(H...v1H.D$ ..
	0x0020 48 03 0f b6 50 02 0f b6 58 01 0f b6 00 c1 e1 18  H...P...X.......
	0x0030 c1 e2 10 09 d1 c1 e3 08 09 cb 09 d8 89 44 24 38  .............D$8
	0x0040 48 8b 6c 24 10 48 83 c4 18 c3 b8 03 00 00 00 e8  H.l$.H..........
	0x0050 00 00 00 00 90                                   .....
	rel 80+4 t=8 runtime.panicIndex+0
"".load_le_byte8_uint64 STEXT nosplit size=183 args=0x20 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:149)	TEXT	"".load_le_byte8_uint64(SB), NOSPLIT|ABIInternal, $24-32
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:149)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:149)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:149)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:149)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:149)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:153)	MOVQ	"".s+40(SP), CX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:153)	TESTQ	CX, CX
	0x0016 00022 (/usr/local/go/test/codegen/memcombine.go:153)	JLS	175
	0x001c 00028 (/usr/local/go/test/codegen/memcombine.go:153)	NOP
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:153)	CMPQ	CX, $1
	0x0024 00036 (/usr/local/go/test/codegen/memcombine.go:153)	JLS	165
	0x0026 00038 (/usr/local/go/test/codegen/memcombine.go:153)	CMPQ	CX, $2
	0x002a 00042 (/usr/local/go/test/codegen/memcombine.go:153)	JLS	153
	0x002c 00044 (/usr/local/go/test/codegen/memcombine.go:153)	CMPQ	CX, $3
	0x0030 00048 (/usr/local/go/test/codegen/memcombine.go:153)	JLS	143
	0x0032 00050 (/usr/local/go/test/codegen/memcombine.go:153)	CMPQ	CX, $4
	0x0036 00054 (/usr/local/go/test/codegen/memcombine.go:153)	JLS	133
	0x0038 00056 (/usr/local/go/test/codegen/memcombine.go:153)	CMPQ	CX, $5
	0x003c 00060 (/usr/local/go/test/codegen/memcombine.go:153)	JLS	119
	0x003e 00062 (/usr/local/go/test/codegen/memcombine.go:153)	NOP
	0x0040 00064 (/usr/local/go/test/codegen/memcombine.go:153)	CMPQ	CX, $6
	0x0044 00068 (/usr/local/go/test/codegen/memcombine.go:153)	JLS	109
	0x0046 00070 (/usr/local/go/test/codegen/memcombine.go:153)	CMPQ	CX, $7
	0x004a 00074 (/usr/local/go/test/codegen/memcombine.go:153)	JLS	99
	0x004c 00076 (/usr/local/go/test/codegen/memcombine.go:153)	MOVQ	"".s+32(SP), AX
	0x0051 00081 (/usr/local/go/test/codegen/memcombine.go:153)	MOVQ	(AX), AX
	0x0054 00084 (/usr/local/go/test/codegen/memcombine.go:153)	MOVQ	AX, "".~r1+56(SP)
	0x0059 00089 (/usr/local/go/test/codegen/memcombine.go:153)	MOVQ	16(SP), BP
	0x005e 00094 (/usr/local/go/test/codegen/memcombine.go:153)	ADDQ	$24, SP
	0x0062 00098 (/usr/local/go/test/codegen/memcombine.go:153)	RET
	0x0063 00099 (/usr/local/go/test/codegen/memcombine.go:153)	MOVL	$7, AX
	0x0068 00104 (/usr/local/go/test/codegen/memcombine.go:153)	PCDATA	$1, $1
	0x0068 00104 (/usr/local/go/test/codegen/memcombine.go:153)	CALL	runtime.panicIndex(SB)
	0x006d 00109 (/usr/local/go/test/codegen/memcombine.go:153)	MOVL	$6, AX
	0x0072 00114 (/usr/local/go/test/codegen/memcombine.go:153)	CALL	runtime.panicIndex(SB)
	0x0077 00119 (/usr/local/go/test/codegen/memcombine.go:153)	MOVL	$5, AX
	0x007c 00124 (/usr/local/go/test/codegen/memcombine.go:153)	NOP
	0x0080 00128 (/usr/local/go/test/codegen/memcombine.go:153)	CALL	runtime.panicIndex(SB)
	0x0085 00133 (/usr/local/go/test/codegen/memcombine.go:153)	MOVL	$4, AX
	0x008a 00138 (/usr/local/go/test/codegen/memcombine.go:153)	CALL	runtime.panicIndex(SB)
	0x008f 00143 (/usr/local/go/test/codegen/memcombine.go:153)	MOVL	$3, AX
	0x0094 00148 (/usr/local/go/test/codegen/memcombine.go:153)	CALL	runtime.panicIndex(SB)
	0x0099 00153 (/usr/local/go/test/codegen/memcombine.go:153)	MOVL	$2, AX
	0x009e 00158 (/usr/local/go/test/codegen/memcombine.go:153)	NOP
	0x00a0 00160 (/usr/local/go/test/codegen/memcombine.go:153)	CALL	runtime.panicIndex(SB)
	0x00a5 00165 (/usr/local/go/test/codegen/memcombine.go:153)	MOVL	$1, AX
	0x00aa 00170 (/usr/local/go/test/codegen/memcombine.go:153)	CALL	runtime.panicIndex(SB)
	0x00af 00175 (/usr/local/go/test/codegen/memcombine.go:153)	XORL	AX, AX
	0x00b1 00177 (/usr/local/go/test/codegen/memcombine.go:153)	CALL	runtime.panicIndex(SB)
	0x00b6 00182 (/usr/local/go/test/codegen/memcombine.go:153)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 4c 24 28 48 85 c9 0f 86 93 00 00 00 0f 1f 40 00  L$(H..........@.
	0x0020 48 83 f9 01 76 7f 48 83 f9 02 76 6d 48 83 f9 03  H...v.H...vmH...
	0x0030 76 5d 48 83 f9 04 76 4d 48 83 f9 05 76 39 66 90  v]H...vMH...v9f.
	0x0040 48 83 f9 06 76 27 48 83 f9 07 76 17 48 8b 44 24  H...v'H...v.H.D$
	0x0050 20 48 8b 00 48 89 44 24 38 48 8b 6c 24 10 48 83   H..H.D$8H.l$.H.
	0x0060 c4 18 c3 b8 07 00 00 00 e8 00 00 00 00 b8 06 00  ................
	0x0070 00 00 e8 00 00 00 00 b8 05 00 00 00 0f 1f 40 00  ..............@.
	0x0080 e8 00 00 00 00 b8 04 00 00 00 e8 00 00 00 00 b8  ................
	0x0090 03 00 00 00 e8 00 00 00 00 b8 02 00 00 00 66 90  ..............f.
	0x00a0 e8 00 00 00 00 b8 01 00 00 00 e8 00 00 00 00 31  ...............1
	0x00b0 c0 e8 00 00 00 00 90                             .......
	rel 105+4 t=8 runtime.panicIndex+0
	rel 115+4 t=8 runtime.panicIndex+0
	rel 129+4 t=8 runtime.panicIndex+0
	rel 139+4 t=8 runtime.panicIndex+0
	rel 149+4 t=8 runtime.panicIndex+0
	rel 161+4 t=8 runtime.panicIndex+0
	rel 171+4 t=8 runtime.panicIndex+0
	rel 178+4 t=8 runtime.panicIndex+0
"".load_le_byte8_uint64_inv STEXT nosplit size=138 args=0x20 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:156)	TEXT	"".load_le_byte8_uint64_inv(SB), NOSPLIT|ABIInternal, $24-32
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:156)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:156)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:156)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:156)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:156)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:158)	MOVQ	"".s+40(SP), CX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:158)	CMPQ	CX, $7
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:158)	JLS	127
	0x0019 00025 (/usr/local/go/test/codegen/memcombine.go:158)	MOVQ	"".s+32(SP), AX
	0x001e 00030 (/usr/local/go/test/codegen/memcombine.go:158)	MOVBLZX	7(AX), CX
	0x0022 00034 (/usr/local/go/test/codegen/memcombine.go:158)	MOVBLZX	6(AX), DX
	0x0026 00038 (/usr/local/go/test/codegen/memcombine.go:158)	MOVBLZX	5(AX), BX
	0x002a 00042 (/usr/local/go/test/codegen/memcombine.go:158)	MOVBLZX	4(AX), SI
	0x002e 00046 (/usr/local/go/test/codegen/memcombine.go:158)	MOVBLZX	3(AX), DI
	0x0032 00050 (/usr/local/go/test/codegen/memcombine.go:158)	MOVBLZX	2(AX), R8
	0x0037 00055 (/usr/local/go/test/codegen/memcombine.go:158)	MOVBLZX	1(AX), R9
	0x003c 00060 (/usr/local/go/test/codegen/memcombine.go:158)	MOVBLZX	(AX), AX
	0x003f 00063 (/usr/local/go/test/codegen/memcombine.go:158)	SHLQ	$56, CX
	0x0043 00067 (/usr/local/go/test/codegen/memcombine.go:158)	SHLQ	$48, DX
	0x0047 00071 (/usr/local/go/test/codegen/memcombine.go:158)	ORQ	DX, CX
	0x004a 00074 (/usr/local/go/test/codegen/memcombine.go:158)	SHLQ	$40, BX
	0x004e 00078 (/usr/local/go/test/codegen/memcombine.go:158)	ORQ	CX, BX
	0x0051 00081 (/usr/local/go/test/codegen/memcombine.go:158)	SHLQ	$32, SI
	0x0055 00085 (/usr/local/go/test/codegen/memcombine.go:158)	ORQ	BX, SI
	0x0058 00088 (/usr/local/go/test/codegen/memcombine.go:158)	SHLQ	$24, DI
	0x005c 00092 (/usr/local/go/test/codegen/memcombine.go:158)	ORQ	SI, DI
	0x005f 00095 (/usr/local/go/test/codegen/memcombine.go:158)	SHLQ	$16, R8
	0x0063 00099 (/usr/local/go/test/codegen/memcombine.go:158)	ORQ	DI, R8
	0x0066 00102 (/usr/local/go/test/codegen/memcombine.go:158)	SHLQ	$8, R9
	0x006a 00106 (/usr/local/go/test/codegen/memcombine.go:158)	ORQ	R8, R9
	0x006d 00109 (/usr/local/go/test/codegen/memcombine.go:158)	ORQ	R9, AX
	0x0070 00112 (/usr/local/go/test/codegen/memcombine.go:158)	MOVQ	AX, "".~r1+56(SP)
	0x0075 00117 (/usr/local/go/test/codegen/memcombine.go:158)	MOVQ	16(SP), BP
	0x007a 00122 (/usr/local/go/test/codegen/memcombine.go:158)	ADDQ	$24, SP
	0x007e 00126 (/usr/local/go/test/codegen/memcombine.go:158)	RET
	0x007f 00127 (/usr/local/go/test/codegen/memcombine.go:158)	MOVL	$7, AX
	0x0084 00132 (/usr/local/go/test/codegen/memcombine.go:158)	PCDATA	$1, $1
	0x0084 00132 (/usr/local/go/test/codegen/memcombine.go:158)	CALL	runtime.panicIndex(SB)
	0x0089 00137 (/usr/local/go/test/codegen/memcombine.go:158)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 4c 24 28 48 83 f9 07 76 66 48 8b 44 24 20 0f b6  L$(H...vfH.D$ ..
	0x0020 48 07 0f b6 50 06 0f b6 58 05 0f b6 70 04 0f b6  H...P...X...p...
	0x0030 78 03 44 0f b6 40 02 44 0f b6 48 01 0f b6 00 48  x.D..@.D..H....H
	0x0040 c1 e1 38 48 c1 e2 30 48 09 d1 48 c1 e3 28 48 09  ..8H..0H..H..(H.
	0x0050 cb 48 c1 e6 20 48 09 de 48 c1 e7 18 48 09 f7 49  .H.. H..H...H..I
	0x0060 c1 e0 10 49 09 f8 49 c1 e1 08 4d 09 c1 4c 09 c8  ...I..I...M..L..
	0x0070 48 89 44 24 38 48 8b 6c 24 10 48 83 c4 18 c3 b8  H.D$8H.l$.H.....
	0x0080 07 00 00 00 e8 00 00 00 00 90                    ..........
	rel 133+4 t=8 runtime.panicIndex+0
"".load_be_byte2_uint16 STEXT nosplit size=77 args=0x20 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:161)	TEXT	"".load_be_byte2_uint16(SB), NOSPLIT|ABIInternal, $24-32
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:161)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:161)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:161)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:161)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:161)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:165)	MOVQ	"".s+40(SP), CX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:165)	TESTQ	CX, CX
	0x0016 00022 (/usr/local/go/test/codegen/memcombine.go:165)	JLS	69
	0x0018 00024 (/usr/local/go/test/codegen/memcombine.go:165)	CMPQ	CX, $1
	0x001c 00028 (/usr/local/go/test/codegen/memcombine.go:165)	JLS	57
	0x001e 00030 (/usr/local/go/test/codegen/memcombine.go:165)	MOVQ	"".s+32(SP), AX
	0x0023 00035 (/usr/local/go/test/codegen/memcombine.go:165)	MOVWLZX	(AX), AX
	0x0026 00038 (/usr/local/go/test/codegen/memcombine.go:165)	ROLW	$8, AX
	0x002a 00042 (/usr/local/go/test/codegen/memcombine.go:165)	MOVW	AX, "".~r1+56(SP)
	0x002f 00047 (/usr/local/go/test/codegen/memcombine.go:165)	MOVQ	16(SP), BP
	0x0034 00052 (/usr/local/go/test/codegen/memcombine.go:165)	ADDQ	$24, SP
	0x0038 00056 (/usr/local/go/test/codegen/memcombine.go:165)	RET
	0x0039 00057 (/usr/local/go/test/codegen/memcombine.go:165)	MOVL	$1, AX
	0x003e 00062 (/usr/local/go/test/codegen/memcombine.go:165)	PCDATA	$1, $1
	0x003e 00062 (/usr/local/go/test/codegen/memcombine.go:165)	NOP
	0x0040 00064 (/usr/local/go/test/codegen/memcombine.go:165)	CALL	runtime.panicIndex(SB)
	0x0045 00069 (/usr/local/go/test/codegen/memcombine.go:165)	XORL	AX, AX
	0x0047 00071 (/usr/local/go/test/codegen/memcombine.go:165)	CALL	runtime.panicIndex(SB)
	0x004c 00076 (/usr/local/go/test/codegen/memcombine.go:165)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 4c 24 28 48 85 c9 76 2d 48 83 f9 01 76 1b 48 8b  L$(H..v-H...v.H.
	0x0020 44 24 20 0f b7 00 66 c1 c0 08 66 89 44 24 38 48  D$ ...f...f.D$8H
	0x0030 8b 6c 24 10 48 83 c4 18 c3 b8 01 00 00 00 66 90  .l$.H.........f.
	0x0040 e8 00 00 00 00 31 c0 e8 00 00 00 00 90           .....1.......
	rel 65+4 t=8 runtime.panicIndex+0
	rel 72+4 t=8 runtime.panicIndex+0
"".load_be_byte2_uint16_inv STEXT nosplit size=63 args=0x20 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:168)	TEXT	"".load_be_byte2_uint16_inv(SB), NOSPLIT|ABIInternal, $24-32
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:168)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:168)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:168)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:168)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:168)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:172)	MOVQ	"".s+40(SP), CX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:172)	CMPQ	CX, $1
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:172)	JLS	52
	0x0019 00025 (/usr/local/go/test/codegen/memcombine.go:172)	MOVQ	"".s+32(SP), AX
	0x001e 00030 (/usr/local/go/test/codegen/memcombine.go:172)	MOVWLZX	(AX), AX
	0x0021 00033 (/usr/local/go/test/codegen/memcombine.go:172)	ROLW	$8, AX
	0x0025 00037 (/usr/local/go/test/codegen/memcombine.go:172)	MOVW	AX, "".~r1+56(SP)
	0x002a 00042 (/usr/local/go/test/codegen/memcombine.go:172)	MOVQ	16(SP), BP
	0x002f 00047 (/usr/local/go/test/codegen/memcombine.go:172)	ADDQ	$24, SP
	0x0033 00051 (/usr/local/go/test/codegen/memcombine.go:172)	RET
	0x0034 00052 (/usr/local/go/test/codegen/memcombine.go:172)	MOVL	$1, AX
	0x0039 00057 (/usr/local/go/test/codegen/memcombine.go:172)	PCDATA	$1, $1
	0x0039 00057 (/usr/local/go/test/codegen/memcombine.go:172)	CALL	runtime.panicIndex(SB)
	0x003e 00062 (/usr/local/go/test/codegen/memcombine.go:172)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 4c 24 28 48 83 f9 01 76 1b 48 8b 44 24 20 0f b7  L$(H...v.H.D$ ..
	0x0020 00 66 c1 c0 08 66 89 44 24 38 48 8b 6c 24 10 48  .f...f.D$8H.l$.H
	0x0030 83 c4 18 c3 b8 01 00 00 00 e8 00 00 00 00 90     ...............
	rel 58+4 t=8 runtime.panicIndex+0
"".load_be_byte4_uint32 STEXT nosplit size=134 args=0x20 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:175)	TEXT	"".load_be_byte4_uint32(SB), NOSPLIT|ABIInternal, $24-32
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:175)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:175)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:175)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:175)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:175)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:177)	MOVQ	"".s+40(SP), CX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:177)	TESTQ	CX, CX
	0x0016 00022 (/usr/local/go/test/codegen/memcombine.go:177)	JLS	121
	0x0018 00024 (/usr/local/go/test/codegen/memcombine.go:177)	MOVQ	"".s+32(SP), DX
	0x001d 00029 (/usr/local/go/test/codegen/memcombine.go:177)	MOVBLZX	(DX), BX
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:177)	CMPQ	CX, $1
	0x0024 00036 (/usr/local/go/test/codegen/memcombine.go:177)	JLS	111
	0x0026 00038 (/usr/local/go/test/codegen/memcombine.go:177)	SHLL	$24, BX
	0x0029 00041 (/usr/local/go/test/codegen/memcombine.go:177)	MOVBLZX	1(DX), SI
	0x002d 00045 (/usr/local/go/test/codegen/memcombine.go:177)	SHLL	$16, SI
	0x0030 00048 (/usr/local/go/test/codegen/memcombine.go:177)	ORL	BX, SI
	0x0032 00050 (/usr/local/go/test/codegen/memcombine.go:177)	CMPQ	CX, $2
	0x0036 00054 (/usr/local/go/test/codegen/memcombine.go:177)	JLS	101
	0x0038 00056 (/usr/local/go/test/codegen/memcombine.go:177)	MOVBLZX	2(DX), BX
	0x003c 00060 (/usr/local/go/test/codegen/memcombine.go:177)	SHLL	$8, BX
	0x003f 00063 (/usr/local/go/test/codegen/memcombine.go:177)	ORL	SI, BX
	0x0041 00065 (/usr/local/go/test/codegen/memcombine.go:177)	CMPQ	CX, $3
	0x0045 00069 (/usr/local/go/test/codegen/memcombine.go:177)	JLS	91
	0x0047 00071 (/usr/local/go/test/codegen/memcombine.go:177)	MOVBLZX	3(DX), AX
	0x004b 00075 (/usr/local/go/test/codegen/memcombine.go:177)	ORL	BX, AX
	0x004d 00077 (/usr/local/go/test/codegen/memcombine.go:177)	MOVL	AX, "".~r1+56(SP)
	0x0051 00081 (/usr/local/go/test/codegen/memcombine.go:177)	MOVQ	16(SP), BP
	0x0056 00086 (/usr/local/go/test/codegen/memcombine.go:177)	ADDQ	$24, SP
	0x005a 00090 (/usr/local/go/test/codegen/memcombine.go:177)	RET
	0x005b 00091 (/usr/local/go/test/codegen/memcombine.go:177)	MOVL	$3, AX
	0x0060 00096 (/usr/local/go/test/codegen/memcombine.go:177)	PCDATA	$1, $1
	0x0060 00096 (/usr/local/go/test/codegen/memcombine.go:177)	CALL	runtime.panicIndex(SB)
	0x0065 00101 (/usr/local/go/test/codegen/memcombine.go:177)	MOVL	$2, AX
	0x006a 00106 (/usr/local/go/test/codegen/memcombine.go:177)	CALL	runtime.panicIndex(SB)
	0x006f 00111 (/usr/local/go/test/codegen/memcombine.go:177)	MOVL	$1, AX
	0x0074 00116 (/usr/local/go/test/codegen/memcombine.go:177)	CALL	runtime.panicIndex(SB)
	0x0079 00121 (/usr/local/go/test/codegen/memcombine.go:177)	XORL	AX, AX
	0x007b 00123 (/usr/local/go/test/codegen/memcombine.go:177)	NOP
	0x0080 00128 (/usr/local/go/test/codegen/memcombine.go:177)	CALL	runtime.panicIndex(SB)
	0x0085 00133 (/usr/local/go/test/codegen/memcombine.go:177)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 4c 24 28 48 85 c9 76 61 48 8b 54 24 20 0f b6 1a  L$(H..vaH.T$ ...
	0x0020 48 83 f9 01 76 49 c1 e3 18 0f b6 72 01 c1 e6 10  H...vI.....r....
	0x0030 09 de 48 83 f9 02 76 2d 0f b6 5a 02 c1 e3 08 09  ..H...v-..Z.....
	0x0040 f3 48 83 f9 03 76 14 0f b6 42 03 09 d8 89 44 24  .H...v...B....D$
	0x0050 38 48 8b 6c 24 10 48 83 c4 18 c3 b8 03 00 00 00  8H.l$.H.........
	0x0060 e8 00 00 00 00 b8 02 00 00 00 e8 00 00 00 00 b8  ................
	0x0070 01 00 00 00 e8 00 00 00 00 31 c0 0f 1f 44 00 00  .........1...D..
	0x0080 e8 00 00 00 00 90                                ......
	rel 97+4 t=8 runtime.panicIndex+0
	rel 107+4 t=8 runtime.panicIndex+0
	rel 117+4 t=8 runtime.panicIndex+0
	rel 129+4 t=8 runtime.panicIndex+0
"".load_be_byte4_uint32_inv STEXT nosplit size=59 args=0x20 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:180)	TEXT	"".load_be_byte4_uint32_inv(SB), NOSPLIT|ABIInternal, $24-32
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:180)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:180)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:180)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:180)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:180)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:183)	MOVQ	"".s+40(SP), CX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:183)	CMPQ	CX, $3
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:183)	JLS	48
	0x0019 00025 (/usr/local/go/test/codegen/memcombine.go:183)	MOVQ	"".s+32(SP), AX
	0x001e 00030 (/usr/local/go/test/codegen/memcombine.go:183)	MOVL	(AX), AX
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:183)	BSWAPL	AX
	0x0022 00034 (/usr/local/go/test/codegen/memcombine.go:183)	MOVL	AX, "".~r1+56(SP)
	0x0026 00038 (/usr/local/go/test/codegen/memcombine.go:183)	MOVQ	16(SP), BP
	0x002b 00043 (/usr/local/go/test/codegen/memcombine.go:183)	ADDQ	$24, SP
	0x002f 00047 (/usr/local/go/test/codegen/memcombine.go:183)	RET
	0x0030 00048 (/usr/local/go/test/codegen/memcombine.go:183)	MOVL	$3, AX
	0x0035 00053 (/usr/local/go/test/codegen/memcombine.go:183)	PCDATA	$1, $1
	0x0035 00053 (/usr/local/go/test/codegen/memcombine.go:183)	CALL	runtime.panicIndex(SB)
	0x003a 00058 (/usr/local/go/test/codegen/memcombine.go:183)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 4c 24 28 48 83 f9 03 76 17 48 8b 44 24 20 8b 00  L$(H...v.H.D$ ..
	0x0020 0f c8 89 44 24 38 48 8b 6c 24 10 48 83 c4 18 c3  ...D$8H.l$.H....
	0x0030 b8 03 00 00 00 e8 00 00 00 00 90                 ...........
	rel 54+4 t=8 runtime.panicIndex+0
"".load_be_byte8_uint64 STEXT nosplit size=269 args=0x20 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:186)	TEXT	"".load_be_byte8_uint64(SB), NOSPLIT|ABIInternal, $24-32
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:186)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:186)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:186)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:186)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:186)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:189)	MOVQ	"".s+40(SP), CX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:189)	TESTQ	CX, CX
	0x0016 00022 (/usr/local/go/test/codegen/memcombine.go:189)	JLS	261
	0x001c 00028 (/usr/local/go/test/codegen/memcombine.go:189)	MOVQ	"".s+32(SP), DX
	0x0021 00033 (/usr/local/go/test/codegen/memcombine.go:189)	MOVBLZX	(DX), BX
	0x0024 00036 (/usr/local/go/test/codegen/memcombine.go:189)	CMPQ	CX, $1
	0x0028 00040 (/usr/local/go/test/codegen/memcombine.go:189)	JLS	250
	0x002e 00046 (/usr/local/go/test/codegen/memcombine.go:189)	SHLQ	$56, BX
	0x0032 00050 (/usr/local/go/test/codegen/memcombine.go:189)	MOVBLZX	1(DX), SI
	0x0036 00054 (/usr/local/go/test/codegen/memcombine.go:189)	SHLQ	$48, SI
	0x003a 00058 (/usr/local/go/test/codegen/memcombine.go:189)	ORQ	BX, SI
	0x003d 00061 (/usr/local/go/test/codegen/memcombine.go:189)	NOP
	0x0040 00064 (/usr/local/go/test/codegen/memcombine.go:189)	CMPQ	CX, $2
	0x0044 00068 (/usr/local/go/test/codegen/memcombine.go:189)	JLS	240
	0x004a 00074 (/usr/local/go/test/codegen/memcombine.go:189)	MOVBLZX	2(DX), BX
	0x004e 00078 (/usr/local/go/test/codegen/memcombine.go:189)	SHLQ	$40, BX
	0x0052 00082 (/usr/local/go/test/codegen/memcombine.go:189)	ORQ	SI, BX
	0x0055 00085 (/usr/local/go/test/codegen/memcombine.go:189)	CMPQ	CX, $3
	0x0059 00089 (/usr/local/go/test/codegen/memcombine.go:189)	JLS	230
	0x005f 00095 (/usr/local/go/test/codegen/memcombine.go:189)	MOVBLZX	3(DX), SI
	0x0063 00099 (/usr/local/go/test/codegen/memcombine.go:189)	SHLQ	$32, SI
	0x0067 00103 (/usr/local/go/test/codegen/memcombine.go:189)	ORQ	BX, SI
	0x006a 00106 (/usr/local/go/test/codegen/memcombine.go:189)	CMPQ	CX, $4
	0x006e 00110 (/usr/local/go/test/codegen/memcombine.go:189)	JLS	220
	0x0070 00112 (/usr/local/go/test/codegen/memcombine.go:189)	MOVBLZX	4(DX), BX
	0x0074 00116 (/usr/local/go/test/codegen/memcombine.go:189)	SHLQ	$24, BX
	0x0078 00120 (/usr/local/go/test/codegen/memcombine.go:189)	ORQ	SI, BX
	0x007b 00123 (/usr/local/go/test/codegen/memcombine.go:189)	NOP
	0x0080 00128 (/usr/local/go/test/codegen/memcombine.go:189)	CMPQ	CX, $5
	0x0084 00132 (/usr/local/go/test/codegen/memcombine.go:189)	JLS	210
	0x0086 00134 (/usr/local/go/test/codegen/memcombine.go:189)	MOVBLZX	5(DX), SI
	0x008a 00138 (/usr/local/go/test/codegen/memcombine.go:189)	SHLQ	$16, SI
	0x008e 00142 (/usr/local/go/test/codegen/memcombine.go:189)	ORQ	BX, SI
	0x0091 00145 (/usr/local/go/test/codegen/memcombine.go:189)	CMPQ	CX, $6
	0x0095 00149 (/usr/local/go/test/codegen/memcombine.go:189)	JLS	200
	0x0097 00151 (/usr/local/go/test/codegen/memcombine.go:189)	MOVBLZX	6(DX), BX
	0x009b 00155 (/usr/local/go/test/codegen/memcombine.go:189)	SHLQ	$8, BX
	0x009f 00159 (/usr/local/go/test/codegen/memcombine.go:189)	ORQ	SI, BX
	0x00a2 00162 (/usr/local/go/test/codegen/memcombine.go:189)	CMPQ	CX, $7
	0x00a6 00166 (/usr/local/go/test/codegen/memcombine.go:189)	JLS	190
	0x00a8 00168 (/usr/local/go/test/codegen/memcombine.go:189)	MOVBLZX	7(DX), AX
	0x00ac 00172 (/usr/local/go/test/codegen/memcombine.go:189)	ORQ	BX, AX
	0x00af 00175 (/usr/local/go/test/codegen/memcombine.go:189)	MOVQ	AX, "".~r1+56(SP)
	0x00b4 00180 (/usr/local/go/test/codegen/memcombine.go:189)	MOVQ	16(SP), BP
	0x00b9 00185 (/usr/local/go/test/codegen/memcombine.go:189)	ADDQ	$24, SP
	0x00bd 00189 (/usr/local/go/test/codegen/memcombine.go:189)	RET
	0x00be 00190 (/usr/local/go/test/codegen/memcombine.go:189)	MOVL	$7, AX
	0x00c3 00195 (/usr/local/go/test/codegen/memcombine.go:189)	PCDATA	$1, $1
	0x00c3 00195 (/usr/local/go/test/codegen/memcombine.go:189)	CALL	runtime.panicIndex(SB)
	0x00c8 00200 (/usr/local/go/test/codegen/memcombine.go:189)	MOVL	$6, AX
	0x00cd 00205 (/usr/local/go/test/codegen/memcombine.go:189)	CALL	runtime.panicIndex(SB)
	0x00d2 00210 (/usr/local/go/test/codegen/memcombine.go:189)	MOVL	$5, AX
	0x00d7 00215 (/usr/local/go/test/codegen/memcombine.go:189)	CALL	runtime.panicIndex(SB)
	0x00dc 00220 (/usr/local/go/test/codegen/memcombine.go:189)	MOVL	$4, AX
	0x00e1 00225 (/usr/local/go/test/codegen/memcombine.go:189)	CALL	runtime.panicIndex(SB)
	0x00e6 00230 (/usr/local/go/test/codegen/memcombine.go:189)	MOVL	$3, AX
	0x00eb 00235 (/usr/local/go/test/codegen/memcombine.go:189)	CALL	runtime.panicIndex(SB)
	0x00f0 00240 (/usr/local/go/test/codegen/memcombine.go:189)	MOVL	$2, AX
	0x00f5 00245 (/usr/local/go/test/codegen/memcombine.go:189)	CALL	runtime.panicIndex(SB)
	0x00fa 00250 (/usr/local/go/test/codegen/memcombine.go:189)	MOVL	$1, AX
	0x00ff 00255 (/usr/local/go/test/codegen/memcombine.go:189)	NOP
	0x0100 00256 (/usr/local/go/test/codegen/memcombine.go:189)	CALL	runtime.panicIndex(SB)
	0x0105 00261 (/usr/local/go/test/codegen/memcombine.go:189)	XORL	AX, AX
	0x0107 00263 (/usr/local/go/test/codegen/memcombine.go:189)	CALL	runtime.panicIndex(SB)
	0x010c 00268 (/usr/local/go/test/codegen/memcombine.go:189)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 4c 24 28 48 85 c9 0f 86 e9 00 00 00 48 8b 54 24  L$(H........H.T$
	0x0020 20 0f b6 1a 48 83 f9 01 0f 86 cc 00 00 00 48 c1   ...H.........H.
	0x0030 e3 38 0f b6 72 01 48 c1 e6 30 48 09 de 0f 1f 00  .8..r.H..0H.....
	0x0040 48 83 f9 02 0f 86 a6 00 00 00 0f b6 5a 02 48 c1  H...........Z.H.
	0x0050 e3 28 48 09 f3 48 83 f9 03 0f 86 87 00 00 00 0f  .(H..H..........
	0x0060 b6 72 03 48 c1 e6 20 48 09 de 48 83 f9 04 76 6c  .r.H.. H..H...vl
	0x0070 0f b6 5a 04 48 c1 e3 18 48 09 f3 0f 1f 44 00 00  ..Z.H...H....D..
	0x0080 48 83 f9 05 76 4c 0f b6 72 05 48 c1 e6 10 48 09  H...vL..r.H...H.
	0x0090 de 48 83 f9 06 76 31 0f b6 5a 06 48 c1 e3 08 48  .H...v1..Z.H...H
	0x00a0 09 f3 48 83 f9 07 76 16 0f b6 42 07 48 09 d8 48  ..H...v...B.H..H
	0x00b0 89 44 24 38 48 8b 6c 24 10 48 83 c4 18 c3 b8 07  .D$8H.l$.H......
	0x00c0 00 00 00 e8 00 00 00 00 b8 06 00 00 00 e8 00 00  ................
	0x00d0 00 00 b8 05 00 00 00 e8 00 00 00 00 b8 04 00 00  ................
	0x00e0 00 e8 00 00 00 00 b8 03 00 00 00 e8 00 00 00 00  ................
	0x00f0 b8 02 00 00 00 e8 00 00 00 00 b8 01 00 00 00 90  ................
	0x0100 e8 00 00 00 00 31 c0 e8 00 00 00 00 90           .....1.......
	rel 196+4 t=8 runtime.panicIndex+0
	rel 206+4 t=8 runtime.panicIndex+0
	rel 216+4 t=8 runtime.panicIndex+0
	rel 226+4 t=8 runtime.panicIndex+0
	rel 236+4 t=8 runtime.panicIndex+0
	rel 246+4 t=8 runtime.panicIndex+0
	rel 257+4 t=8 runtime.panicIndex+0
	rel 264+4 t=8 runtime.panicIndex+0
"".load_be_byte8_uint64_inv STEXT nosplit size=62 args=0x20 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:192)	TEXT	"".load_be_byte8_uint64_inv(SB), NOSPLIT|ABIInternal, $24-32
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:192)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:192)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:192)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:192)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:192)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:196)	MOVQ	"".s+40(SP), CX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:196)	CMPQ	CX, $7
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:196)	JLS	51
	0x0019 00025 (/usr/local/go/test/codegen/memcombine.go:196)	MOVQ	"".s+32(SP), AX
	0x001e 00030 (/usr/local/go/test/codegen/memcombine.go:196)	MOVQ	(AX), AX
	0x0021 00033 (/usr/local/go/test/codegen/memcombine.go:196)	BSWAPQ	AX
	0x0024 00036 (/usr/local/go/test/codegen/memcombine.go:196)	MOVQ	AX, "".~r1+56(SP)
	0x0029 00041 (/usr/local/go/test/codegen/memcombine.go:196)	MOVQ	16(SP), BP
	0x002e 00046 (/usr/local/go/test/codegen/memcombine.go:196)	ADDQ	$24, SP
	0x0032 00050 (/usr/local/go/test/codegen/memcombine.go:196)	RET
	0x0033 00051 (/usr/local/go/test/codegen/memcombine.go:196)	MOVL	$7, AX
	0x0038 00056 (/usr/local/go/test/codegen/memcombine.go:196)	PCDATA	$1, $1
	0x0038 00056 (/usr/local/go/test/codegen/memcombine.go:196)	CALL	runtime.panicIndex(SB)
	0x003d 00061 (/usr/local/go/test/codegen/memcombine.go:196)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 4c 24 28 48 83 f9 07 76 1a 48 8b 44 24 20 48 8b  L$(H...v.H.D$ H.
	0x0020 00 48 0f c8 48 89 44 24 38 48 8b 6c 24 10 48 83  .H..H.D$8H.l$.H.
	0x0030 c4 18 c3 b8 07 00 00 00 e8 00 00 00 00 90        ..............
	rel 57+4 t=8 runtime.panicIndex+0
"".load_le_byte2_uint16_idx STEXT nosplit size=76 args=0x28 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:199)	TEXT	"".load_le_byte2_uint16_idx(SB), NOSPLIT|ABIInternal, $24-40
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:199)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:199)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:199)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:199)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:199)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:203)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:203)	MOVQ	"".s+40(SP), CX
	0x0018 00024 (/usr/local/go/test/codegen/memcombine.go:203)	CMPQ	AX, CX
	0x001b 00027 (/usr/local/go/test/codegen/memcombine.go:203)	JCC	70
	0x001d 00029 (/usr/local/go/test/codegen/memcombine.go:203)	LEAQ	1(AX), DX
	0x0021 00033 (/usr/local/go/test/codegen/memcombine.go:203)	CMPQ	DX, CX
	0x0024 00036 (/usr/local/go/test/codegen/memcombine.go:203)	JCC	62
	0x0026 00038 (/usr/local/go/test/codegen/memcombine.go:203)	MOVQ	"".s+32(SP), CX
	0x002b 00043 (/usr/local/go/test/codegen/memcombine.go:203)	MOVWLZX	(CX)(AX*1), AX
	0x002f 00047 (/usr/local/go/test/codegen/memcombine.go:203)	MOVW	AX, "".~r2+64(SP)
	0x0034 00052 (/usr/local/go/test/codegen/memcombine.go:203)	MOVQ	16(SP), BP
	0x0039 00057 (/usr/local/go/test/codegen/memcombine.go:203)	ADDQ	$24, SP
	0x003d 00061 (/usr/local/go/test/codegen/memcombine.go:203)	RET
	0x003e 00062 (/usr/local/go/test/codegen/memcombine.go:203)	MOVQ	DX, AX
	0x0041 00065 (/usr/local/go/test/codegen/memcombine.go:203)	PCDATA	$1, $1
	0x0041 00065 (/usr/local/go/test/codegen/memcombine.go:203)	CALL	runtime.panicIndex(SB)
	0x0046 00070 (/usr/local/go/test/codegen/memcombine.go:203)	CALL	runtime.panicIndex(SB)
	0x004b 00075 (/usr/local/go/test/codegen/memcombine.go:203)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 8b 4c 24 28 48 39 c8 73 29 48 8d 50  D$8H.L$(H9.s)H.P
	0x0020 01 48 39 ca 73 18 48 8b 4c 24 20 0f b7 04 01 66  .H9.s.H.L$ ....f
	0x0030 89 44 24 40 48 8b 6c 24 10 48 83 c4 18 c3 48 89  .D$@H.l$.H....H.
	0x0040 d0 e8 00 00 00 00 e8 00 00 00 00 90              ............
	rel 66+4 t=8 runtime.panicIndex+0
	rel 71+4 t=8 runtime.panicIndex+0
"".load_le_byte2_uint16_idx_inv STEXT nosplit size=80 args=0x28 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:206)	TEXT	"".load_le_byte2_uint16_idx_inv(SB), NOSPLIT|ABIInternal, $24-40
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:206)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:206)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:206)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:206)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:206)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:210)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:210)	LEAQ	1(AX), DX
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:210)	MOVQ	"".s+40(SP), CX
	0x001c 00028 (/usr/local/go/test/codegen/memcombine.go:210)	NOP
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:210)	CMPQ	DX, CX
	0x0023 00035 (/usr/local/go/test/codegen/memcombine.go:210)	JCC	71
	0x0025 00037 (/usr/local/go/test/codegen/memcombine.go:210)	CMPQ	AX, CX
	0x0028 00040 (/usr/local/go/test/codegen/memcombine.go:210)	JCC	66
	0x002a 00042 (/usr/local/go/test/codegen/memcombine.go:210)	MOVQ	"".s+32(SP), CX
	0x002f 00047 (/usr/local/go/test/codegen/memcombine.go:210)	MOVWLZX	(CX)(AX*1), AX
	0x0033 00051 (/usr/local/go/test/codegen/memcombine.go:210)	MOVW	AX, "".~r2+64(SP)
	0x0038 00056 (/usr/local/go/test/codegen/memcombine.go:210)	MOVQ	16(SP), BP
	0x003d 00061 (/usr/local/go/test/codegen/memcombine.go:210)	ADDQ	$24, SP
	0x0041 00065 (/usr/local/go/test/codegen/memcombine.go:210)	RET
	0x0042 00066 (/usr/local/go/test/codegen/memcombine.go:210)	PCDATA	$1, $1
	0x0042 00066 (/usr/local/go/test/codegen/memcombine.go:210)	CALL	runtime.panicIndex(SB)
	0x0047 00071 (/usr/local/go/test/codegen/memcombine.go:210)	MOVQ	DX, AX
	0x004a 00074 (/usr/local/go/test/codegen/memcombine.go:210)	CALL	runtime.panicIndex(SB)
	0x004f 00079 (/usr/local/go/test/codegen/memcombine.go:210)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 8d 50 01 48 8b 4c 24 28 0f 1f 40 00  D$8H.P.H.L$(..@.
	0x0020 48 39 ca 73 22 48 39 c8 73 18 48 8b 4c 24 20 0f  H9.s"H9.s.H.L$ .
	0x0030 b7 04 01 66 89 44 24 40 48 8b 6c 24 10 48 83 c4  ...f.D$@H.l$.H..
	0x0040 18 c3 e8 00 00 00 00 48 89 d0 e8 00 00 00 00 90  .......H........
	rel 67+4 t=8 runtime.panicIndex+0
	rel 75+4 t=8 runtime.panicIndex+0
"".load_le_byte4_uint32_idx STEXT nosplit size=108 args=0x28 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:213)	TEXT	"".load_le_byte4_uint32_idx(SB), NOSPLIT|ABIInternal, $24-40
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:213)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:213)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:213)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:213)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:213)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:216)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:216)	MOVQ	"".s+40(SP), CX
	0x0018 00024 (/usr/local/go/test/codegen/memcombine.go:216)	CMPQ	AX, CX
	0x001b 00027 (/usr/local/go/test/codegen/memcombine.go:216)	JCC	102
	0x001d 00029 (/usr/local/go/test/codegen/memcombine.go:216)	LEAQ	1(AX), DX
	0x0021 00033 (/usr/local/go/test/codegen/memcombine.go:216)	CMPQ	DX, CX
	0x0024 00036 (/usr/local/go/test/codegen/memcombine.go:216)	JCC	94
	0x0026 00038 (/usr/local/go/test/codegen/memcombine.go:216)	LEAQ	2(AX), DX
	0x002a 00042 (/usr/local/go/test/codegen/memcombine.go:216)	CMPQ	DX, CX
	0x002d 00045 (/usr/local/go/test/codegen/memcombine.go:216)	JCC	86
	0x002f 00047 (/usr/local/go/test/codegen/memcombine.go:216)	LEAQ	3(AX), DX
	0x0033 00051 (/usr/local/go/test/codegen/memcombine.go:216)	CMPQ	DX, CX
	0x0036 00054 (/usr/local/go/test/codegen/memcombine.go:216)	JCC	78
	0x0038 00056 (/usr/local/go/test/codegen/memcombine.go:216)	MOVQ	"".s+32(SP), CX
	0x003d 00061 (/usr/local/go/test/codegen/memcombine.go:216)	MOVL	(CX)(AX*1), AX
	0x0040 00064 (/usr/local/go/test/codegen/memcombine.go:216)	MOVL	AX, "".~r2+64(SP)
	0x0044 00068 (/usr/local/go/test/codegen/memcombine.go:216)	MOVQ	16(SP), BP
	0x0049 00073 (/usr/local/go/test/codegen/memcombine.go:216)	ADDQ	$24, SP
	0x004d 00077 (/usr/local/go/test/codegen/memcombine.go:216)	RET
	0x004e 00078 (/usr/local/go/test/codegen/memcombine.go:216)	MOVQ	DX, AX
	0x0051 00081 (/usr/local/go/test/codegen/memcombine.go:216)	PCDATA	$1, $1
	0x0051 00081 (/usr/local/go/test/codegen/memcombine.go:216)	CALL	runtime.panicIndex(SB)
	0x0056 00086 (/usr/local/go/test/codegen/memcombine.go:216)	MOVQ	DX, AX
	0x0059 00089 (/usr/local/go/test/codegen/memcombine.go:216)	CALL	runtime.panicIndex(SB)
	0x005e 00094 (/usr/local/go/test/codegen/memcombine.go:216)	MOVQ	DX, AX
	0x0061 00097 (/usr/local/go/test/codegen/memcombine.go:216)	CALL	runtime.panicIndex(SB)
	0x0066 00102 (/usr/local/go/test/codegen/memcombine.go:216)	CALL	runtime.panicIndex(SB)
	0x006b 00107 (/usr/local/go/test/codegen/memcombine.go:216)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 8b 4c 24 28 48 39 c8 73 49 48 8d 50  D$8H.L$(H9.sIH.P
	0x0020 01 48 39 ca 73 38 48 8d 50 02 48 39 ca 73 27 48  .H9.s8H.P.H9.s'H
	0x0030 8d 50 03 48 39 ca 73 16 48 8b 4c 24 20 8b 04 01  .P.H9.s.H.L$ ...
	0x0040 89 44 24 40 48 8b 6c 24 10 48 83 c4 18 c3 48 89  .D$@H.l$.H....H.
	0x0050 d0 e8 00 00 00 00 48 89 d0 e8 00 00 00 00 48 89  ......H.......H.
	0x0060 d0 e8 00 00 00 00 e8 00 00 00 00 90              ............
	rel 82+4 t=8 runtime.panicIndex+0
	rel 90+4 t=8 runtime.panicIndex+0
	rel 98+4 t=8 runtime.panicIndex+0
	rel 103+4 t=8 runtime.panicIndex+0
"".load_le_byte4_uint32_idx_inv STEXT nosplit size=143 args=0x28 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:219)	TEXT	"".load_le_byte4_uint32_idx_inv(SB), NOSPLIT|ABIInternal, $24-40
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:219)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:219)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:219)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:219)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:219)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:221)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:221)	LEAQ	3(AX), DX
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:221)	MOVQ	"".s+40(SP), CX
	0x001c 00028 (/usr/local/go/test/codegen/memcombine.go:221)	NOP
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:221)	CMPQ	DX, CX
	0x0023 00035 (/usr/local/go/test/codegen/memcombine.go:221)	JCC	134
	0x0025 00037 (/usr/local/go/test/codegen/memcombine.go:221)	MOVQ	"".s+32(SP), DX
	0x002a 00042 (/usr/local/go/test/codegen/memcombine.go:221)	MOVBLZX	3(AX)(DX*1), BX
	0x002f 00047 (/usr/local/go/test/codegen/memcombine.go:221)	LEAQ	2(AX), SI
	0x0033 00051 (/usr/local/go/test/codegen/memcombine.go:221)	CMPQ	SI, CX
	0x0036 00054 (/usr/local/go/test/codegen/memcombine.go:221)	JCC	126
	0x0038 00056 (/usr/local/go/test/codegen/memcombine.go:221)	SHLL	$24, BX
	0x003b 00059 (/usr/local/go/test/codegen/memcombine.go:221)	MOVBLZX	2(AX)(DX*1), SI
	0x0040 00064 (/usr/local/go/test/codegen/memcombine.go:221)	SHLL	$16, SI
	0x0043 00067 (/usr/local/go/test/codegen/memcombine.go:221)	ORL	SI, BX
	0x0045 00069 (/usr/local/go/test/codegen/memcombine.go:221)	LEAQ	1(AX), SI
	0x0049 00073 (/usr/local/go/test/codegen/memcombine.go:221)	CMPQ	SI, CX
	0x004c 00076 (/usr/local/go/test/codegen/memcombine.go:221)	JCC	118
	0x004e 00078 (/usr/local/go/test/codegen/memcombine.go:221)	MOVBLZX	1(AX)(DX*1), SI
	0x0053 00083 (/usr/local/go/test/codegen/memcombine.go:221)	SHLL	$8, SI
	0x0056 00086 (/usr/local/go/test/codegen/memcombine.go:221)	ORL	BX, SI
	0x0058 00088 (/usr/local/go/test/codegen/memcombine.go:221)	CMPQ	AX, CX
	0x005b 00091 (/usr/local/go/test/codegen/memcombine.go:221)	JCC	113
	0x005d 00093 (/usr/local/go/test/codegen/memcombine.go:221)	MOVBLZX	(DX)(AX*1), AX
	0x0061 00097 (/usr/local/go/test/codegen/memcombine.go:221)	ORL	SI, AX
	0x0063 00099 (/usr/local/go/test/codegen/memcombine.go:221)	MOVL	AX, "".~r2+64(SP)
	0x0067 00103 (/usr/local/go/test/codegen/memcombine.go:221)	MOVQ	16(SP), BP
	0x006c 00108 (/usr/local/go/test/codegen/memcombine.go:221)	ADDQ	$24, SP
	0x0070 00112 (/usr/local/go/test/codegen/memcombine.go:221)	RET
	0x0071 00113 (/usr/local/go/test/codegen/memcombine.go:221)	PCDATA	$1, $1
	0x0071 00113 (/usr/local/go/test/codegen/memcombine.go:221)	CALL	runtime.panicIndex(SB)
	0x0076 00118 (/usr/local/go/test/codegen/memcombine.go:221)	MOVQ	SI, AX
	0x0079 00121 (/usr/local/go/test/codegen/memcombine.go:221)	CALL	runtime.panicIndex(SB)
	0x007e 00126 (/usr/local/go/test/codegen/memcombine.go:221)	MOVQ	SI, AX
	0x0081 00129 (/usr/local/go/test/codegen/memcombine.go:221)	CALL	runtime.panicIndex(SB)
	0x0086 00134 (/usr/local/go/test/codegen/memcombine.go:221)	MOVQ	DX, AX
	0x0089 00137 (/usr/local/go/test/codegen/memcombine.go:221)	CALL	runtime.panicIndex(SB)
	0x008e 00142 (/usr/local/go/test/codegen/memcombine.go:221)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 8d 50 03 48 8b 4c 24 28 0f 1f 40 00  D$8H.P.H.L$(..@.
	0x0020 48 39 ca 73 61 48 8b 54 24 20 0f b6 5c 10 03 48  H9.saH.T$ ..\..H
	0x0030 8d 70 02 48 39 ce 73 46 c1 e3 18 0f b6 74 10 02  .p.H9.sF.....t..
	0x0040 c1 e6 10 09 f3 48 8d 70 01 48 39 ce 73 28 0f b6  .....H.p.H9.s(..
	0x0050 74 10 01 c1 e6 08 09 de 48 39 c8 73 14 0f b6 04  t.......H9.s....
	0x0060 02 09 f0 89 44 24 40 48 8b 6c 24 10 48 83 c4 18  ....D$@H.l$.H...
	0x0070 c3 e8 00 00 00 00 48 89 f0 e8 00 00 00 00 48 89  ......H.......H.
	0x0080 f0 e8 00 00 00 00 48 89 d0 e8 00 00 00 00 90     ......H........
	rel 114+4 t=8 runtime.panicIndex+0
	rel 122+4 t=8 runtime.panicIndex+0
	rel 130+4 t=8 runtime.panicIndex+0
	rel 138+4 t=8 runtime.panicIndex+0
"".load_le_byte8_uint64_idx STEXT nosplit size=198 args=0x28 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:224)	TEXT	"".load_le_byte8_uint64_idx(SB), NOSPLIT|ABIInternal, $24-40
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:224)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:224)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:224)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:224)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:224)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:227)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:227)	MOVQ	"".s+40(SP), CX
	0x0018 00024 (/usr/local/go/test/codegen/memcombine.go:227)	NOP
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:227)	CMPQ	AX, CX
	0x0023 00035 (/usr/local/go/test/codegen/memcombine.go:227)	JCC	192
	0x0029 00041 (/usr/local/go/test/codegen/memcombine.go:227)	LEAQ	1(AX), DX
	0x002d 00045 (/usr/local/go/test/codegen/memcombine.go:227)	CMPQ	DX, CX
	0x0030 00048 (/usr/local/go/test/codegen/memcombine.go:227)	JCC	182
	0x0036 00054 (/usr/local/go/test/codegen/memcombine.go:227)	LEAQ	2(AX), DX
	0x003a 00058 (/usr/local/go/test/codegen/memcombine.go:227)	CMPQ	DX, CX
	0x003d 00061 (/usr/local/go/test/codegen/memcombine.go:227)	JCC	174
	0x003f 00063 (/usr/local/go/test/codegen/memcombine.go:227)	LEAQ	3(AX), DX
	0x0043 00067 (/usr/local/go/test/codegen/memcombine.go:227)	CMPQ	DX, CX
	0x0046 00070 (/usr/local/go/test/codegen/memcombine.go:227)	JCC	166
	0x0048 00072 (/usr/local/go/test/codegen/memcombine.go:227)	LEAQ	4(AX), DX
	0x004c 00076 (/usr/local/go/test/codegen/memcombine.go:227)	CMPQ	DX, CX
	0x004f 00079 (/usr/local/go/test/codegen/memcombine.go:227)	JCC	158
	0x0051 00081 (/usr/local/go/test/codegen/memcombine.go:227)	LEAQ	5(AX), DX
	0x0055 00085 (/usr/local/go/test/codegen/memcombine.go:227)	CMPQ	DX, CX
	0x0058 00088 (/usr/local/go/test/codegen/memcombine.go:227)	JCC	150
	0x005a 00090 (/usr/local/go/test/codegen/memcombine.go:227)	LEAQ	6(AX), DX
	0x005e 00094 (/usr/local/go/test/codegen/memcombine.go:227)	NOP
	0x0060 00096 (/usr/local/go/test/codegen/memcombine.go:227)	CMPQ	DX, CX
	0x0063 00099 (/usr/local/go/test/codegen/memcombine.go:227)	JCC	142
	0x0065 00101 (/usr/local/go/test/codegen/memcombine.go:227)	LEAQ	7(AX), DX
	0x0069 00105 (/usr/local/go/test/codegen/memcombine.go:227)	CMPQ	DX, CX
	0x006c 00108 (/usr/local/go/test/codegen/memcombine.go:227)	JCC	134
	0x006e 00110 (/usr/local/go/test/codegen/memcombine.go:227)	MOVQ	"".s+32(SP), CX
	0x0073 00115 (/usr/local/go/test/codegen/memcombine.go:227)	MOVQ	(CX)(AX*1), AX
	0x0077 00119 (/usr/local/go/test/codegen/memcombine.go:227)	MOVQ	AX, "".~r2+64(SP)
	0x007c 00124 (/usr/local/go/test/codegen/memcombine.go:227)	MOVQ	16(SP), BP
	0x0081 00129 (/usr/local/go/test/codegen/memcombine.go:227)	ADDQ	$24, SP
	0x0085 00133 (/usr/local/go/test/codegen/memcombine.go:227)	RET
	0x0086 00134 (/usr/local/go/test/codegen/memcombine.go:227)	MOVQ	DX, AX
	0x0089 00137 (/usr/local/go/test/codegen/memcombine.go:227)	PCDATA	$1, $1
	0x0089 00137 (/usr/local/go/test/codegen/memcombine.go:227)	CALL	runtime.panicIndex(SB)
	0x008e 00142 (/usr/local/go/test/codegen/memcombine.go:227)	MOVQ	DX, AX
	0x0091 00145 (/usr/local/go/test/codegen/memcombine.go:227)	CALL	runtime.panicIndex(SB)
	0x0096 00150 (/usr/local/go/test/codegen/memcombine.go:227)	MOVQ	DX, AX
	0x0099 00153 (/usr/local/go/test/codegen/memcombine.go:227)	CALL	runtime.panicIndex(SB)
	0x009e 00158 (/usr/local/go/test/codegen/memcombine.go:227)	MOVQ	DX, AX
	0x00a1 00161 (/usr/local/go/test/codegen/memcombine.go:227)	CALL	runtime.panicIndex(SB)
	0x00a6 00166 (/usr/local/go/test/codegen/memcombine.go:227)	MOVQ	DX, AX
	0x00a9 00169 (/usr/local/go/test/codegen/memcombine.go:227)	CALL	runtime.panicIndex(SB)
	0x00ae 00174 (/usr/local/go/test/codegen/memcombine.go:227)	MOVQ	DX, AX
	0x00b1 00177 (/usr/local/go/test/codegen/memcombine.go:227)	CALL	runtime.panicIndex(SB)
	0x00b6 00182 (/usr/local/go/test/codegen/memcombine.go:227)	MOVQ	DX, AX
	0x00b9 00185 (/usr/local/go/test/codegen/memcombine.go:227)	CALL	runtime.panicIndex(SB)
	0x00be 00190 (/usr/local/go/test/codegen/memcombine.go:227)	NOP
	0x00c0 00192 (/usr/local/go/test/codegen/memcombine.go:227)	CALL	runtime.panicIndex(SB)
	0x00c5 00197 (/usr/local/go/test/codegen/memcombine.go:227)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 8b 4c 24 28 0f 1f 84 00 00 00 00 00  D$8H.L$(........
	0x0020 48 39 c8 0f 83 97 00 00 00 48 8d 50 01 48 39 ca  H9.......H.P.H9.
	0x0030 0f 83 80 00 00 00 48 8d 50 02 48 39 ca 73 6f 48  ......H.P.H9.soH
	0x0040 8d 50 03 48 39 ca 73 5e 48 8d 50 04 48 39 ca 73  .P.H9.s^H.P.H9.s
	0x0050 4d 48 8d 50 05 48 39 ca 73 3c 48 8d 50 06 66 90  MH.P.H9.s<H.P.f.
	0x0060 48 39 ca 73 29 48 8d 50 07 48 39 ca 73 18 48 8b  H9.s)H.P.H9.s.H.
	0x0070 4c 24 20 48 8b 04 01 48 89 44 24 40 48 8b 6c 24  L$ H...H.D$@H.l$
	0x0080 10 48 83 c4 18 c3 48 89 d0 e8 00 00 00 00 48 89  .H....H.......H.
	0x0090 d0 e8 00 00 00 00 48 89 d0 e8 00 00 00 00 48 89  ......H.......H.
	0x00a0 d0 e8 00 00 00 00 48 89 d0 e8 00 00 00 00 48 89  ......H.......H.
	0x00b0 d0 e8 00 00 00 00 48 89 d0 e8 00 00 00 00 66 90  ......H.......f.
	0x00c0 e8 00 00 00 00 90                                ......
	rel 138+4 t=8 runtime.panicIndex+0
	rel 146+4 t=8 runtime.panicIndex+0
	rel 154+4 t=8 runtime.panicIndex+0
	rel 162+4 t=8 runtime.panicIndex+0
	rel 170+4 t=8 runtime.panicIndex+0
	rel 178+4 t=8 runtime.panicIndex+0
	rel 186+4 t=8 runtime.panicIndex+0
	rel 193+4 t=8 runtime.panicIndex+0
"".load_le_byte8_uint64_idx_inv STEXT nosplit size=302 args=0x28 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:230)	TEXT	"".load_le_byte8_uint64_idx_inv(SB), NOSPLIT|ABIInternal, $24-40
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:230)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:230)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:230)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:230)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:230)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:232)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:232)	LEAQ	7(AX), DX
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:232)	MOVQ	"".s+40(SP), CX
	0x001c 00028 (/usr/local/go/test/codegen/memcombine.go:232)	NOP
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:232)	CMPQ	DX, CX
	0x0023 00035 (/usr/local/go/test/codegen/memcombine.go:232)	JCC	293
	0x0029 00041 (/usr/local/go/test/codegen/memcombine.go:232)	MOVQ	"".s+32(SP), DX
	0x002e 00046 (/usr/local/go/test/codegen/memcombine.go:232)	MOVBLZX	7(AX)(DX*1), BX
	0x0033 00051 (/usr/local/go/test/codegen/memcombine.go:232)	LEAQ	6(AX), SI
	0x0037 00055 (/usr/local/go/test/codegen/memcombine.go:232)	NOP
	0x0040 00064 (/usr/local/go/test/codegen/memcombine.go:232)	CMPQ	SI, CX
	0x0043 00067 (/usr/local/go/test/codegen/memcombine.go:232)	JCC	285
	0x0049 00073 (/usr/local/go/test/codegen/memcombine.go:232)	SHLQ	$56, BX
	0x004d 00077 (/usr/local/go/test/codegen/memcombine.go:232)	MOVBLZX	6(AX)(DX*1), SI
	0x0052 00082 (/usr/local/go/test/codegen/memcombine.go:232)	SHLQ	$48, SI
	0x0056 00086 (/usr/local/go/test/codegen/memcombine.go:232)	ORQ	BX, SI
	0x0059 00089 (/usr/local/go/test/codegen/memcombine.go:232)	LEAQ	5(AX), BX
	0x005d 00093 (/usr/local/go/test/codegen/memcombine.go:232)	NOP
	0x0060 00096 (/usr/local/go/test/codegen/memcombine.go:232)	CMPQ	BX, CX
	0x0063 00099 (/usr/local/go/test/codegen/memcombine.go:232)	JCC	277
	0x0069 00105 (/usr/local/go/test/codegen/memcombine.go:232)	MOVBLZX	5(AX)(DX*1), BX
	0x006e 00110 (/usr/local/go/test/codegen/memcombine.go:232)	SHLQ	$40, BX
	0x0072 00114 (/usr/local/go/test/codegen/memcombine.go:232)	ORQ	SI, BX
	0x0075 00117 (/usr/local/go/test/codegen/memcombine.go:232)	LEAQ	4(AX), SI
	0x0079 00121 (/usr/local/go/test/codegen/memcombine.go:232)	NOP
	0x0080 00128 (/usr/local/go/test/codegen/memcombine.go:232)	CMPQ	SI, CX
	0x0083 00131 (/usr/local/go/test/codegen/memcombine.go:232)	JCC	269
	0x0089 00137 (/usr/local/go/test/codegen/memcombine.go:232)	MOVBLZX	4(AX)(DX*1), SI
	0x008e 00142 (/usr/local/go/test/codegen/memcombine.go:232)	SHLQ	$32, SI
	0x0092 00146 (/usr/local/go/test/codegen/memcombine.go:232)	ORQ	BX, SI
	0x0095 00149 (/usr/local/go/test/codegen/memcombine.go:232)	LEAQ	3(AX), BX
	0x0099 00153 (/usr/local/go/test/codegen/memcombine.go:232)	CMPQ	BX, CX
	0x009c 00156 (/usr/local/go/test/codegen/memcombine.go:232)	JCC	261
	0x009e 00158 (/usr/local/go/test/codegen/memcombine.go:232)	MOVBLZX	3(AX)(DX*1), BX
	0x00a3 00163 (/usr/local/go/test/codegen/memcombine.go:232)	SHLQ	$24, BX
	0x00a7 00167 (/usr/local/go/test/codegen/memcombine.go:232)	ORQ	SI, BX
	0x00aa 00170 (/usr/local/go/test/codegen/memcombine.go:232)	LEAQ	2(AX), SI
	0x00ae 00174 (/usr/local/go/test/codegen/memcombine.go:232)	CMPQ	SI, CX
	0x00b1 00177 (/usr/local/go/test/codegen/memcombine.go:232)	JCC	252
	0x00b3 00179 (/usr/local/go/test/codegen/memcombine.go:232)	MOVBLZX	2(AX)(DX*1), SI
	0x00b8 00184 (/usr/local/go/test/codegen/memcombine.go:232)	SHLQ	$16, SI
	0x00bc 00188 (/usr/local/go/test/codegen/memcombine.go:232)	ORQ	BX, SI
	0x00bf 00191 (/usr/local/go/test/codegen/memcombine.go:232)	LEAQ	1(AX), BX
	0x00c3 00195 (/usr/local/go/test/codegen/memcombine.go:232)	CMPQ	BX, CX
	0x00c6 00198 (/usr/local/go/test/codegen/memcombine.go:232)	JCC	244
	0x00c8 00200 (/usr/local/go/test/codegen/memcombine.go:232)	MOVBLZX	1(AX)(DX*1), BX
	0x00cd 00205 (/usr/local/go/test/codegen/memcombine.go:232)	SHLQ	$8, BX
	0x00d1 00209 (/usr/local/go/test/codegen/memcombine.go:232)	ORQ	SI, BX
	0x00d4 00212 (/usr/local/go/test/codegen/memcombine.go:232)	CMPQ	AX, CX
	0x00d7 00215 (/usr/local/go/test/codegen/memcombine.go:232)	JCC	239
	0x00d9 00217 (/usr/local/go/test/codegen/memcombine.go:232)	MOVBLZX	(DX)(AX*1), AX
	0x00dd 00221 (/usr/local/go/test/codegen/memcombine.go:232)	ORQ	BX, AX
	0x00e0 00224 (/usr/local/go/test/codegen/memcombine.go:232)	MOVQ	AX, "".~r2+64(SP)
	0x00e5 00229 (/usr/local/go/test/codegen/memcombine.go:232)	MOVQ	16(SP), BP
	0x00ea 00234 (/usr/local/go/test/codegen/memcombine.go:232)	ADDQ	$24, SP
	0x00ee 00238 (/usr/local/go/test/codegen/memcombine.go:232)	RET
	0x00ef 00239 (/usr/local/go/test/codegen/memcombine.go:232)	PCDATA	$1, $1
	0x00ef 00239 (/usr/local/go/test/codegen/memcombine.go:232)	CALL	runtime.panicIndex(SB)
	0x00f4 00244 (/usr/local/go/test/codegen/memcombine.go:232)	MOVQ	BX, AX
	0x00f7 00247 (/usr/local/go/test/codegen/memcombine.go:232)	CALL	runtime.panicIndex(SB)
	0x00fc 00252 (/usr/local/go/test/codegen/memcombine.go:232)	MOVQ	SI, AX
	0x00ff 00255 (/usr/local/go/test/codegen/memcombine.go:232)	NOP
	0x0100 00256 (/usr/local/go/test/codegen/memcombine.go:232)	CALL	runtime.panicIndex(SB)
	0x0105 00261 (/usr/local/go/test/codegen/memcombine.go:232)	MOVQ	BX, AX
	0x0108 00264 (/usr/local/go/test/codegen/memcombine.go:232)	CALL	runtime.panicIndex(SB)
	0x010d 00269 (/usr/local/go/test/codegen/memcombine.go:232)	MOVQ	SI, AX
	0x0110 00272 (/usr/local/go/test/codegen/memcombine.go:232)	CALL	runtime.panicIndex(SB)
	0x0115 00277 (/usr/local/go/test/codegen/memcombine.go:232)	MOVQ	BX, AX
	0x0118 00280 (/usr/local/go/test/codegen/memcombine.go:232)	CALL	runtime.panicIndex(SB)
	0x011d 00285 (/usr/local/go/test/codegen/memcombine.go:232)	MOVQ	SI, AX
	0x0120 00288 (/usr/local/go/test/codegen/memcombine.go:232)	CALL	runtime.panicIndex(SB)
	0x0125 00293 (/usr/local/go/test/codegen/memcombine.go:232)	MOVQ	DX, AX
	0x0128 00296 (/usr/local/go/test/codegen/memcombine.go:232)	CALL	runtime.panicIndex(SB)
	0x012d 00301 (/usr/local/go/test/codegen/memcombine.go:232)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 8d 50 07 48 8b 4c 24 28 0f 1f 40 00  D$8H.P.H.L$(..@.
	0x0020 48 39 ca 0f 83 fc 00 00 00 48 8b 54 24 20 0f b6  H9.......H.T$ ..
	0x0030 5c 10 07 48 8d 70 06 66 0f 1f 84 00 00 00 00 00  \..H.p.f........
	0x0040 48 39 ce 0f 83 d4 00 00 00 48 c1 e3 38 0f b6 74  H9.......H..8..t
	0x0050 10 06 48 c1 e6 30 48 09 de 48 8d 58 05 0f 1f 00  ..H..0H..H.X....
	0x0060 48 39 cb 0f 83 ac 00 00 00 0f b6 5c 10 05 48 c1  H9.........\..H.
	0x0070 e3 28 48 09 f3 48 8d 70 04 0f 1f 80 00 00 00 00  .(H..H.p........
	0x0080 48 39 ce 0f 83 84 00 00 00 0f b6 74 10 04 48 c1  H9.........t..H.
	0x0090 e6 20 48 09 de 48 8d 58 03 48 39 cb 73 67 0f b6  . H..H.X.H9.sg..
	0x00a0 5c 10 03 48 c1 e3 18 48 09 f3 48 8d 70 02 48 39  \..H...H..H.p.H9
	0x00b0 ce 73 49 0f b6 74 10 02 48 c1 e6 10 48 09 de 48  .sI..t..H...H..H
	0x00c0 8d 58 01 48 39 cb 73 2c 0f b6 5c 10 01 48 c1 e3  .X.H9.s,..\..H..
	0x00d0 08 48 09 f3 48 39 c8 73 16 0f b6 04 02 48 09 d8  .H..H9.s.....H..
	0x00e0 48 89 44 24 40 48 8b 6c 24 10 48 83 c4 18 c3 e8  H.D$@H.l$.H.....
	0x00f0 00 00 00 00 48 89 d8 e8 00 00 00 00 48 89 f0 90  ....H.......H...
	0x0100 e8 00 00 00 00 48 89 d8 e8 00 00 00 00 48 89 f0  .....H.......H..
	0x0110 e8 00 00 00 00 48 89 d8 e8 00 00 00 00 48 89 f0  .....H.......H..
	0x0120 e8 00 00 00 00 48 89 d0 e8 00 00 00 00 90        .....H........
	rel 240+4 t=8 runtime.panicIndex+0
	rel 248+4 t=8 runtime.panicIndex+0
	rel 257+4 t=8 runtime.panicIndex+0
	rel 265+4 t=8 runtime.panicIndex+0
	rel 273+4 t=8 runtime.panicIndex+0
	rel 281+4 t=8 runtime.panicIndex+0
	rel 289+4 t=8 runtime.panicIndex+0
	rel 297+4 t=8 runtime.panicIndex+0
"".load_be_byte2_uint16_idx STEXT nosplit size=80 args=0x28 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:235)	TEXT	"".load_be_byte2_uint16_idx(SB), NOSPLIT|ABIInternal, $24-40
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:235)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:235)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:235)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:235)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:235)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:238)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:238)	MOVQ	"".s+40(SP), CX
	0x0018 00024 (/usr/local/go/test/codegen/memcombine.go:238)	CMPQ	AX, CX
	0x001b 00027 (/usr/local/go/test/codegen/memcombine.go:238)	JCC	74
	0x001d 00029 (/usr/local/go/test/codegen/memcombine.go:238)	LEAQ	1(AX), DX
	0x0021 00033 (/usr/local/go/test/codegen/memcombine.go:238)	CMPQ	DX, CX
	0x0024 00036 (/usr/local/go/test/codegen/memcombine.go:238)	JCC	66
	0x0026 00038 (/usr/local/go/test/codegen/memcombine.go:238)	MOVQ	"".s+32(SP), CX
	0x002b 00043 (/usr/local/go/test/codegen/memcombine.go:238)	MOVWLZX	(CX)(AX*1), AX
	0x002f 00047 (/usr/local/go/test/codegen/memcombine.go:238)	ROLW	$8, AX
	0x0033 00051 (/usr/local/go/test/codegen/memcombine.go:238)	MOVW	AX, "".~r2+64(SP)
	0x0038 00056 (/usr/local/go/test/codegen/memcombine.go:238)	MOVQ	16(SP), BP
	0x003d 00061 (/usr/local/go/test/codegen/memcombine.go:238)	ADDQ	$24, SP
	0x0041 00065 (/usr/local/go/test/codegen/memcombine.go:238)	RET
	0x0042 00066 (/usr/local/go/test/codegen/memcombine.go:238)	MOVQ	DX, AX
	0x0045 00069 (/usr/local/go/test/codegen/memcombine.go:238)	PCDATA	$1, $1
	0x0045 00069 (/usr/local/go/test/codegen/memcombine.go:238)	CALL	runtime.panicIndex(SB)
	0x004a 00074 (/usr/local/go/test/codegen/memcombine.go:238)	CALL	runtime.panicIndex(SB)
	0x004f 00079 (/usr/local/go/test/codegen/memcombine.go:238)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 8b 4c 24 28 48 39 c8 73 2d 48 8d 50  D$8H.L$(H9.s-H.P
	0x0020 01 48 39 ca 73 1c 48 8b 4c 24 20 0f b7 04 01 66  .H9.s.H.L$ ....f
	0x0030 c1 c0 08 66 89 44 24 40 48 8b 6c 24 10 48 83 c4  ...f.D$@H.l$.H..
	0x0040 18 c3 48 89 d0 e8 00 00 00 00 e8 00 00 00 00 90  ..H.............
	rel 70+4 t=8 runtime.panicIndex+0
	rel 75+4 t=8 runtime.panicIndex+0
"".load_be_byte2_uint16_idx_inv STEXT nosplit size=84 args=0x28 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:241)	TEXT	"".load_be_byte2_uint16_idx_inv(SB), NOSPLIT|ABIInternal, $24-40
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:241)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:241)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:241)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:241)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:241)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:244)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:244)	LEAQ	1(AX), DX
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:244)	MOVQ	"".s+40(SP), CX
	0x001c 00028 (/usr/local/go/test/codegen/memcombine.go:244)	NOP
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:244)	CMPQ	DX, CX
	0x0023 00035 (/usr/local/go/test/codegen/memcombine.go:244)	JCC	75
	0x0025 00037 (/usr/local/go/test/codegen/memcombine.go:244)	CMPQ	AX, CX
	0x0028 00040 (/usr/local/go/test/codegen/memcombine.go:244)	JCC	70
	0x002a 00042 (/usr/local/go/test/codegen/memcombine.go:244)	MOVQ	"".s+32(SP), CX
	0x002f 00047 (/usr/local/go/test/codegen/memcombine.go:244)	MOVWLZX	(CX)(AX*1), AX
	0x0033 00051 (/usr/local/go/test/codegen/memcombine.go:244)	ROLW	$8, AX
	0x0037 00055 (/usr/local/go/test/codegen/memcombine.go:244)	MOVW	AX, "".~r2+64(SP)
	0x003c 00060 (/usr/local/go/test/codegen/memcombine.go:244)	MOVQ	16(SP), BP
	0x0041 00065 (/usr/local/go/test/codegen/memcombine.go:244)	ADDQ	$24, SP
	0x0045 00069 (/usr/local/go/test/codegen/memcombine.go:244)	RET
	0x0046 00070 (/usr/local/go/test/codegen/memcombine.go:244)	PCDATA	$1, $1
	0x0046 00070 (/usr/local/go/test/codegen/memcombine.go:244)	CALL	runtime.panicIndex(SB)
	0x004b 00075 (/usr/local/go/test/codegen/memcombine.go:244)	MOVQ	DX, AX
	0x004e 00078 (/usr/local/go/test/codegen/memcombine.go:244)	CALL	runtime.panicIndex(SB)
	0x0053 00083 (/usr/local/go/test/codegen/memcombine.go:244)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 8d 50 01 48 8b 4c 24 28 0f 1f 40 00  D$8H.P.H.L$(..@.
	0x0020 48 39 ca 73 26 48 39 c8 73 1c 48 8b 4c 24 20 0f  H9.s&H9.s.H.L$ .
	0x0030 b7 04 01 66 c1 c0 08 66 89 44 24 40 48 8b 6c 24  ...f...f.D$@H.l$
	0x0040 10 48 83 c4 18 c3 e8 00 00 00 00 48 89 d0 e8 00  .H.........H....
	0x0050 00 00 00 90                                      ....
	rel 71+4 t=8 runtime.panicIndex+0
	rel 79+4 t=8 runtime.panicIndex+0
"".load_be_byte4_uint32_idx STEXT nosplit size=139 args=0x28 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:247)	TEXT	"".load_be_byte4_uint32_idx(SB), NOSPLIT|ABIInternal, $24-40
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:247)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:247)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:247)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:247)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:247)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:249)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:249)	MOVQ	"".s+40(SP), CX
	0x0018 00024 (/usr/local/go/test/codegen/memcombine.go:249)	CMPQ	AX, CX
	0x001b 00027 (/usr/local/go/test/codegen/memcombine.go:249)	JCC	133
	0x001d 00029 (/usr/local/go/test/codegen/memcombine.go:249)	MOVQ	"".s+32(SP), DX
	0x0022 00034 (/usr/local/go/test/codegen/memcombine.go:249)	MOVBLZX	(DX)(AX*1), BX
	0x0026 00038 (/usr/local/go/test/codegen/memcombine.go:249)	LEAQ	1(AX), SI
	0x002a 00042 (/usr/local/go/test/codegen/memcombine.go:249)	CMPQ	SI, CX
	0x002d 00045 (/usr/local/go/test/codegen/memcombine.go:249)	JCC	125
	0x002f 00047 (/usr/local/go/test/codegen/memcombine.go:249)	SHLL	$24, BX
	0x0032 00050 (/usr/local/go/test/codegen/memcombine.go:249)	MOVBLZX	1(AX)(DX*1), SI
	0x0037 00055 (/usr/local/go/test/codegen/memcombine.go:249)	SHLL	$16, SI
	0x003a 00058 (/usr/local/go/test/codegen/memcombine.go:249)	ORL	SI, BX
	0x003c 00060 (/usr/local/go/test/codegen/memcombine.go:249)	LEAQ	2(AX), SI
	0x0040 00064 (/usr/local/go/test/codegen/memcombine.go:249)	CMPQ	SI, CX
	0x0043 00067 (/usr/local/go/test/codegen/memcombine.go:249)	JCC	117
	0x0045 00069 (/usr/local/go/test/codegen/memcombine.go:249)	MOVBLZX	2(AX)(DX*1), SI
	0x004a 00074 (/usr/local/go/test/codegen/memcombine.go:249)	SHLL	$8, SI
	0x004d 00077 (/usr/local/go/test/codegen/memcombine.go:249)	ORL	BX, SI
	0x004f 00079 (/usr/local/go/test/codegen/memcombine.go:249)	LEAQ	3(AX), BX
	0x0053 00083 (/usr/local/go/test/codegen/memcombine.go:249)	CMPQ	BX, CX
	0x0056 00086 (/usr/local/go/test/codegen/memcombine.go:249)	JCC	109
	0x0058 00088 (/usr/local/go/test/codegen/memcombine.go:249)	MOVBLZX	3(AX)(DX*1), AX
	0x005d 00093 (/usr/local/go/test/codegen/memcombine.go:249)	ORL	SI, AX
	0x005f 00095 (/usr/local/go/test/codegen/memcombine.go:249)	MOVL	AX, "".~r2+64(SP)
	0x0063 00099 (/usr/local/go/test/codegen/memcombine.go:249)	MOVQ	16(SP), BP
	0x0068 00104 (/usr/local/go/test/codegen/memcombine.go:249)	ADDQ	$24, SP
	0x006c 00108 (/usr/local/go/test/codegen/memcombine.go:249)	RET
	0x006d 00109 (/usr/local/go/test/codegen/memcombine.go:249)	MOVQ	BX, AX
	0x0070 00112 (/usr/local/go/test/codegen/memcombine.go:249)	PCDATA	$1, $1
	0x0070 00112 (/usr/local/go/test/codegen/memcombine.go:249)	CALL	runtime.panicIndex(SB)
	0x0075 00117 (/usr/local/go/test/codegen/memcombine.go:249)	MOVQ	SI, AX
	0x0078 00120 (/usr/local/go/test/codegen/memcombine.go:249)	CALL	runtime.panicIndex(SB)
	0x007d 00125 (/usr/local/go/test/codegen/memcombine.go:249)	MOVQ	SI, AX
	0x0080 00128 (/usr/local/go/test/codegen/memcombine.go:249)	CALL	runtime.panicIndex(SB)
	0x0085 00133 (/usr/local/go/test/codegen/memcombine.go:249)	CALL	runtime.panicIndex(SB)
	0x008a 00138 (/usr/local/go/test/codegen/memcombine.go:249)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 8b 4c 24 28 48 39 c8 73 68 48 8b 54  D$8H.L$(H9.shH.T
	0x0020 24 20 0f b6 1c 02 48 8d 70 01 48 39 ce 73 4e c1  $ ....H.p.H9.sN.
	0x0030 e3 18 0f b6 74 10 01 c1 e6 10 09 f3 48 8d 70 02  ....t.......H.p.
	0x0040 48 39 ce 73 30 0f b6 74 10 02 c1 e6 08 09 de 48  H9.s0..t.......H
	0x0050 8d 58 03 48 39 cb 73 15 0f b6 44 10 03 09 f0 89  .X.H9.s...D.....
	0x0060 44 24 40 48 8b 6c 24 10 48 83 c4 18 c3 48 89 d8  D$@H.l$.H....H..
	0x0070 e8 00 00 00 00 48 89 f0 e8 00 00 00 00 48 89 f0  .....H.......H..
	0x0080 e8 00 00 00 00 e8 00 00 00 00 90                 ...........
	rel 113+4 t=8 runtime.panicIndex+0
	rel 121+4 t=8 runtime.panicIndex+0
	rel 129+4 t=8 runtime.panicIndex+0
	rel 134+4 t=8 runtime.panicIndex+0
"".load_be_byte8_uint64_idx STEXT nosplit size=294 args=0x28 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:252)	TEXT	"".load_be_byte8_uint64_idx(SB), NOSPLIT|ABIInternal, $24-40
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:252)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:252)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:252)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:252)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:252)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:254)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:254)	MOVQ	"".s+40(SP), CX
	0x0018 00024 (/usr/local/go/test/codegen/memcombine.go:254)	NOP
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:254)	CMPQ	AX, CX
	0x0023 00035 (/usr/local/go/test/codegen/memcombine.go:254)	JCC	288
	0x0029 00041 (/usr/local/go/test/codegen/memcombine.go:254)	MOVQ	"".s+32(SP), DX
	0x002e 00046 (/usr/local/go/test/codegen/memcombine.go:254)	MOVBLZX	(DX)(AX*1), BX
	0x0032 00050 (/usr/local/go/test/codegen/memcombine.go:254)	LEAQ	1(AX), SI
	0x0036 00054 (/usr/local/go/test/codegen/memcombine.go:254)	CMPQ	SI, CX
	0x0039 00057 (/usr/local/go/test/codegen/memcombine.go:254)	JCC	277
	0x003f 00063 (/usr/local/go/test/codegen/memcombine.go:254)	SHLQ	$56, BX
	0x0043 00067 (/usr/local/go/test/codegen/memcombine.go:254)	MOVBLZX	1(AX)(DX*1), SI
	0x0048 00072 (/usr/local/go/test/codegen/memcombine.go:254)	SHLQ	$48, SI
	0x004c 00076 (/usr/local/go/test/codegen/memcombine.go:254)	ORQ	BX, SI
	0x004f 00079 (/usr/local/go/test/codegen/memcombine.go:254)	LEAQ	2(AX), BX
	0x0053 00083 (/usr/local/go/test/codegen/memcombine.go:254)	CMPQ	BX, CX
	0x0056 00086 (/usr/local/go/test/codegen/memcombine.go:254)	JCC	269
	0x005c 00092 (/usr/local/go/test/codegen/memcombine.go:254)	MOVBLZX	2(AX)(DX*1), BX
	0x0061 00097 (/usr/local/go/test/codegen/memcombine.go:254)	SHLQ	$40, BX
	0x0065 00101 (/usr/local/go/test/codegen/memcombine.go:254)	ORQ	SI, BX
	0x0068 00104 (/usr/local/go/test/codegen/memcombine.go:254)	LEAQ	3(AX), SI
	0x006c 00108 (/usr/local/go/test/codegen/memcombine.go:254)	CMPQ	SI, CX
	0x006f 00111 (/usr/local/go/test/codegen/memcombine.go:254)	JCC	261
	0x0075 00117 (/usr/local/go/test/codegen/memcombine.go:254)	MOVBLZX	3(AX)(DX*1), SI
	0x007a 00122 (/usr/local/go/test/codegen/memcombine.go:254)	SHLQ	$32, SI
	0x007e 00126 (/usr/local/go/test/codegen/memcombine.go:254)	ORQ	BX, SI
	0x0081 00129 (/usr/local/go/test/codegen/memcombine.go:254)	LEAQ	4(AX), BX
	0x0085 00133 (/usr/local/go/test/codegen/memcombine.go:254)	CMPQ	BX, CX
	0x0088 00136 (/usr/local/go/test/codegen/memcombine.go:254)	JCC	249
	0x008a 00138 (/usr/local/go/test/codegen/memcombine.go:254)	MOVBLZX	4(AX)(DX*1), BX
	0x008f 00143 (/usr/local/go/test/codegen/memcombine.go:254)	SHLQ	$24, BX
	0x0093 00147 (/usr/local/go/test/codegen/memcombine.go:254)	ORQ	SI, BX
	0x0096 00150 (/usr/local/go/test/codegen/memcombine.go:254)	LEAQ	5(AX), SI
	0x009a 00154 (/usr/local/go/test/codegen/memcombine.go:254)	CMPQ	SI, CX
	0x009d 00157 (/usr/local/go/test/codegen/memcombine.go:254)	JCC	241
	0x009f 00159 (/usr/local/go/test/codegen/memcombine.go:254)	MOVBLZX	5(AX)(DX*1), SI
	0x00a4 00164 (/usr/local/go/test/codegen/memcombine.go:254)	SHLQ	$16, SI
	0x00a8 00168 (/usr/local/go/test/codegen/memcombine.go:254)	ORQ	BX, SI
	0x00ab 00171 (/usr/local/go/test/codegen/memcombine.go:254)	LEAQ	6(AX), BX
	0x00af 00175 (/usr/local/go/test/codegen/memcombine.go:254)	CMPQ	BX, CX
	0x00b2 00178 (/usr/local/go/test/codegen/memcombine.go:254)	JCC	233
	0x00b4 00180 (/usr/local/go/test/codegen/memcombine.go:254)	MOVBLZX	6(AX)(DX*1), BX
	0x00b9 00185 (/usr/local/go/test/codegen/memcombine.go:254)	SHLQ	$8, BX
	0x00bd 00189 (/usr/local/go/test/codegen/memcombine.go:254)	ORQ	SI, BX
	0x00c0 00192 (/usr/local/go/test/codegen/memcombine.go:254)	LEAQ	7(AX), SI
	0x00c4 00196 (/usr/local/go/test/codegen/memcombine.go:254)	CMPQ	SI, CX
	0x00c7 00199 (/usr/local/go/test/codegen/memcombine.go:254)	JCC	225
	0x00c9 00201 (/usr/local/go/test/codegen/memcombine.go:254)	MOVBLZX	7(AX)(DX*1), AX
	0x00ce 00206 (/usr/local/go/test/codegen/memcombine.go:254)	ORQ	BX, AX
	0x00d1 00209 (/usr/local/go/test/codegen/memcombine.go:254)	MOVQ	AX, "".~r2+64(SP)
	0x00d6 00214 (/usr/local/go/test/codegen/memcombine.go:254)	MOVQ	16(SP), BP
	0x00db 00219 (/usr/local/go/test/codegen/memcombine.go:254)	ADDQ	$24, SP
	0x00df 00223 (/usr/local/go/test/codegen/memcombine.go:254)	NOP
	0x00e0 00224 (/usr/local/go/test/codegen/memcombine.go:254)	RET
	0x00e1 00225 (/usr/local/go/test/codegen/memcombine.go:254)	MOVQ	SI, AX
	0x00e4 00228 (/usr/local/go/test/codegen/memcombine.go:254)	PCDATA	$1, $1
	0x00e4 00228 (/usr/local/go/test/codegen/memcombine.go:254)	CALL	runtime.panicIndex(SB)
	0x00e9 00233 (/usr/local/go/test/codegen/memcombine.go:254)	MOVQ	BX, AX
	0x00ec 00236 (/usr/local/go/test/codegen/memcombine.go:254)	CALL	runtime.panicIndex(SB)
	0x00f1 00241 (/usr/local/go/test/codegen/memcombine.go:254)	MOVQ	SI, AX
	0x00f4 00244 (/usr/local/go/test/codegen/memcombine.go:254)	CALL	runtime.panicIndex(SB)
	0x00f9 00249 (/usr/local/go/test/codegen/memcombine.go:254)	MOVQ	BX, AX
	0x00fc 00252 (/usr/local/go/test/codegen/memcombine.go:254)	NOP
	0x0100 00256 (/usr/local/go/test/codegen/memcombine.go:254)	CALL	runtime.panicIndex(SB)
	0x0105 00261 (/usr/local/go/test/codegen/memcombine.go:254)	MOVQ	SI, AX
	0x0108 00264 (/usr/local/go/test/codegen/memcombine.go:254)	CALL	runtime.panicIndex(SB)
	0x010d 00269 (/usr/local/go/test/codegen/memcombine.go:254)	MOVQ	BX, AX
	0x0110 00272 (/usr/local/go/test/codegen/memcombine.go:254)	CALL	runtime.panicIndex(SB)
	0x0115 00277 (/usr/local/go/test/codegen/memcombine.go:254)	MOVQ	SI, AX
	0x0118 00280 (/usr/local/go/test/codegen/memcombine.go:254)	CALL	runtime.panicIndex(SB)
	0x011d 00285 (/usr/local/go/test/codegen/memcombine.go:254)	NOP
	0x0120 00288 (/usr/local/go/test/codegen/memcombine.go:254)	CALL	runtime.panicIndex(SB)
	0x0125 00293 (/usr/local/go/test/codegen/memcombine.go:254)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 8b 4c 24 28 0f 1f 84 00 00 00 00 00  D$8H.L$(........
	0x0020 48 39 c8 0f 83 f7 00 00 00 48 8b 54 24 20 0f b6  H9.......H.T$ ..
	0x0030 1c 02 48 8d 70 01 48 39 ce 0f 83 d6 00 00 00 48  ..H.p.H9.......H
	0x0040 c1 e3 38 0f b6 74 10 01 48 c1 e6 30 48 09 de 48  ..8..t..H..0H..H
	0x0050 8d 58 02 48 39 cb 0f 83 b1 00 00 00 0f b6 5c 10  .X.H9.........\.
	0x0060 02 48 c1 e3 28 48 09 f3 48 8d 70 03 48 39 ce 0f  .H..(H..H.p.H9..
	0x0070 83 90 00 00 00 0f b6 74 10 03 48 c1 e6 20 48 09  .......t..H.. H.
	0x0080 de 48 8d 58 04 48 39 cb 73 6f 0f b6 5c 10 04 48  .H.X.H9.so..\..H
	0x0090 c1 e3 18 48 09 f3 48 8d 70 05 48 39 ce 73 52 0f  ...H..H.p.H9.sR.
	0x00a0 b6 74 10 05 48 c1 e6 10 48 09 de 48 8d 58 06 48  .t..H...H..H.X.H
	0x00b0 39 cb 73 35 0f b6 5c 10 06 48 c1 e3 08 48 09 f3  9.s5..\..H...H..
	0x00c0 48 8d 70 07 48 39 ce 73 18 0f b6 44 10 07 48 09  H.p.H9.s...D..H.
	0x00d0 d8 48 89 44 24 40 48 8b 6c 24 10 48 83 c4 18 90  .H.D$@H.l$.H....
	0x00e0 c3 48 89 f0 e8 00 00 00 00 48 89 d8 e8 00 00 00  .H.......H......
	0x00f0 00 48 89 f0 e8 00 00 00 00 48 89 d8 0f 1f 40 00  .H.......H....@.
	0x0100 e8 00 00 00 00 48 89 f0 e8 00 00 00 00 48 89 d8  .....H.......H..
	0x0110 e8 00 00 00 00 48 89 f0 e8 00 00 00 00 0f 1f 00  .....H..........
	0x0120 e8 00 00 00 00 90                                ......
	rel 229+4 t=8 runtime.panicIndex+0
	rel 237+4 t=8 runtime.panicIndex+0
	rel 245+4 t=8 runtime.panicIndex+0
	rel 257+4 t=8 runtime.panicIndex+0
	rel 265+4 t=8 runtime.panicIndex+0
	rel 273+4 t=8 runtime.panicIndex+0
	rel 281+4 t=8 runtime.panicIndex+0
	rel 289+4 t=8 runtime.panicIndex+0
"".load_le_byte2_uint16_idx2 STEXT nosplit size=107 args=0x28 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:257)	TEXT	"".load_le_byte2_uint16_idx2(SB), NOSPLIT|ABIInternal, $24-40
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:257)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:257)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:257)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:257)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:257)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:259)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:259)	MOVQ	AX, DX
	0x0016 00022 (/usr/local/go/test/codegen/memcombine.go:259)	SHLQ	$1, AX
	0x0019 00025 (/usr/local/go/test/codegen/memcombine.go:259)	MOVQ	"".s+40(SP), CX
	0x001e 00030 (/usr/local/go/test/codegen/memcombine.go:259)	NOP
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:259)	CMPQ	AX, CX
	0x0023 00035 (/usr/local/go/test/codegen/memcombine.go:259)	JCC	101
	0x0025 00037 (/usr/local/go/test/codegen/memcombine.go:259)	MOVQ	"".s+32(SP), BX
	0x002a 00042 (/usr/local/go/test/codegen/memcombine.go:259)	LEAQ	(BX)(DX*2), SI
	0x002e 00046 (/usr/local/go/test/codegen/memcombine.go:259)	MOVBLZX	(SI), SI
	0x0031 00049 (/usr/local/go/test/codegen/memcombine.go:259)	LEAQ	(DX)(DX*1), AX
	0x0035 00053 (/usr/local/go/test/codegen/memcombine.go:259)	LEAQ	1(AX), AX
	0x0039 00057 (/usr/local/go/test/codegen/memcombine.go:259)	CMPQ	AX, CX
	0x003c 00060 (/usr/local/go/test/codegen/memcombine.go:259)	JCC	93
	0x003e 00062 (/usr/local/go/test/codegen/memcombine.go:259)	LEAQ	(BX)(DX*2), AX
	0x0042 00066 (/usr/local/go/test/codegen/memcombine.go:259)	LEAQ	1(AX), AX
	0x0046 00070 (/usr/local/go/test/codegen/memcombine.go:259)	MOVBLZX	(AX), AX
	0x0049 00073 (/usr/local/go/test/codegen/memcombine.go:259)	SHLL	$8, AX
	0x004c 00076 (/usr/local/go/test/codegen/memcombine.go:259)	ORL	AX, SI
	0x004e 00078 (/usr/local/go/test/codegen/memcombine.go:259)	MOVW	SI, "".~r2+64(SP)
	0x0053 00083 (/usr/local/go/test/codegen/memcombine.go:259)	MOVQ	16(SP), BP
	0x0058 00088 (/usr/local/go/test/codegen/memcombine.go:259)	ADDQ	$24, SP
	0x005c 00092 (/usr/local/go/test/codegen/memcombine.go:259)	RET
	0x005d 00093 (/usr/local/go/test/codegen/memcombine.go:259)	PCDATA	$1, $1
	0x005d 00093 (/usr/local/go/test/codegen/memcombine.go:259)	NOP
	0x0060 00096 (/usr/local/go/test/codegen/memcombine.go:259)	CALL	runtime.panicIndex(SB)
	0x0065 00101 (/usr/local/go/test/codegen/memcombine.go:259)	CALL	runtime.panicIndex(SB)
	0x006a 00106 (/usr/local/go/test/codegen/memcombine.go:259)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 89 c2 48 d1 e0 48 8b 4c 24 28 66 90  D$8H..H..H.L$(f.
	0x0020 48 39 c8 73 40 48 8b 5c 24 20 48 8d 34 53 0f b6  H9.s@H.\$ H.4S..
	0x0030 36 48 8d 04 12 48 8d 40 01 48 39 c8 73 1f 48 8d  6H...H.@.H9.s.H.
	0x0040 04 53 48 8d 40 01 0f b6 00 c1 e0 08 09 c6 66 89  .SH.@.........f.
	0x0050 74 24 40 48 8b 6c 24 10 48 83 c4 18 c3 0f 1f 00  t$@H.l$.H.......
	0x0060 e8 00 00 00 00 e8 00 00 00 00 90                 ...........
	rel 97+4 t=8 runtime.panicIndex+0
	rel 102+4 t=8 runtime.panicIndex+0
"".load_le_byte2_uint16_idx2_inv STEXT nosplit size=111 args=0x28 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:262)	TEXT	"".load_le_byte2_uint16_idx2_inv(SB), NOSPLIT|ABIInternal, $24-40
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:262)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:262)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:262)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:262)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:262)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:264)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:264)	LEAQ	(AX)(AX*1), DX
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:264)	LEAQ	1(DX), DX
	0x001b 00027 (/usr/local/go/test/codegen/memcombine.go:264)	MOVQ	"".s+40(SP), CX
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:264)	CMPQ	DX, CX
	0x0023 00035 (/usr/local/go/test/codegen/memcombine.go:264)	JCC	102
	0x0025 00037 (/usr/local/go/test/codegen/memcombine.go:264)	MOVQ	"".s+32(SP), DX
	0x002a 00042 (/usr/local/go/test/codegen/memcombine.go:264)	LEAQ	(DX)(AX*2), BX
	0x002e 00046 (/usr/local/go/test/codegen/memcombine.go:264)	LEAQ	1(BX), BX
	0x0032 00050 (/usr/local/go/test/codegen/memcombine.go:264)	MOVBLZX	(BX), BX
	0x0035 00053 (/usr/local/go/test/codegen/memcombine.go:264)	MOVQ	AX, SI
	0x0038 00056 (/usr/local/go/test/codegen/memcombine.go:264)	SHLQ	$1, AX
	0x003b 00059 (/usr/local/go/test/codegen/memcombine.go:264)	NOP
	0x0040 00064 (/usr/local/go/test/codegen/memcombine.go:264)	CMPQ	AX, CX
	0x0043 00067 (/usr/local/go/test/codegen/memcombine.go:264)	JCC	97
	0x0045 00069 (/usr/local/go/test/codegen/memcombine.go:264)	LEAQ	(DX)(SI*2), AX
	0x0049 00073 (/usr/local/go/test/codegen/memcombine.go:264)	MOVBLZX	(AX), AX
	0x004c 00076 (/usr/local/go/test/codegen/memcombine.go:264)	SHLL	$8, BX
	0x004f 00079 (/usr/local/go/test/codegen/memcombine.go:264)	ORL	AX, BX
	0x0051 00081 (/usr/local/go/test/codegen/memcombine.go:264)	MOVW	BX, "".~r2+64(SP)
	0x0056 00086 (/usr/local/go/test/codegen/memcombine.go:264)	MOVQ	16(SP), BP
	0x005b 00091 (/usr/local/go/test/codegen/memcombine.go:264)	ADDQ	$24, SP
	0x005f 00095 (/usr/local/go/test/codegen/memcombine.go:264)	NOP
	0x0060 00096 (/usr/local/go/test/codegen/memcombine.go:264)	RET
	0x0061 00097 (/usr/local/go/test/codegen/memcombine.go:264)	PCDATA	$1, $1
	0x0061 00097 (/usr/local/go/test/codegen/memcombine.go:264)	CALL	runtime.panicIndex(SB)
	0x0066 00102 (/usr/local/go/test/codegen/memcombine.go:264)	MOVQ	DX, AX
	0x0069 00105 (/usr/local/go/test/codegen/memcombine.go:264)	CALL	runtime.panicIndex(SB)
	0x006e 00110 (/usr/local/go/test/codegen/memcombine.go:264)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 8d 14 00 48 8d 52 01 48 8b 4c 24 28  D$8H...H.R.H.L$(
	0x0020 48 39 ca 73 41 48 8b 54 24 20 48 8d 1c 42 48 8d  H9.sAH.T$ H..BH.
	0x0030 5b 01 0f b6 1b 48 89 c6 48 d1 e0 0f 1f 44 00 00  [....H..H....D..
	0x0040 48 39 c8 73 1c 48 8d 04 72 0f b6 00 c1 e3 08 09  H9.s.H..r.......
	0x0050 c3 66 89 5c 24 40 48 8b 6c 24 10 48 83 c4 18 90  .f.\$@H.l$.H....
	0x0060 c3 e8 00 00 00 00 48 89 d0 e8 00 00 00 00 90     ......H........
	rel 98+4 t=8 runtime.panicIndex+0
	rel 106+4 t=8 runtime.panicIndex+0
"".load_le_byte4_uint32_idx4 STEXT nosplit size=166 args=0x28 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:267)	TEXT	"".load_le_byte4_uint32_idx4(SB), NOSPLIT|ABIInternal, $24-40
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:267)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:267)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:267)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:267)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:267)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:269)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:269)	MOVQ	AX, DX
	0x0016 00022 (/usr/local/go/test/codegen/memcombine.go:269)	SHLQ	$2, AX
	0x001a 00026 (/usr/local/go/test/codegen/memcombine.go:269)	MOVQ	"".s+40(SP), CX
	0x001f 00031 (/usr/local/go/test/codegen/memcombine.go:269)	NOP
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:269)	CMPQ	AX, CX
	0x0023 00035 (/usr/local/go/test/codegen/memcombine.go:269)	JCC	160
	0x0025 00037 (/usr/local/go/test/codegen/memcombine.go:269)	MOVQ	"".s+32(SP), BX
	0x002a 00042 (/usr/local/go/test/codegen/memcombine.go:269)	LEAQ	(BX)(DX*4), SI
	0x002e 00046 (/usr/local/go/test/codegen/memcombine.go:269)	MOVBLZX	(SI), SI
	0x0031 00049 (/usr/local/go/test/codegen/memcombine.go:269)	LEAQ	1(AX), DI
	0x0035 00053 (/usr/local/go/test/codegen/memcombine.go:269)	CMPQ	DI, CX
	0x0038 00056 (/usr/local/go/test/codegen/memcombine.go:269)	JCC	151
	0x003a 00058 (/usr/local/go/test/codegen/memcombine.go:269)	LEAQ	(BX)(DX*4), DI
	0x003e 00062 (/usr/local/go/test/codegen/memcombine.go:269)	LEAQ	1(DI), DI
	0x0042 00066 (/usr/local/go/test/codegen/memcombine.go:269)	MOVBLZX	(DI), DI
	0x0045 00069 (/usr/local/go/test/codegen/memcombine.go:269)	SHLL	$8, DI
	0x0048 00072 (/usr/local/go/test/codegen/memcombine.go:269)	ORL	SI, DI
	0x004a 00074 (/usr/local/go/test/codegen/memcombine.go:269)	LEAQ	2(AX), SI
	0x004e 00078 (/usr/local/go/test/codegen/memcombine.go:269)	CMPQ	SI, CX
	0x0051 00081 (/usr/local/go/test/codegen/memcombine.go:269)	JCC	143
	0x0053 00083 (/usr/local/go/test/codegen/memcombine.go:269)	LEAQ	(BX)(DX*4), SI
	0x0057 00087 (/usr/local/go/test/codegen/memcombine.go:269)	LEAQ	2(SI), SI
	0x005b 00091 (/usr/local/go/test/codegen/memcombine.go:269)	MOVBLZX	(SI), SI
	0x005e 00094 (/usr/local/go/test/codegen/memcombine.go:269)	SHLL	$16, SI
	0x0061 00097 (/usr/local/go/test/codegen/memcombine.go:269)	ORL	DI, SI
	0x0063 00099 (/usr/local/go/test/codegen/memcombine.go:269)	ADDQ	$3, AX
	0x0067 00103 (/usr/local/go/test/codegen/memcombine.go:269)	CMPQ	AX, CX
	0x006a 00106 (/usr/local/go/test/codegen/memcombine.go:269)	JCC	138
	0x006c 00108 (/usr/local/go/test/codegen/memcombine.go:269)	LEAQ	(BX)(DX*4), AX
	0x0070 00112 (/usr/local/go/test/codegen/memcombine.go:269)	LEAQ	3(AX), AX
	0x0074 00116 (/usr/local/go/test/codegen/memcombine.go:269)	MOVBLZX	(AX), AX
	0x0077 00119 (/usr/local/go/test/codegen/memcombine.go:269)	SHLL	$24, AX
	0x007a 00122 (/usr/local/go/test/codegen/memcombine.go:269)	ORL	SI, AX
	0x007c 00124 (/usr/local/go/test/codegen/memcombine.go:269)	MOVL	AX, "".~r2+64(SP)
	0x0080 00128 (/usr/local/go/test/codegen/memcombine.go:269)	MOVQ	16(SP), BP
	0x0085 00133 (/usr/local/go/test/codegen/memcombine.go:269)	ADDQ	$24, SP
	0x0089 00137 (/usr/local/go/test/codegen/memcombine.go:269)	RET
	0x008a 00138 (/usr/local/go/test/codegen/memcombine.go:269)	PCDATA	$1, $1
	0x008a 00138 (/usr/local/go/test/codegen/memcombine.go:269)	CALL	runtime.panicIndex(SB)
	0x008f 00143 (/usr/local/go/test/codegen/memcombine.go:269)	MOVQ	SI, AX
	0x0092 00146 (/usr/local/go/test/codegen/memcombine.go:269)	CALL	runtime.panicIndex(SB)
	0x0097 00151 (/usr/local/go/test/codegen/memcombine.go:269)	MOVQ	DI, AX
	0x009a 00154 (/usr/local/go/test/codegen/memcombine.go:269)	CALL	runtime.panicIndex(SB)
	0x009f 00159 (/usr/local/go/test/codegen/memcombine.go:269)	NOP
	0x00a0 00160 (/usr/local/go/test/codegen/memcombine.go:269)	CALL	runtime.panicIndex(SB)
	0x00a5 00165 (/usr/local/go/test/codegen/memcombine.go:269)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 89 c2 48 c1 e0 02 48 8b 4c 24 28 90  D$8H..H...H.L$(.
	0x0020 48 39 c8 73 7b 48 8b 5c 24 20 48 8d 34 93 0f b6  H9.s{H.\$ H.4...
	0x0030 36 48 8d 78 01 48 39 cf 73 5d 48 8d 3c 93 48 8d  6H.x.H9.s]H.<.H.
	0x0040 7f 01 0f b6 3f c1 e7 08 09 f7 48 8d 70 02 48 39  ....?.....H.p.H9
	0x0050 ce 73 3c 48 8d 34 93 48 8d 76 02 0f b6 36 c1 e6  .s<H.4.H.v...6..
	0x0060 10 09 fe 48 83 c0 03 48 39 c8 73 1e 48 8d 04 93  ...H...H9.s.H...
	0x0070 48 8d 40 03 0f b6 00 c1 e0 18 09 f0 89 44 24 40  H.@..........D$@
	0x0080 48 8b 6c 24 10 48 83 c4 18 c3 e8 00 00 00 00 48  H.l$.H.........H
	0x0090 89 f0 e8 00 00 00 00 48 89 f8 e8 00 00 00 00 90  .......H........
	0x00a0 e8 00 00 00 00 90                                ......
	rel 139+4 t=8 runtime.panicIndex+0
	rel 147+4 t=8 runtime.panicIndex+0
	rel 155+4 t=8 runtime.panicIndex+0
	rel 161+4 t=8 runtime.panicIndex+0
"".load_le_byte4_uint32_idx4_inv STEXT nosplit size=175 args=0x28 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:272)	TEXT	"".load_le_byte4_uint32_idx4_inv(SB), NOSPLIT|ABIInternal, $24-40
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:272)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:272)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:272)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:272)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:272)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:274)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:274)	MOVQ	AX, DX
	0x0016 00022 (/usr/local/go/test/codegen/memcombine.go:274)	SHLQ	$2, AX
	0x001a 00026 (/usr/local/go/test/codegen/memcombine.go:274)	LEAQ	3(AX), BX
	0x001e 00030 (/usr/local/go/test/codegen/memcombine.go:274)	MOVQ	"".s+40(SP), CX
	0x0023 00035 (/usr/local/go/test/codegen/memcombine.go:274)	CMPQ	BX, CX
	0x0026 00038 (/usr/local/go/test/codegen/memcombine.go:274)	JCC	166
	0x0028 00040 (/usr/local/go/test/codegen/memcombine.go:274)	MOVQ	"".s+32(SP), BX
	0x002d 00045 (/usr/local/go/test/codegen/memcombine.go:274)	LEAQ	(BX)(DX*4), SI
	0x0031 00049 (/usr/local/go/test/codegen/memcombine.go:274)	LEAQ	3(SI), SI
	0x0035 00053 (/usr/local/go/test/codegen/memcombine.go:274)	MOVBLZX	(SI), SI
	0x0038 00056 (/usr/local/go/test/codegen/memcombine.go:274)	LEAQ	2(AX), DI
	0x003c 00060 (/usr/local/go/test/codegen/memcombine.go:274)	NOP
	0x0040 00064 (/usr/local/go/test/codegen/memcombine.go:274)	CMPQ	DI, CX
	0x0043 00067 (/usr/local/go/test/codegen/memcombine.go:274)	JCC	158
	0x0045 00069 (/usr/local/go/test/codegen/memcombine.go:274)	SHLL	$24, SI
	0x0048 00072 (/usr/local/go/test/codegen/memcombine.go:274)	LEAQ	(BX)(DX*4), DI
	0x004c 00076 (/usr/local/go/test/codegen/memcombine.go:274)	LEAQ	2(DI), DI
	0x0050 00080 (/usr/local/go/test/codegen/memcombine.go:274)	MOVBLZX	(DI), DI
	0x0053 00083 (/usr/local/go/test/codegen/memcombine.go:274)	SHLL	$16, DI
	0x0056 00086 (/usr/local/go/test/codegen/memcombine.go:274)	ORL	DI, SI
	0x0058 00088 (/usr/local/go/test/codegen/memcombine.go:274)	LEAQ	1(AX), DI
	0x005c 00092 (/usr/local/go/test/codegen/memcombine.go:274)	NOP
	0x0060 00096 (/usr/local/go/test/codegen/memcombine.go:274)	CMPQ	DI, CX
	0x0063 00099 (/usr/local/go/test/codegen/memcombine.go:274)	JCC	150
	0x0065 00101 (/usr/local/go/test/codegen/memcombine.go:274)	LEAQ	(BX)(DX*4), DI
	0x0069 00105 (/usr/local/go/test/codegen/memcombine.go:274)	LEAQ	1(DI), DI
	0x006d 00109 (/usr/local/go/test/codegen/memcombine.go:274)	MOVBLZX	(DI), DI
	0x0070 00112 (/usr/local/go/test/codegen/memcombine.go:274)	SHLL	$8, DI
	0x0073 00115 (/usr/local/go/test/codegen/memcombine.go:274)	ORL	SI, DI
	0x0075 00117 (/usr/local/go/test/codegen/memcombine.go:274)	CMPQ	AX, CX
	0x0078 00120 (/usr/local/go/test/codegen/memcombine.go:274)	JCC	145
	0x007a 00122 (/usr/local/go/test/codegen/memcombine.go:274)	LEAQ	(BX)(DX*4), AX
	0x007e 00126 (/usr/local/go/test/codegen/memcombine.go:274)	MOVBLZX	(AX), AX
	0x0081 00129 (/usr/local/go/test/codegen/memcombine.go:274)	ORL	AX, DI
	0x0083 00131 (/usr/local/go/test/codegen/memcombine.go:274)	MOVL	DI, "".~r2+64(SP)
	0x0087 00135 (/usr/local/go/test/codegen/memcombine.go:274)	MOVQ	16(SP), BP
	0x008c 00140 (/usr/local/go/test/codegen/memcombine.go:274)	ADDQ	$24, SP
	0x0090 00144 (/usr/local/go/test/codegen/memcombine.go:274)	RET
	0x0091 00145 (/usr/local/go/test/codegen/memcombine.go:274)	PCDATA	$1, $1
	0x0091 00145 (/usr/local/go/test/codegen/memcombine.go:274)	CALL	runtime.panicIndex(SB)
	0x0096 00150 (/usr/local/go/test/codegen/memcombine.go:274)	MOVQ	DI, AX
	0x0099 00153 (/usr/local/go/test/codegen/memcombine.go:274)	CALL	runtime.panicIndex(SB)
	0x009e 00158 (/usr/local/go/test/codegen/memcombine.go:274)	MOVQ	DI, AX
	0x00a1 00161 (/usr/local/go/test/codegen/memcombine.go:274)	CALL	runtime.panicIndex(SB)
	0x00a6 00166 (/usr/local/go/test/codegen/memcombine.go:274)	MOVQ	BX, AX
	0x00a9 00169 (/usr/local/go/test/codegen/memcombine.go:274)	CALL	runtime.panicIndex(SB)
	0x00ae 00174 (/usr/local/go/test/codegen/memcombine.go:274)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 89 c2 48 c1 e0 02 48 8d 58 03 48 8b  D$8H..H...H.X.H.
	0x0020 4c 24 28 48 39 cb 73 7e 48 8b 5c 24 20 48 8d 34  L$(H9.s~H.\$ H.4
	0x0030 93 48 8d 76 03 0f b6 36 48 8d 78 02 0f 1f 40 00  .H.v...6H.x...@.
	0x0040 48 39 cf 73 59 c1 e6 18 48 8d 3c 93 48 8d 7f 02  H9.sY...H.<.H...
	0x0050 0f b6 3f c1 e7 10 09 fe 48 8d 78 01 0f 1f 40 00  ..?.....H.x...@.
	0x0060 48 39 cf 73 31 48 8d 3c 93 48 8d 7f 01 0f b6 3f  H9.s1H.<.H.....?
	0x0070 c1 e7 08 09 f7 48 39 c8 73 17 48 8d 04 93 0f b6  .....H9.s.H.....
	0x0080 00 09 c7 89 7c 24 40 48 8b 6c 24 10 48 83 c4 18  ....|$@H.l$.H...
	0x0090 c3 e8 00 00 00 00 48 89 f8 e8 00 00 00 00 48 89  ......H.......H.
	0x00a0 f8 e8 00 00 00 00 48 89 d8 e8 00 00 00 00 90     ......H........
	rel 146+4 t=8 runtime.panicIndex+0
	rel 154+4 t=8 runtime.panicIndex+0
	rel 162+4 t=8 runtime.panicIndex+0
	rel 170+4 t=8 runtime.panicIndex+0
"".load_le_byte8_uint64_idx8 STEXT nosplit size=358 args=0x28 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:277)	TEXT	"".load_le_byte8_uint64_idx8(SB), NOSPLIT|ABIInternal, $24-40
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:277)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:277)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:277)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:277)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:277)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:279)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:279)	MOVQ	AX, DX
	0x0016 00022 (/usr/local/go/test/codegen/memcombine.go:279)	SHLQ	$3, AX
	0x001a 00026 (/usr/local/go/test/codegen/memcombine.go:279)	MOVQ	"".s+40(SP), CX
	0x001f 00031 (/usr/local/go/test/codegen/memcombine.go:279)	NOP
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:279)	CMPQ	AX, CX
	0x0023 00035 (/usr/local/go/test/codegen/memcombine.go:279)	JCC	352
	0x0029 00041 (/usr/local/go/test/codegen/memcombine.go:279)	MOVQ	"".s+32(SP), BX
	0x002e 00046 (/usr/local/go/test/codegen/memcombine.go:279)	LEAQ	(BX)(DX*8), SI
	0x0032 00050 (/usr/local/go/test/codegen/memcombine.go:279)	MOVBLZX	(SI), SI
	0x0035 00053 (/usr/local/go/test/codegen/memcombine.go:279)	LEAQ	1(AX), DI
	0x0039 00057 (/usr/local/go/test/codegen/memcombine.go:279)	NOP
	0x0040 00064 (/usr/local/go/test/codegen/memcombine.go:279)	CMPQ	DI, CX
	0x0043 00067 (/usr/local/go/test/codegen/memcombine.go:279)	JCC	341
	0x0049 00073 (/usr/local/go/test/codegen/memcombine.go:279)	LEAQ	(BX)(DX*8), DI
	0x004d 00077 (/usr/local/go/test/codegen/memcombine.go:279)	LEAQ	1(DI), DI
	0x0051 00081 (/usr/local/go/test/codegen/memcombine.go:279)	MOVBLZX	(DI), DI
	0x0054 00084 (/usr/local/go/test/codegen/memcombine.go:279)	SHLQ	$8, DI
	0x0058 00088 (/usr/local/go/test/codegen/memcombine.go:279)	ORQ	SI, DI
	0x005b 00091 (/usr/local/go/test/codegen/memcombine.go:279)	LEAQ	2(AX), SI
	0x005f 00095 (/usr/local/go/test/codegen/memcombine.go:279)	NOP
	0x0060 00096 (/usr/local/go/test/codegen/memcombine.go:279)	CMPQ	SI, CX
	0x0063 00099 (/usr/local/go/test/codegen/memcombine.go:279)	JCC	333
	0x0069 00105 (/usr/local/go/test/codegen/memcombine.go:279)	LEAQ	(BX)(DX*8), SI
	0x006d 00109 (/usr/local/go/test/codegen/memcombine.go:279)	LEAQ	2(SI), SI
	0x0071 00113 (/usr/local/go/test/codegen/memcombine.go:279)	MOVBLZX	(SI), SI
	0x0074 00116 (/usr/local/go/test/codegen/memcombine.go:279)	SHLQ	$16, SI
	0x0078 00120 (/usr/local/go/test/codegen/memcombine.go:279)	ORQ	DI, SI
	0x007b 00123 (/usr/local/go/test/codegen/memcombine.go:279)	LEAQ	3(AX), DI
	0x007f 00127 (/usr/local/go/test/codegen/memcombine.go:279)	NOP
	0x0080 00128 (/usr/local/go/test/codegen/memcombine.go:279)	CMPQ	DI, CX
	0x0083 00131 (/usr/local/go/test/codegen/memcombine.go:279)	JCC	325
	0x0089 00137 (/usr/local/go/test/codegen/memcombine.go:279)	LEAQ	(BX)(DX*8), DI
	0x008d 00141 (/usr/local/go/test/codegen/memcombine.go:279)	LEAQ	3(DI), DI
	0x0091 00145 (/usr/local/go/test/codegen/memcombine.go:279)	MOVBLZX	(DI), DI
	0x0094 00148 (/usr/local/go/test/codegen/memcombine.go:279)	SHLQ	$24, DI
	0x0098 00152 (/usr/local/go/test/codegen/memcombine.go:279)	ORQ	SI, DI
	0x009b 00155 (/usr/local/go/test/codegen/memcombine.go:279)	LEAQ	4(AX), SI
	0x009f 00159 (/usr/local/go/test/codegen/memcombine.go:279)	NOP
	0x00a0 00160 (/usr/local/go/test/codegen/memcombine.go:279)	CMPQ	SI, CX
	0x00a3 00163 (/usr/local/go/test/codegen/memcombine.go:279)	JCC	315
	0x00a9 00169 (/usr/local/go/test/codegen/memcombine.go:279)	LEAQ	(BX)(DX*8), SI
	0x00ad 00173 (/usr/local/go/test/codegen/memcombine.go:279)	LEAQ	4(SI), SI
	0x00b1 00177 (/usr/local/go/test/codegen/memcombine.go:279)	MOVBLZX	(SI), SI
	0x00b4 00180 (/usr/local/go/test/codegen/memcombine.go:279)	SHLQ	$32, SI
	0x00b8 00184 (/usr/local/go/test/codegen/memcombine.go:279)	ORQ	DI, SI
	0x00bb 00187 (/usr/local/go/test/codegen/memcombine.go:279)	LEAQ	5(AX), DI
	0x00bf 00191 (/usr/local/go/test/codegen/memcombine.go:279)	NOP
	0x00c0 00192 (/usr/local/go/test/codegen/memcombine.go:279)	CMPQ	DI, CX
	0x00c3 00195 (/usr/local/go/test/codegen/memcombine.go:279)	JCC	307
	0x00c5 00197 (/usr/local/go/test/codegen/memcombine.go:279)	LEAQ	(BX)(DX*8), DI
	0x00c9 00201 (/usr/local/go/test/codegen/memcombine.go:279)	LEAQ	5(DI), DI
	0x00cd 00205 (/usr/local/go/test/codegen/memcombine.go:279)	MOVBLZX	(DI), DI
	0x00d0 00208 (/usr/local/go/test/codegen/memcombine.go:279)	SHLQ	$40, DI
	0x00d4 00212 (/usr/local/go/test/codegen/memcombine.go:279)	ORQ	SI, DI
	0x00d7 00215 (/usr/local/go/test/codegen/memcombine.go:279)	LEAQ	6(AX), SI
	0x00db 00219 (/usr/local/go/test/codegen/memcombine.go:279)	NOP
	0x00e0 00224 (/usr/local/go/test/codegen/memcombine.go:279)	CMPQ	SI, CX
	0x00e3 00227 (/usr/local/go/test/codegen/memcombine.go:279)	JCC	299
	0x00e5 00229 (/usr/local/go/test/codegen/memcombine.go:279)	LEAQ	(BX)(DX*8), SI
	0x00e9 00233 (/usr/local/go/test/codegen/memcombine.go:279)	LEAQ	6(SI), SI
	0x00ed 00237 (/usr/local/go/test/codegen/memcombine.go:279)	MOVBLZX	(SI), SI
	0x00f0 00240 (/usr/local/go/test/codegen/memcombine.go:279)	SHLQ	$48, SI
	0x00f4 00244 (/usr/local/go/test/codegen/memcombine.go:279)	ORQ	DI, SI
	0x00f7 00247 (/usr/local/go/test/codegen/memcombine.go:279)	ADDQ	$7, AX
	0x00fb 00251 (/usr/local/go/test/codegen/memcombine.go:279)	NOP
	0x0100 00256 (/usr/local/go/test/codegen/memcombine.go:279)	CMPQ	AX, CX
	0x0103 00259 (/usr/local/go/test/codegen/memcombine.go:279)	JCC	294
	0x0105 00261 (/usr/local/go/test/codegen/memcombine.go:279)	LEAQ	(BX)(DX*8), AX
	0x0109 00265 (/usr/local/go/test/codegen/memcombine.go:279)	LEAQ	7(AX), AX
	0x010d 00269 (/usr/local/go/test/codegen/memcombine.go:279)	MOVBLZX	(AX), AX
	0x0110 00272 (/usr/local/go/test/codegen/memcombine.go:279)	SHLQ	$56, AX
	0x0114 00276 (/usr/local/go/test/codegen/memcombine.go:279)	ORQ	SI, AX
	0x0117 00279 (/usr/local/go/test/codegen/memcombine.go:279)	MOVQ	AX, "".~r2+64(SP)
	0x011c 00284 (/usr/local/go/test/codegen/memcombine.go:279)	MOVQ	16(SP), BP
	0x0121 00289 (/usr/local/go/test/codegen/memcombine.go:279)	ADDQ	$24, SP
	0x0125 00293 (/usr/local/go/test/codegen/memcombine.go:279)	RET
	0x0126 00294 (/usr/local/go/test/codegen/memcombine.go:279)	PCDATA	$1, $1
	0x0126 00294 (/usr/local/go/test/codegen/memcombine.go:279)	CALL	runtime.panicIndex(SB)
	0x012b 00299 (/usr/local/go/test/codegen/memcombine.go:279)	MOVQ	SI, AX
	0x012e 00302 (/usr/local/go/test/codegen/memcombine.go:279)	CALL	runtime.panicIndex(SB)
	0x0133 00307 (/usr/local/go/test/codegen/memcombine.go:279)	MOVQ	DI, AX
	0x0136 00310 (/usr/local/go/test/codegen/memcombine.go:279)	CALL	runtime.panicIndex(SB)
	0x013b 00315 (/usr/local/go/test/codegen/memcombine.go:279)	MOVQ	SI, AX
	0x013e 00318 (/usr/local/go/test/codegen/memcombine.go:279)	NOP
	0x0140 00320 (/usr/local/go/test/codegen/memcombine.go:279)	CALL	runtime.panicIndex(SB)
	0x0145 00325 (/usr/local/go/test/codegen/memcombine.go:279)	MOVQ	DI, AX
	0x0148 00328 (/usr/local/go/test/codegen/memcombine.go:279)	CALL	runtime.panicIndex(SB)
	0x014d 00333 (/usr/local/go/test/codegen/memcombine.go:279)	MOVQ	SI, AX
	0x0150 00336 (/usr/local/go/test/codegen/memcombine.go:279)	CALL	runtime.panicIndex(SB)
	0x0155 00341 (/usr/local/go/test/codegen/memcombine.go:279)	MOVQ	DI, AX
	0x0158 00344 (/usr/local/go/test/codegen/memcombine.go:279)	CALL	runtime.panicIndex(SB)
	0x015d 00349 (/usr/local/go/test/codegen/memcombine.go:279)	NOP
	0x0160 00352 (/usr/local/go/test/codegen/memcombine.go:279)	CALL	runtime.panicIndex(SB)
	0x0165 00357 (/usr/local/go/test/codegen/memcombine.go:279)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 89 c2 48 c1 e0 03 48 8b 4c 24 28 90  D$8H..H...H.L$(.
	0x0020 48 39 c8 0f 83 37 01 00 00 48 8b 5c 24 20 48 8d  H9...7...H.\$ H.
	0x0030 34 d3 0f b6 36 48 8d 78 01 0f 1f 80 00 00 00 00  4...6H.x........
	0x0040 48 39 cf 0f 83 0c 01 00 00 48 8d 3c d3 48 8d 7f  H9.......H.<.H..
	0x0050 01 0f b6 3f 48 c1 e7 08 48 09 f7 48 8d 70 02 90  ...?H...H..H.p..
	0x0060 48 39 ce 0f 83 e4 00 00 00 48 8d 34 d3 48 8d 76  H9.......H.4.H.v
	0x0070 02 0f b6 36 48 c1 e6 10 48 09 fe 48 8d 78 03 90  ...6H...H..H.x..
	0x0080 48 39 cf 0f 83 bc 00 00 00 48 8d 3c d3 48 8d 7f  H9.......H.<.H..
	0x0090 03 0f b6 3f 48 c1 e7 18 48 09 f7 48 8d 70 04 90  ...?H...H..H.p..
	0x00a0 48 39 ce 0f 83 92 00 00 00 48 8d 34 d3 48 8d 76  H9.......H.4.H.v
	0x00b0 04 0f b6 36 48 c1 e6 20 48 09 fe 48 8d 78 05 90  ...6H.. H..H.x..
	0x00c0 48 39 cf 73 6e 48 8d 3c d3 48 8d 7f 05 0f b6 3f  H9.snH.<.H.....?
	0x00d0 48 c1 e7 28 48 09 f7 48 8d 70 06 0f 1f 44 00 00  H..(H..H.p...D..
	0x00e0 48 39 ce 73 46 48 8d 34 d3 48 8d 76 06 0f b6 36  H9.sFH.4.H.v...6
	0x00f0 48 c1 e6 30 48 09 fe 48 83 c0 07 0f 1f 44 00 00  H..0H..H.....D..
	0x0100 48 39 c8 73 21 48 8d 04 d3 48 8d 40 07 0f b6 00  H9.s!H...H.@....
	0x0110 48 c1 e0 38 48 09 f0 48 89 44 24 40 48 8b 6c 24  H..8H..H.D$@H.l$
	0x0120 10 48 83 c4 18 c3 e8 00 00 00 00 48 89 f0 e8 00  .H.........H....
	0x0130 00 00 00 48 89 f8 e8 00 00 00 00 48 89 f0 66 90  ...H.......H..f.
	0x0140 e8 00 00 00 00 48 89 f8 e8 00 00 00 00 48 89 f0  .....H.......H..
	0x0150 e8 00 00 00 00 48 89 f8 e8 00 00 00 00 0f 1f 00  .....H..........
	0x0160 e8 00 00 00 00 90                                ......
	rel 295+4 t=8 runtime.panicIndex+0
	rel 303+4 t=8 runtime.panicIndex+0
	rel 311+4 t=8 runtime.panicIndex+0
	rel 321+4 t=8 runtime.panicIndex+0
	rel 329+4 t=8 runtime.panicIndex+0
	rel 337+4 t=8 runtime.panicIndex+0
	rel 345+4 t=8 runtime.panicIndex+0
	rel 353+4 t=8 runtime.panicIndex+0
"".load_le_byte8_uint64_idx8_inv STEXT nosplit size=342 args=0x28 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:282)	TEXT	"".load_le_byte8_uint64_idx8_inv(SB), NOSPLIT|ABIInternal, $24-40
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:282)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:282)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:282)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:282)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:282)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:284)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:284)	MOVQ	AX, DX
	0x0016 00022 (/usr/local/go/test/codegen/memcombine.go:284)	SHLQ	$3, AX
	0x001a 00026 (/usr/local/go/test/codegen/memcombine.go:284)	LEAQ	7(AX), BX
	0x001e 00030 (/usr/local/go/test/codegen/memcombine.go:284)	MOVQ	"".s+40(SP), CX
	0x0023 00035 (/usr/local/go/test/codegen/memcombine.go:284)	CMPQ	BX, CX
	0x0026 00038 (/usr/local/go/test/codegen/memcombine.go:284)	JCC	333
	0x002c 00044 (/usr/local/go/test/codegen/memcombine.go:284)	MOVQ	"".s+32(SP), BX
	0x0031 00049 (/usr/local/go/test/codegen/memcombine.go:284)	LEAQ	(BX)(DX*8), SI
	0x0035 00053 (/usr/local/go/test/codegen/memcombine.go:284)	LEAQ	7(SI), SI
	0x0039 00057 (/usr/local/go/test/codegen/memcombine.go:284)	MOVBLZX	(SI), SI
	0x003c 00060 (/usr/local/go/test/codegen/memcombine.go:284)	LEAQ	6(AX), DI
	0x0040 00064 (/usr/local/go/test/codegen/memcombine.go:284)	CMPQ	DI, CX
	0x0043 00067 (/usr/local/go/test/codegen/memcombine.go:284)	JCC	325
	0x0049 00073 (/usr/local/go/test/codegen/memcombine.go:284)	SHLQ	$56, SI
	0x004d 00077 (/usr/local/go/test/codegen/memcombine.go:284)	LEAQ	(BX)(DX*8), DI
	0x0051 00081 (/usr/local/go/test/codegen/memcombine.go:284)	LEAQ	6(DI), DI
	0x0055 00085 (/usr/local/go/test/codegen/memcombine.go:284)	MOVBLZX	(DI), DI
	0x0058 00088 (/usr/local/go/test/codegen/memcombine.go:284)	SHLQ	$48, DI
	0x005c 00092 (/usr/local/go/test/codegen/memcombine.go:284)	ORQ	SI, DI
	0x005f 00095 (/usr/local/go/test/codegen/memcombine.go:284)	LEAQ	5(AX), SI
	0x0063 00099 (/usr/local/go/test/codegen/memcombine.go:284)	CMPQ	SI, CX
	0x0066 00102 (/usr/local/go/test/codegen/memcombine.go:284)	JCC	317
	0x006c 00108 (/usr/local/go/test/codegen/memcombine.go:284)	LEAQ	(BX)(DX*8), SI
	0x0070 00112 (/usr/local/go/test/codegen/memcombine.go:284)	LEAQ	5(SI), SI
	0x0074 00116 (/usr/local/go/test/codegen/memcombine.go:284)	MOVBLZX	(SI), SI
	0x0077 00119 (/usr/local/go/test/codegen/memcombine.go:284)	SHLQ	$40, SI
	0x007b 00123 (/usr/local/go/test/codegen/memcombine.go:284)	ORQ	DI, SI
	0x007e 00126 (/usr/local/go/test/codegen/memcombine.go:284)	LEAQ	4(AX), DI
	0x0082 00130 (/usr/local/go/test/codegen/memcombine.go:284)	CMPQ	DI, CX
	0x0085 00133 (/usr/local/go/test/codegen/memcombine.go:284)	JCC	309
	0x008b 00139 (/usr/local/go/test/codegen/memcombine.go:284)	LEAQ	(BX)(DX*8), DI
	0x008f 00143 (/usr/local/go/test/codegen/memcombine.go:284)	LEAQ	4(DI), DI
	0x0093 00147 (/usr/local/go/test/codegen/memcombine.go:284)	MOVBLZX	(DI), DI
	0x0096 00150 (/usr/local/go/test/codegen/memcombine.go:284)	SHLQ	$32, DI
	0x009a 00154 (/usr/local/go/test/codegen/memcombine.go:284)	ORQ	SI, DI
	0x009d 00157 (/usr/local/go/test/codegen/memcombine.go:284)	LEAQ	3(AX), SI
	0x00a1 00161 (/usr/local/go/test/codegen/memcombine.go:284)	CMPQ	SI, CX
	0x00a4 00164 (/usr/local/go/test/codegen/memcombine.go:284)	JCC	301
	0x00aa 00170 (/usr/local/go/test/codegen/memcombine.go:284)	LEAQ	(BX)(DX*8), SI
	0x00ae 00174 (/usr/local/go/test/codegen/memcombine.go:284)	LEAQ	3(SI), SI
	0x00b2 00178 (/usr/local/go/test/codegen/memcombine.go:284)	MOVBLZX	(SI), SI
	0x00b5 00181 (/usr/local/go/test/codegen/memcombine.go:284)	SHLQ	$24, SI
	0x00b9 00185 (/usr/local/go/test/codegen/memcombine.go:284)	ORQ	DI, SI
	0x00bc 00188 (/usr/local/go/test/codegen/memcombine.go:284)	LEAQ	2(AX), DI
	0x00c0 00192 (/usr/local/go/test/codegen/memcombine.go:284)	CMPQ	DI, CX
	0x00c3 00195 (/usr/local/go/test/codegen/memcombine.go:284)	JCC	293
	0x00c5 00197 (/usr/local/go/test/codegen/memcombine.go:284)	LEAQ	(BX)(DX*8), DI
	0x00c9 00201 (/usr/local/go/test/codegen/memcombine.go:284)	LEAQ	2(DI), DI
	0x00cd 00205 (/usr/local/go/test/codegen/memcombine.go:284)	MOVBLZX	(DI), DI
	0x00d0 00208 (/usr/local/go/test/codegen/memcombine.go:284)	SHLQ	$16, DI
	0x00d4 00212 (/usr/local/go/test/codegen/memcombine.go:284)	ORQ	SI, DI
	0x00d7 00215 (/usr/local/go/test/codegen/memcombine.go:284)	LEAQ	1(AX), SI
	0x00db 00219 (/usr/local/go/test/codegen/memcombine.go:284)	NOP
	0x00e0 00224 (/usr/local/go/test/codegen/memcombine.go:284)	CMPQ	SI, CX
	0x00e3 00227 (/usr/local/go/test/codegen/memcombine.go:284)	JCC	282
	0x00e5 00229 (/usr/local/go/test/codegen/memcombine.go:284)	LEAQ	(BX)(DX*8), SI
	0x00e9 00233 (/usr/local/go/test/codegen/memcombine.go:284)	LEAQ	1(SI), SI
	0x00ed 00237 (/usr/local/go/test/codegen/memcombine.go:284)	MOVBLZX	(SI), SI
	0x00f0 00240 (/usr/local/go/test/codegen/memcombine.go:284)	SHLQ	$8, SI
	0x00f4 00244 (/usr/local/go/test/codegen/memcombine.go:284)	ORQ	DI, SI
	0x00f7 00247 (/usr/local/go/test/codegen/memcombine.go:284)	CMPQ	AX, CX
	0x00fa 00250 (/usr/local/go/test/codegen/memcombine.go:284)	JCC	277
	0x00fc 00252 (/usr/local/go/test/codegen/memcombine.go:284)	LEAQ	(BX)(DX*8), AX
	0x0100 00256 (/usr/local/go/test/codegen/memcombine.go:284)	MOVBLZX	(AX), AX
	0x0103 00259 (/usr/local/go/test/codegen/memcombine.go:284)	ORQ	AX, SI
	0x0106 00262 (/usr/local/go/test/codegen/memcombine.go:284)	MOVQ	SI, "".~r2+64(SP)
	0x010b 00267 (/usr/local/go/test/codegen/memcombine.go:284)	MOVQ	16(SP), BP
	0x0110 00272 (/usr/local/go/test/codegen/memcombine.go:284)	ADDQ	$24, SP
	0x0114 00276 (/usr/local/go/test/codegen/memcombine.go:284)	RET
	0x0115 00277 (/usr/local/go/test/codegen/memcombine.go:284)	PCDATA	$1, $1
	0x0115 00277 (/usr/local/go/test/codegen/memcombine.go:284)	CALL	runtime.panicIndex(SB)
	0x011a 00282 (/usr/local/go/test/codegen/memcombine.go:284)	MOVQ	SI, AX
	0x011d 00285 (/usr/local/go/test/codegen/memcombine.go:284)	NOP
	0x0120 00288 (/usr/local/go/test/codegen/memcombine.go:284)	CALL	runtime.panicIndex(SB)
	0x0125 00293 (/usr/local/go/test/codegen/memcombine.go:284)	MOVQ	DI, AX
	0x0128 00296 (/usr/local/go/test/codegen/memcombine.go:284)	CALL	runtime.panicIndex(SB)
	0x012d 00301 (/usr/local/go/test/codegen/memcombine.go:284)	MOVQ	SI, AX
	0x0130 00304 (/usr/local/go/test/codegen/memcombine.go:284)	CALL	runtime.panicIndex(SB)
	0x0135 00309 (/usr/local/go/test/codegen/memcombine.go:284)	MOVQ	DI, AX
	0x0138 00312 (/usr/local/go/test/codegen/memcombine.go:284)	CALL	runtime.panicIndex(SB)
	0x013d 00317 (/usr/local/go/test/codegen/memcombine.go:284)	MOVQ	SI, AX
	0x0140 00320 (/usr/local/go/test/codegen/memcombine.go:284)	CALL	runtime.panicIndex(SB)
	0x0145 00325 (/usr/local/go/test/codegen/memcombine.go:284)	MOVQ	DI, AX
	0x0148 00328 (/usr/local/go/test/codegen/memcombine.go:284)	CALL	runtime.panicIndex(SB)
	0x014d 00333 (/usr/local/go/test/codegen/memcombine.go:284)	MOVQ	BX, AX
	0x0150 00336 (/usr/local/go/test/codegen/memcombine.go:284)	CALL	runtime.panicIndex(SB)
	0x0155 00341 (/usr/local/go/test/codegen/memcombine.go:284)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 89 c2 48 c1 e0 03 48 8d 58 07 48 8b  D$8H..H...H.X.H.
	0x0020 4c 24 28 48 39 cb 0f 83 21 01 00 00 48 8b 5c 24  L$(H9...!...H.\$
	0x0030 20 48 8d 34 d3 48 8d 76 07 0f b6 36 48 8d 78 06   H.4.H.v...6H.x.
	0x0040 48 39 cf 0f 83 fc 00 00 00 48 c1 e6 38 48 8d 3c  H9.......H..8H.<
	0x0050 d3 48 8d 7f 06 0f b6 3f 48 c1 e7 30 48 09 f7 48  .H.....?H..0H..H
	0x0060 8d 70 05 48 39 ce 0f 83 d1 00 00 00 48 8d 34 d3  .p.H9.......H.4.
	0x0070 48 8d 76 05 0f b6 36 48 c1 e6 28 48 09 fe 48 8d  H.v...6H..(H..H.
	0x0080 78 04 48 39 cf 0f 83 aa 00 00 00 48 8d 3c d3 48  x.H9.......H.<.H
	0x0090 8d 7f 04 0f b6 3f 48 c1 e7 20 48 09 f7 48 8d 70  .....?H.. H..H.p
	0x00a0 03 48 39 ce 0f 83 83 00 00 00 48 8d 34 d3 48 8d  .H9.......H.4.H.
	0x00b0 76 03 0f b6 36 48 c1 e6 18 48 09 fe 48 8d 78 02  v...6H...H..H.x.
	0x00c0 48 39 cf 73 60 48 8d 3c d3 48 8d 7f 02 0f b6 3f  H9.s`H.<.H.....?
	0x00d0 48 c1 e7 10 48 09 f7 48 8d 70 01 0f 1f 44 00 00  H...H..H.p...D..
	0x00e0 48 39 ce 73 35 48 8d 34 d3 48 8d 76 01 0f b6 36  H9.s5H.4.H.v...6
	0x00f0 48 c1 e6 08 48 09 fe 48 39 c8 73 19 48 8d 04 d3  H...H..H9.s.H...
	0x0100 0f b6 00 48 09 c6 48 89 74 24 40 48 8b 6c 24 10  ...H..H.t$@H.l$.
	0x0110 48 83 c4 18 c3 e8 00 00 00 00 48 89 f0 0f 1f 00  H.........H.....
	0x0120 e8 00 00 00 00 48 89 f8 e8 00 00 00 00 48 89 f0  .....H.......H..
	0x0130 e8 00 00 00 00 48 89 f8 e8 00 00 00 00 48 89 f0  .....H.......H..
	0x0140 e8 00 00 00 00 48 89 f8 e8 00 00 00 00 48 89 d8  .....H.......H..
	0x0150 e8 00 00 00 00 90                                ......
	rel 278+4 t=8 runtime.panicIndex+0
	rel 289+4 t=8 runtime.panicIndex+0
	rel 297+4 t=8 runtime.panicIndex+0
	rel 305+4 t=8 runtime.panicIndex+0
	rel 313+4 t=8 runtime.panicIndex+0
	rel 321+4 t=8 runtime.panicIndex+0
	rel 329+4 t=8 runtime.panicIndex+0
	rel 337+4 t=8 runtime.panicIndex+0
"".load_be_byte2_uint16_idx2 STEXT nosplit size=107 args=0x28 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:287)	TEXT	"".load_be_byte2_uint16_idx2(SB), NOSPLIT|ABIInternal, $24-40
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:287)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:287)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:287)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:287)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:287)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:289)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:289)	MOVQ	AX, DX
	0x0016 00022 (/usr/local/go/test/codegen/memcombine.go:289)	SHLQ	$1, AX
	0x0019 00025 (/usr/local/go/test/codegen/memcombine.go:289)	MOVQ	"".s+40(SP), CX
	0x001e 00030 (/usr/local/go/test/codegen/memcombine.go:289)	NOP
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:289)	CMPQ	AX, CX
	0x0023 00035 (/usr/local/go/test/codegen/memcombine.go:289)	JCC	101
	0x0025 00037 (/usr/local/go/test/codegen/memcombine.go:289)	MOVQ	"".s+32(SP), BX
	0x002a 00042 (/usr/local/go/test/codegen/memcombine.go:289)	LEAQ	(BX)(DX*2), SI
	0x002e 00046 (/usr/local/go/test/codegen/memcombine.go:289)	MOVBLZX	(SI), SI
	0x0031 00049 (/usr/local/go/test/codegen/memcombine.go:289)	LEAQ	(DX)(DX*1), AX
	0x0035 00053 (/usr/local/go/test/codegen/memcombine.go:289)	LEAQ	1(AX), AX
	0x0039 00057 (/usr/local/go/test/codegen/memcombine.go:289)	CMPQ	AX, CX
	0x003c 00060 (/usr/local/go/test/codegen/memcombine.go:289)	JCC	93
	0x003e 00062 (/usr/local/go/test/codegen/memcombine.go:289)	LEAQ	(BX)(DX*2), AX
	0x0042 00066 (/usr/local/go/test/codegen/memcombine.go:289)	LEAQ	1(AX), AX
	0x0046 00070 (/usr/local/go/test/codegen/memcombine.go:289)	MOVBLZX	(AX), AX
	0x0049 00073 (/usr/local/go/test/codegen/memcombine.go:289)	SHLL	$8, SI
	0x004c 00076 (/usr/local/go/test/codegen/memcombine.go:289)	ORL	AX, SI
	0x004e 00078 (/usr/local/go/test/codegen/memcombine.go:289)	MOVW	SI, "".~r2+64(SP)
	0x0053 00083 (/usr/local/go/test/codegen/memcombine.go:289)	MOVQ	16(SP), BP
	0x0058 00088 (/usr/local/go/test/codegen/memcombine.go:289)	ADDQ	$24, SP
	0x005c 00092 (/usr/local/go/test/codegen/memcombine.go:289)	RET
	0x005d 00093 (/usr/local/go/test/codegen/memcombine.go:289)	PCDATA	$1, $1
	0x005d 00093 (/usr/local/go/test/codegen/memcombine.go:289)	NOP
	0x0060 00096 (/usr/local/go/test/codegen/memcombine.go:289)	CALL	runtime.panicIndex(SB)
	0x0065 00101 (/usr/local/go/test/codegen/memcombine.go:289)	CALL	runtime.panicIndex(SB)
	0x006a 00106 (/usr/local/go/test/codegen/memcombine.go:289)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 89 c2 48 d1 e0 48 8b 4c 24 28 66 90  D$8H..H..H.L$(f.
	0x0020 48 39 c8 73 40 48 8b 5c 24 20 48 8d 34 53 0f b6  H9.s@H.\$ H.4S..
	0x0030 36 48 8d 04 12 48 8d 40 01 48 39 c8 73 1f 48 8d  6H...H.@.H9.s.H.
	0x0040 04 53 48 8d 40 01 0f b6 00 c1 e6 08 09 c6 66 89  .SH.@.........f.
	0x0050 74 24 40 48 8b 6c 24 10 48 83 c4 18 c3 0f 1f 00  t$@H.l$.H.......
	0x0060 e8 00 00 00 00 e8 00 00 00 00 90                 ...........
	rel 97+4 t=8 runtime.panicIndex+0
	rel 102+4 t=8 runtime.panicIndex+0
"".load_be_byte2_uint16_idx2_inv STEXT nosplit size=111 args=0x28 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:292)	TEXT	"".load_be_byte2_uint16_idx2_inv(SB), NOSPLIT|ABIInternal, $24-40
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:292)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:292)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:292)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:292)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:292)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:294)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:294)	LEAQ	(AX)(AX*1), DX
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:294)	LEAQ	1(DX), DX
	0x001b 00027 (/usr/local/go/test/codegen/memcombine.go:294)	MOVQ	"".s+40(SP), CX
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:294)	CMPQ	DX, CX
	0x0023 00035 (/usr/local/go/test/codegen/memcombine.go:294)	JCC	102
	0x0025 00037 (/usr/local/go/test/codegen/memcombine.go:294)	MOVQ	"".s+32(SP), DX
	0x002a 00042 (/usr/local/go/test/codegen/memcombine.go:294)	LEAQ	(DX)(AX*2), BX
	0x002e 00046 (/usr/local/go/test/codegen/memcombine.go:294)	LEAQ	1(BX), BX
	0x0032 00050 (/usr/local/go/test/codegen/memcombine.go:294)	MOVBLZX	(BX), BX
	0x0035 00053 (/usr/local/go/test/codegen/memcombine.go:294)	MOVQ	AX, SI
	0x0038 00056 (/usr/local/go/test/codegen/memcombine.go:294)	SHLQ	$1, AX
	0x003b 00059 (/usr/local/go/test/codegen/memcombine.go:294)	NOP
	0x0040 00064 (/usr/local/go/test/codegen/memcombine.go:294)	CMPQ	AX, CX
	0x0043 00067 (/usr/local/go/test/codegen/memcombine.go:294)	JCC	97
	0x0045 00069 (/usr/local/go/test/codegen/memcombine.go:294)	LEAQ	(DX)(SI*2), AX
	0x0049 00073 (/usr/local/go/test/codegen/memcombine.go:294)	MOVBLZX	(AX), AX
	0x004c 00076 (/usr/local/go/test/codegen/memcombine.go:294)	SHLL	$8, AX
	0x004f 00079 (/usr/local/go/test/codegen/memcombine.go:294)	ORL	AX, BX
	0x0051 00081 (/usr/local/go/test/codegen/memcombine.go:294)	MOVW	BX, "".~r2+64(SP)
	0x0056 00086 (/usr/local/go/test/codegen/memcombine.go:294)	MOVQ	16(SP), BP
	0x005b 00091 (/usr/local/go/test/codegen/memcombine.go:294)	ADDQ	$24, SP
	0x005f 00095 (/usr/local/go/test/codegen/memcombine.go:294)	NOP
	0x0060 00096 (/usr/local/go/test/codegen/memcombine.go:294)	RET
	0x0061 00097 (/usr/local/go/test/codegen/memcombine.go:294)	PCDATA	$1, $1
	0x0061 00097 (/usr/local/go/test/codegen/memcombine.go:294)	CALL	runtime.panicIndex(SB)
	0x0066 00102 (/usr/local/go/test/codegen/memcombine.go:294)	MOVQ	DX, AX
	0x0069 00105 (/usr/local/go/test/codegen/memcombine.go:294)	CALL	runtime.panicIndex(SB)
	0x006e 00110 (/usr/local/go/test/codegen/memcombine.go:294)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 8d 14 00 48 8d 52 01 48 8b 4c 24 28  D$8H...H.R.H.L$(
	0x0020 48 39 ca 73 41 48 8b 54 24 20 48 8d 1c 42 48 8d  H9.sAH.T$ H..BH.
	0x0030 5b 01 0f b6 1b 48 89 c6 48 d1 e0 0f 1f 44 00 00  [....H..H....D..
	0x0040 48 39 c8 73 1c 48 8d 04 72 0f b6 00 c1 e0 08 09  H9.s.H..r.......
	0x0050 c3 66 89 5c 24 40 48 8b 6c 24 10 48 83 c4 18 90  .f.\$@H.l$.H....
	0x0060 c3 e8 00 00 00 00 48 89 d0 e8 00 00 00 00 90     ......H........
	rel 98+4 t=8 runtime.panicIndex+0
	rel 106+4 t=8 runtime.panicIndex+0
"".load_be_byte4_uint32_idx4 STEXT nosplit size=166 args=0x28 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:297)	TEXT	"".load_be_byte4_uint32_idx4(SB), NOSPLIT|ABIInternal, $24-40
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:297)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:297)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:297)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:297)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:297)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:299)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:299)	MOVQ	AX, DX
	0x0016 00022 (/usr/local/go/test/codegen/memcombine.go:299)	SHLQ	$2, AX
	0x001a 00026 (/usr/local/go/test/codegen/memcombine.go:299)	MOVQ	"".s+40(SP), CX
	0x001f 00031 (/usr/local/go/test/codegen/memcombine.go:299)	NOP
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:299)	CMPQ	AX, CX
	0x0023 00035 (/usr/local/go/test/codegen/memcombine.go:299)	JCC	160
	0x0025 00037 (/usr/local/go/test/codegen/memcombine.go:299)	MOVQ	"".s+32(SP), BX
	0x002a 00042 (/usr/local/go/test/codegen/memcombine.go:299)	LEAQ	(BX)(DX*4), SI
	0x002e 00046 (/usr/local/go/test/codegen/memcombine.go:299)	MOVBLZX	(SI), SI
	0x0031 00049 (/usr/local/go/test/codegen/memcombine.go:299)	LEAQ	1(AX), DI
	0x0035 00053 (/usr/local/go/test/codegen/memcombine.go:299)	CMPQ	DI, CX
	0x0038 00056 (/usr/local/go/test/codegen/memcombine.go:299)	JCC	151
	0x003a 00058 (/usr/local/go/test/codegen/memcombine.go:299)	SHLL	$24, SI
	0x003d 00061 (/usr/local/go/test/codegen/memcombine.go:299)	LEAQ	(BX)(DX*4), DI
	0x0041 00065 (/usr/local/go/test/codegen/memcombine.go:299)	LEAQ	1(DI), DI
	0x0045 00069 (/usr/local/go/test/codegen/memcombine.go:299)	MOVBLZX	(DI), DI
	0x0048 00072 (/usr/local/go/test/codegen/memcombine.go:299)	SHLL	$16, DI
	0x004b 00075 (/usr/local/go/test/codegen/memcombine.go:299)	ORL	DI, SI
	0x004d 00077 (/usr/local/go/test/codegen/memcombine.go:299)	LEAQ	2(AX), DI
	0x0051 00081 (/usr/local/go/test/codegen/memcombine.go:299)	CMPQ	DI, CX
	0x0054 00084 (/usr/local/go/test/codegen/memcombine.go:299)	JCC	143
	0x0056 00086 (/usr/local/go/test/codegen/memcombine.go:299)	LEAQ	(BX)(DX*4), DI
	0x005a 00090 (/usr/local/go/test/codegen/memcombine.go:299)	LEAQ	2(DI), DI
	0x005e 00094 (/usr/local/go/test/codegen/memcombine.go:299)	MOVBLZX	(DI), DI
	0x0061 00097 (/usr/local/go/test/codegen/memcombine.go:299)	SHLL	$8, DI
	0x0064 00100 (/usr/local/go/test/codegen/memcombine.go:299)	ORL	SI, DI
	0x0066 00102 (/usr/local/go/test/codegen/memcombine.go:299)	ADDQ	$3, AX
	0x006a 00106 (/usr/local/go/test/codegen/memcombine.go:299)	CMPQ	AX, CX
	0x006d 00109 (/usr/local/go/test/codegen/memcombine.go:299)	JCC	138
	0x006f 00111 (/usr/local/go/test/codegen/memcombine.go:299)	LEAQ	(BX)(DX*4), AX
	0x0073 00115 (/usr/local/go/test/codegen/memcombine.go:299)	LEAQ	3(AX), AX
	0x0077 00119 (/usr/local/go/test/codegen/memcombine.go:299)	MOVBLZX	(AX), AX
	0x007a 00122 (/usr/local/go/test/codegen/memcombine.go:299)	ORL	AX, DI
	0x007c 00124 (/usr/local/go/test/codegen/memcombine.go:299)	MOVL	DI, "".~r2+64(SP)
	0x0080 00128 (/usr/local/go/test/codegen/memcombine.go:299)	MOVQ	16(SP), BP
	0x0085 00133 (/usr/local/go/test/codegen/memcombine.go:299)	ADDQ	$24, SP
	0x0089 00137 (/usr/local/go/test/codegen/memcombine.go:299)	RET
	0x008a 00138 (/usr/local/go/test/codegen/memcombine.go:299)	PCDATA	$1, $1
	0x008a 00138 (/usr/local/go/test/codegen/memcombine.go:299)	CALL	runtime.panicIndex(SB)
	0x008f 00143 (/usr/local/go/test/codegen/memcombine.go:299)	MOVQ	DI, AX
	0x0092 00146 (/usr/local/go/test/codegen/memcombine.go:299)	CALL	runtime.panicIndex(SB)
	0x0097 00151 (/usr/local/go/test/codegen/memcombine.go:299)	MOVQ	DI, AX
	0x009a 00154 (/usr/local/go/test/codegen/memcombine.go:299)	CALL	runtime.panicIndex(SB)
	0x009f 00159 (/usr/local/go/test/codegen/memcombine.go:299)	NOP
	0x00a0 00160 (/usr/local/go/test/codegen/memcombine.go:299)	CALL	runtime.panicIndex(SB)
	0x00a5 00165 (/usr/local/go/test/codegen/memcombine.go:299)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 89 c2 48 c1 e0 02 48 8b 4c 24 28 90  D$8H..H...H.L$(.
	0x0020 48 39 c8 73 7b 48 8b 5c 24 20 48 8d 34 93 0f b6  H9.s{H.\$ H.4...
	0x0030 36 48 8d 78 01 48 39 cf 73 5d c1 e6 18 48 8d 3c  6H.x.H9.s]...H.<
	0x0040 93 48 8d 7f 01 0f b6 3f c1 e7 10 09 fe 48 8d 78  .H.....?.....H.x
	0x0050 02 48 39 cf 73 39 48 8d 3c 93 48 8d 7f 02 0f b6  .H9.s9H.<.H.....
	0x0060 3f c1 e7 08 09 f7 48 83 c0 03 48 39 c8 73 1b 48  ?.....H...H9.s.H
	0x0070 8d 04 93 48 8d 40 03 0f b6 00 09 c7 89 7c 24 40  ...H.@.......|$@
	0x0080 48 8b 6c 24 10 48 83 c4 18 c3 e8 00 00 00 00 48  H.l$.H.........H
	0x0090 89 f8 e8 00 00 00 00 48 89 f8 e8 00 00 00 00 90  .......H........
	0x00a0 e8 00 00 00 00 90                                ......
	rel 139+4 t=8 runtime.panicIndex+0
	rel 147+4 t=8 runtime.panicIndex+0
	rel 155+4 t=8 runtime.panicIndex+0
	rel 161+4 t=8 runtime.panicIndex+0
"".load_be_byte8_uint64_idx8 STEXT nosplit size=349 args=0x28 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:302)	TEXT	"".load_be_byte8_uint64_idx8(SB), NOSPLIT|ABIInternal, $24-40
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:302)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:302)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:302)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:302)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:302)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:304)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:304)	MOVQ	AX, DX
	0x0016 00022 (/usr/local/go/test/codegen/memcombine.go:304)	SHLQ	$3, AX
	0x001a 00026 (/usr/local/go/test/codegen/memcombine.go:304)	MOVQ	"".s+40(SP), CX
	0x001f 00031 (/usr/local/go/test/codegen/memcombine.go:304)	NOP
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:304)	CMPQ	AX, CX
	0x0023 00035 (/usr/local/go/test/codegen/memcombine.go:304)	JCC	343
	0x0029 00041 (/usr/local/go/test/codegen/memcombine.go:304)	MOVQ	"".s+32(SP), BX
	0x002e 00046 (/usr/local/go/test/codegen/memcombine.go:304)	LEAQ	(BX)(DX*8), SI
	0x0032 00050 (/usr/local/go/test/codegen/memcombine.go:304)	MOVBLZX	(SI), SI
	0x0035 00053 (/usr/local/go/test/codegen/memcombine.go:304)	LEAQ	1(AX), DI
	0x0039 00057 (/usr/local/go/test/codegen/memcombine.go:304)	NOP
	0x0040 00064 (/usr/local/go/test/codegen/memcombine.go:304)	CMPQ	DI, CX
	0x0043 00067 (/usr/local/go/test/codegen/memcombine.go:304)	JCC	335
	0x0049 00073 (/usr/local/go/test/codegen/memcombine.go:304)	SHLQ	$56, SI
	0x004d 00077 (/usr/local/go/test/codegen/memcombine.go:304)	LEAQ	(BX)(DX*8), DI
	0x0051 00081 (/usr/local/go/test/codegen/memcombine.go:304)	LEAQ	1(DI), DI
	0x0055 00085 (/usr/local/go/test/codegen/memcombine.go:304)	MOVBLZX	(DI), DI
	0x0058 00088 (/usr/local/go/test/codegen/memcombine.go:304)	SHLQ	$48, DI
	0x005c 00092 (/usr/local/go/test/codegen/memcombine.go:304)	ORQ	SI, DI
	0x005f 00095 (/usr/local/go/test/codegen/memcombine.go:304)	LEAQ	2(AX), SI
	0x0063 00099 (/usr/local/go/test/codegen/memcombine.go:304)	CMPQ	SI, CX
	0x0066 00102 (/usr/local/go/test/codegen/memcombine.go:304)	JCC	327
	0x006c 00108 (/usr/local/go/test/codegen/memcombine.go:304)	LEAQ	(BX)(DX*8), SI
	0x0070 00112 (/usr/local/go/test/codegen/memcombine.go:304)	LEAQ	2(SI), SI
	0x0074 00116 (/usr/local/go/test/codegen/memcombine.go:304)	MOVBLZX	(SI), SI
	0x0077 00119 (/usr/local/go/test/codegen/memcombine.go:304)	SHLQ	$40, SI
	0x007b 00123 (/usr/local/go/test/codegen/memcombine.go:304)	ORQ	DI, SI
	0x007e 00126 (/usr/local/go/test/codegen/memcombine.go:304)	LEAQ	3(AX), DI
	0x0082 00130 (/usr/local/go/test/codegen/memcombine.go:304)	CMPQ	DI, CX
	0x0085 00133 (/usr/local/go/test/codegen/memcombine.go:304)	JCC	319
	0x008b 00139 (/usr/local/go/test/codegen/memcombine.go:304)	LEAQ	(BX)(DX*8), DI
	0x008f 00143 (/usr/local/go/test/codegen/memcombine.go:304)	LEAQ	3(DI), DI
	0x0093 00147 (/usr/local/go/test/codegen/memcombine.go:304)	MOVBLZX	(DI), DI
	0x0096 00150 (/usr/local/go/test/codegen/memcombine.go:304)	SHLQ	$32, DI
	0x009a 00154 (/usr/local/go/test/codegen/memcombine.go:304)	ORQ	SI, DI
	0x009d 00157 (/usr/local/go/test/codegen/memcombine.go:304)	LEAQ	4(AX), SI
	0x00a1 00161 (/usr/local/go/test/codegen/memcombine.go:304)	CMPQ	SI, CX
	0x00a4 00164 (/usr/local/go/test/codegen/memcombine.go:304)	JCC	311
	0x00aa 00170 (/usr/local/go/test/codegen/memcombine.go:304)	LEAQ	(BX)(DX*8), SI
	0x00ae 00174 (/usr/local/go/test/codegen/memcombine.go:304)	LEAQ	4(SI), SI
	0x00b2 00178 (/usr/local/go/test/codegen/memcombine.go:304)	MOVBLZX	(SI), SI
	0x00b5 00181 (/usr/local/go/test/codegen/memcombine.go:304)	SHLQ	$24, SI
	0x00b9 00185 (/usr/local/go/test/codegen/memcombine.go:304)	ORQ	DI, SI
	0x00bc 00188 (/usr/local/go/test/codegen/memcombine.go:304)	LEAQ	5(AX), DI
	0x00c0 00192 (/usr/local/go/test/codegen/memcombine.go:304)	CMPQ	DI, CX
	0x00c3 00195 (/usr/local/go/test/codegen/memcombine.go:304)	JCC	303
	0x00c5 00197 (/usr/local/go/test/codegen/memcombine.go:304)	LEAQ	(BX)(DX*8), DI
	0x00c9 00201 (/usr/local/go/test/codegen/memcombine.go:304)	LEAQ	5(DI), DI
	0x00cd 00205 (/usr/local/go/test/codegen/memcombine.go:304)	MOVBLZX	(DI), DI
	0x00d0 00208 (/usr/local/go/test/codegen/memcombine.go:304)	SHLQ	$16, DI
	0x00d4 00212 (/usr/local/go/test/codegen/memcombine.go:304)	ORQ	SI, DI
	0x00d7 00215 (/usr/local/go/test/codegen/memcombine.go:304)	LEAQ	6(AX), SI
	0x00db 00219 (/usr/local/go/test/codegen/memcombine.go:304)	NOP
	0x00e0 00224 (/usr/local/go/test/codegen/memcombine.go:304)	CMPQ	SI, CX
	0x00e3 00227 (/usr/local/go/test/codegen/memcombine.go:304)	JCC	295
	0x00e5 00229 (/usr/local/go/test/codegen/memcombine.go:304)	LEAQ	(BX)(DX*8), SI
	0x00e9 00233 (/usr/local/go/test/codegen/memcombine.go:304)	LEAQ	6(SI), SI
	0x00ed 00237 (/usr/local/go/test/codegen/memcombine.go:304)	MOVBLZX	(SI), SI
	0x00f0 00240 (/usr/local/go/test/codegen/memcombine.go:304)	SHLQ	$8, SI
	0x00f4 00244 (/usr/local/go/test/codegen/memcombine.go:304)	ORQ	DI, SI
	0x00f7 00247 (/usr/local/go/test/codegen/memcombine.go:304)	ADDQ	$7, AX
	0x00fb 00251 (/usr/local/go/test/codegen/memcombine.go:304)	NOP
	0x0100 00256 (/usr/local/go/test/codegen/memcombine.go:304)	CMPQ	AX, CX
	0x0103 00259 (/usr/local/go/test/codegen/memcombine.go:304)	JCC	290
	0x0105 00261 (/usr/local/go/test/codegen/memcombine.go:304)	LEAQ	(BX)(DX*8), AX
	0x0109 00265 (/usr/local/go/test/codegen/memcombine.go:304)	LEAQ	7(AX), AX
	0x010d 00269 (/usr/local/go/test/codegen/memcombine.go:304)	MOVBLZX	(AX), AX
	0x0110 00272 (/usr/local/go/test/codegen/memcombine.go:304)	ORQ	AX, SI
	0x0113 00275 (/usr/local/go/test/codegen/memcombine.go:304)	MOVQ	SI, "".~r2+64(SP)
	0x0118 00280 (/usr/local/go/test/codegen/memcombine.go:304)	MOVQ	16(SP), BP
	0x011d 00285 (/usr/local/go/test/codegen/memcombine.go:304)	ADDQ	$24, SP
	0x0121 00289 (/usr/local/go/test/codegen/memcombine.go:304)	RET
	0x0122 00290 (/usr/local/go/test/codegen/memcombine.go:304)	PCDATA	$1, $1
	0x0122 00290 (/usr/local/go/test/codegen/memcombine.go:304)	CALL	runtime.panicIndex(SB)
	0x0127 00295 (/usr/local/go/test/codegen/memcombine.go:304)	MOVQ	SI, AX
	0x012a 00298 (/usr/local/go/test/codegen/memcombine.go:304)	CALL	runtime.panicIndex(SB)
	0x012f 00303 (/usr/local/go/test/codegen/memcombine.go:304)	MOVQ	DI, AX
	0x0132 00306 (/usr/local/go/test/codegen/memcombine.go:304)	CALL	runtime.panicIndex(SB)
	0x0137 00311 (/usr/local/go/test/codegen/memcombine.go:304)	MOVQ	SI, AX
	0x013a 00314 (/usr/local/go/test/codegen/memcombine.go:304)	CALL	runtime.panicIndex(SB)
	0x013f 00319 (/usr/local/go/test/codegen/memcombine.go:304)	MOVQ	DI, AX
	0x0142 00322 (/usr/local/go/test/codegen/memcombine.go:304)	CALL	runtime.panicIndex(SB)
	0x0147 00327 (/usr/local/go/test/codegen/memcombine.go:304)	MOVQ	SI, AX
	0x014a 00330 (/usr/local/go/test/codegen/memcombine.go:304)	CALL	runtime.panicIndex(SB)
	0x014f 00335 (/usr/local/go/test/codegen/memcombine.go:304)	MOVQ	DI, AX
	0x0152 00338 (/usr/local/go/test/codegen/memcombine.go:304)	CALL	runtime.panicIndex(SB)
	0x0157 00343 (/usr/local/go/test/codegen/memcombine.go:304)	CALL	runtime.panicIndex(SB)
	0x015c 00348 (/usr/local/go/test/codegen/memcombine.go:304)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 89 c2 48 c1 e0 03 48 8b 4c 24 28 90  D$8H..H...H.L$(.
	0x0020 48 39 c8 0f 83 2e 01 00 00 48 8b 5c 24 20 48 8d  H9.......H.\$ H.
	0x0030 34 d3 0f b6 36 48 8d 78 01 0f 1f 80 00 00 00 00  4...6H.x........
	0x0040 48 39 cf 0f 83 06 01 00 00 48 c1 e6 38 48 8d 3c  H9.......H..8H.<
	0x0050 d3 48 8d 7f 01 0f b6 3f 48 c1 e7 30 48 09 f7 48  .H.....?H..0H..H
	0x0060 8d 70 02 48 39 ce 0f 83 db 00 00 00 48 8d 34 d3  .p.H9.......H.4.
	0x0070 48 8d 76 02 0f b6 36 48 c1 e6 28 48 09 fe 48 8d  H.v...6H..(H..H.
	0x0080 78 03 48 39 cf 0f 83 b4 00 00 00 48 8d 3c d3 48  x.H9.......H.<.H
	0x0090 8d 7f 03 0f b6 3f 48 c1 e7 20 48 09 f7 48 8d 70  .....?H.. H..H.p
	0x00a0 04 48 39 ce 0f 83 8d 00 00 00 48 8d 34 d3 48 8d  .H9.......H.4.H.
	0x00b0 76 04 0f b6 36 48 c1 e6 18 48 09 fe 48 8d 78 05  v...6H...H..H.x.
	0x00c0 48 39 cf 73 6a 48 8d 3c d3 48 8d 7f 05 0f b6 3f  H9.sjH.<.H.....?
	0x00d0 48 c1 e7 10 48 09 f7 48 8d 70 06 0f 1f 44 00 00  H...H..H.p...D..
	0x00e0 48 39 ce 73 42 48 8d 34 d3 48 8d 76 06 0f b6 36  H9.sBH.4.H.v...6
	0x00f0 48 c1 e6 08 48 09 fe 48 83 c0 07 0f 1f 44 00 00  H...H..H.....D..
	0x0100 48 39 c8 73 1d 48 8d 04 d3 48 8d 40 07 0f b6 00  H9.s.H...H.@....
	0x0110 48 09 c6 48 89 74 24 40 48 8b 6c 24 10 48 83 c4  H..H.t$@H.l$.H..
	0x0120 18 c3 e8 00 00 00 00 48 89 f0 e8 00 00 00 00 48  .......H.......H
	0x0130 89 f8 e8 00 00 00 00 48 89 f0 e8 00 00 00 00 48  .......H.......H
	0x0140 89 f8 e8 00 00 00 00 48 89 f0 e8 00 00 00 00 48  .......H.......H
	0x0150 89 f8 e8 00 00 00 00 e8 00 00 00 00 90           .............
	rel 291+4 t=8 runtime.panicIndex+0
	rel 299+4 t=8 runtime.panicIndex+0
	rel 307+4 t=8 runtime.panicIndex+0
	rel 315+4 t=8 runtime.panicIndex+0
	rel 323+4 t=8 runtime.panicIndex+0
	rel 331+4 t=8 runtime.panicIndex+0
	rel 339+4 t=8 runtime.panicIndex+0
	rel 344+4 t=8 runtime.panicIndex+0
"".fcall_byte STEXT size=104 args=0x10 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:309)	TEXT	"".fcall_byte(SB), ABIInternal, $24-16
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:309)	MOVQ	(TLS), CX
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:309)	CMPQ	SP, 16(CX)
	0x000d 00013 (/usr/local/go/test/codegen/memcombine.go:309)	PCDATA	$0, $-2
	0x000d 00013 (/usr/local/go/test/codegen/memcombine.go:309)	JLS	97
	0x000f 00015 (/usr/local/go/test/codegen/memcombine.go:309)	PCDATA	$0, $-1
	0x000f 00015 (/usr/local/go/test/codegen/memcombine.go:309)	SUBQ	$24, SP
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:309)	MOVQ	BP, 16(SP)
	0x0018 00024 (/usr/local/go/test/codegen/memcombine.go:309)	LEAQ	16(SP), BP
	0x001d 00029 (/usr/local/go/test/codegen/memcombine.go:309)	FUNCDATA	$0, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x001d 00029 (/usr/local/go/test/codegen/memcombine.go:309)	FUNCDATA	$1, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x001d 00029 (/usr/local/go/test/codegen/memcombine.go:310)	MOVBLZX	"".a+32(SP), AX
	0x0022 00034 (/usr/local/go/test/codegen/memcombine.go:310)	MOVB	AL, (SP)
	0x0025 00037 (/usr/local/go/test/codegen/memcombine.go:310)	MOVBLZX	"".b+33(SP), AX
	0x002a 00042 (/usr/local/go/test/codegen/memcombine.go:310)	MOVB	AL, 1(SP)
	0x002e 00046 (/usr/local/go/test/codegen/memcombine.go:310)	PCDATA	$1, $0
	0x002e 00046 (/usr/local/go/test/codegen/memcombine.go:310)	CALL	"".fcall_byte(SB)
	0x0033 00051 (/usr/local/go/test/codegen/memcombine.go:310)	MOVWLZX	8(SP), AX
	0x0038 00056 (/usr/local/go/test/codegen/memcombine.go:310)	MOVW	AX, (SP)
	0x003c 00060 (/usr/local/go/test/codegen/memcombine.go:310)	NOP
	0x0040 00064 (/usr/local/go/test/codegen/memcombine.go:310)	CALL	"".fcall_byte(SB)
	0x0045 00069 (/usr/local/go/test/codegen/memcombine.go:310)	MOVBLZX	8(SP), AX
	0x004a 00074 (/usr/local/go/test/codegen/memcombine.go:310)	MOVBLZX	9(SP), CX
	0x004f 00079 (/usr/local/go/test/codegen/memcombine.go:310)	MOVB	AL, "".~r2+40(SP)
	0x0053 00083 (/usr/local/go/test/codegen/memcombine.go:310)	MOVB	CL, "".~r3+41(SP)
	0x0057 00087 (/usr/local/go/test/codegen/memcombine.go:310)	MOVQ	16(SP), BP
	0x005c 00092 (/usr/local/go/test/codegen/memcombine.go:310)	ADDQ	$24, SP
	0x0060 00096 (/usr/local/go/test/codegen/memcombine.go:310)	RET
	0x0061 00097 (/usr/local/go/test/codegen/memcombine.go:310)	NOP
	0x0061 00097 (/usr/local/go/test/codegen/memcombine.go:309)	PCDATA	$1, $-1
	0x0061 00097 (/usr/local/go/test/codegen/memcombine.go:309)	PCDATA	$0, $-2
	0x0061 00097 (/usr/local/go/test/codegen/memcombine.go:309)	CALL	runtime.morestack_noctxt(SB)
	0x0066 00102 (/usr/local/go/test/codegen/memcombine.go:309)	PCDATA	$0, $-1
	0x0066 00102 (/usr/local/go/test/codegen/memcombine.go:309)	JMP	0
	0x0000 64 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 52 48  dH..%....H;a.vRH
	0x0010 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 0f b6 44  ...H.l$.H.l$...D
	0x0020 24 20 88 04 24 0f b6 44 24 21 88 44 24 01 e8 00  $ ..$..D$!.D$...
	0x0030 00 00 00 0f b7 44 24 08 66 89 04 24 0f 1f 40 00  .....D$.f..$..@.
	0x0040 e8 00 00 00 00 0f b6 44 24 08 0f b6 4c 24 09 88  .......D$...L$..
	0x0050 44 24 28 88 4c 24 29 48 8b 6c 24 10 48 83 c4 18  D$(.L$)H.l$.H...
	0x0060 c3 e8 00 00 00 00 eb 98                          ........
	rel 5+4 t=17 TLS+0
	rel 47+4 t=8 "".fcall_byte+0
	rel 65+4 t=8 "".fcall_byte+0
	rel 98+4 t=8 runtime.morestack_noctxt+0
"".fcall_uint16 STEXT size=106 args=0x10 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:313)	TEXT	"".fcall_uint16(SB), ABIInternal, $24-16
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:313)	MOVQ	(TLS), CX
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:313)	CMPQ	SP, 16(CX)
	0x000d 00013 (/usr/local/go/test/codegen/memcombine.go:313)	PCDATA	$0, $-2
	0x000d 00013 (/usr/local/go/test/codegen/memcombine.go:313)	JLS	99
	0x000f 00015 (/usr/local/go/test/codegen/memcombine.go:313)	PCDATA	$0, $-1
	0x000f 00015 (/usr/local/go/test/codegen/memcombine.go:313)	SUBQ	$24, SP
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:313)	MOVQ	BP, 16(SP)
	0x0018 00024 (/usr/local/go/test/codegen/memcombine.go:313)	LEAQ	16(SP), BP
	0x001d 00029 (/usr/local/go/test/codegen/memcombine.go:313)	FUNCDATA	$0, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x001d 00029 (/usr/local/go/test/codegen/memcombine.go:313)	FUNCDATA	$1, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x001d 00029 (/usr/local/go/test/codegen/memcombine.go:314)	MOVWLZX	"".a+32(SP), AX
	0x0022 00034 (/usr/local/go/test/codegen/memcombine.go:314)	MOVW	AX, (SP)
	0x0026 00038 (/usr/local/go/test/codegen/memcombine.go:314)	MOVWLZX	"".b+34(SP), AX
	0x002b 00043 (/usr/local/go/test/codegen/memcombine.go:314)	MOVW	AX, 2(SP)
	0x0030 00048 (/usr/local/go/test/codegen/memcombine.go:314)	PCDATA	$1, $0
	0x0030 00048 (/usr/local/go/test/codegen/memcombine.go:314)	CALL	"".fcall_uint16(SB)
	0x0035 00053 (/usr/local/go/test/codegen/memcombine.go:314)	MOVL	8(SP), AX
	0x0039 00057 (/usr/local/go/test/codegen/memcombine.go:314)	MOVL	AX, (SP)
	0x003c 00060 (/usr/local/go/test/codegen/memcombine.go:314)	NOP
	0x0040 00064 (/usr/local/go/test/codegen/memcombine.go:314)	CALL	"".fcall_uint16(SB)
	0x0045 00069 (/usr/local/go/test/codegen/memcombine.go:314)	MOVWLZX	8(SP), AX
	0x004a 00074 (/usr/local/go/test/codegen/memcombine.go:314)	MOVWLZX	10(SP), CX
	0x004f 00079 (/usr/local/go/test/codegen/memcombine.go:314)	MOVW	AX, "".~r2+40(SP)
	0x0054 00084 (/usr/local/go/test/codegen/memcombine.go:314)	MOVW	CX, "".~r3+42(SP)
	0x0059 00089 (/usr/local/go/test/codegen/memcombine.go:314)	MOVQ	16(SP), BP
	0x005e 00094 (/usr/local/go/test/codegen/memcombine.go:314)	ADDQ	$24, SP
	0x0062 00098 (/usr/local/go/test/codegen/memcombine.go:314)	RET
	0x0063 00099 (/usr/local/go/test/codegen/memcombine.go:314)	NOP
	0x0063 00099 (/usr/local/go/test/codegen/memcombine.go:313)	PCDATA	$1, $-1
	0x0063 00099 (/usr/local/go/test/codegen/memcombine.go:313)	PCDATA	$0, $-2
	0x0063 00099 (/usr/local/go/test/codegen/memcombine.go:313)	CALL	runtime.morestack_noctxt(SB)
	0x0068 00104 (/usr/local/go/test/codegen/memcombine.go:313)	PCDATA	$0, $-1
	0x0068 00104 (/usr/local/go/test/codegen/memcombine.go:313)	JMP	0
	0x0000 64 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 54 48  dH..%....H;a.vTH
	0x0010 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 0f b7 44  ...H.l$.H.l$...D
	0x0020 24 20 66 89 04 24 0f b7 44 24 22 66 89 44 24 02  $ f..$..D$"f.D$.
	0x0030 e8 00 00 00 00 8b 44 24 08 89 04 24 0f 1f 40 00  ......D$...$..@.
	0x0040 e8 00 00 00 00 0f b7 44 24 08 0f b7 4c 24 0a 66  .......D$...L$.f
	0x0050 89 44 24 28 66 89 4c 24 2a 48 8b 6c 24 10 48 83  .D$(f.L$*H.l$.H.
	0x0060 c4 18 c3 e8 00 00 00 00 eb 96                    ..........
	rel 5+4 t=17 TLS+0
	rel 49+4 t=8 "".fcall_uint16+0
	rel 65+4 t=8 "".fcall_uint16+0
	rel 100+4 t=8 runtime.morestack_noctxt+0
"".fcall_uint32 STEXT size=98 args=0x10 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:317)	TEXT	"".fcall_uint32(SB), ABIInternal, $24-16
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:317)	MOVQ	(TLS), CX
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:317)	CMPQ	SP, 16(CX)
	0x000d 00013 (/usr/local/go/test/codegen/memcombine.go:317)	PCDATA	$0, $-2
	0x000d 00013 (/usr/local/go/test/codegen/memcombine.go:317)	JLS	89
	0x000f 00015 (/usr/local/go/test/codegen/memcombine.go:317)	PCDATA	$0, $-1
	0x000f 00015 (/usr/local/go/test/codegen/memcombine.go:317)	SUBQ	$24, SP
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:317)	MOVQ	BP, 16(SP)
	0x0018 00024 (/usr/local/go/test/codegen/memcombine.go:317)	LEAQ	16(SP), BP
	0x001d 00029 (/usr/local/go/test/codegen/memcombine.go:317)	FUNCDATA	$0, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x001d 00029 (/usr/local/go/test/codegen/memcombine.go:317)	FUNCDATA	$1, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x001d 00029 (/usr/local/go/test/codegen/memcombine.go:318)	MOVL	"".a+32(SP), AX
	0x0021 00033 (/usr/local/go/test/codegen/memcombine.go:318)	MOVL	AX, (SP)
	0x0024 00036 (/usr/local/go/test/codegen/memcombine.go:318)	MOVL	"".b+36(SP), AX
	0x0028 00040 (/usr/local/go/test/codegen/memcombine.go:318)	MOVL	AX, 4(SP)
	0x002c 00044 (/usr/local/go/test/codegen/memcombine.go:318)	PCDATA	$1, $0
	0x002c 00044 (/usr/local/go/test/codegen/memcombine.go:318)	CALL	"".fcall_uint32(SB)
	0x0031 00049 (/usr/local/go/test/codegen/memcombine.go:318)	MOVQ	8(SP), AX
	0x0036 00054 (/usr/local/go/test/codegen/memcombine.go:318)	MOVQ	AX, (SP)
	0x003a 00058 (/usr/local/go/test/codegen/memcombine.go:318)	CALL	"".fcall_uint32(SB)
	0x003f 00063 (/usr/local/go/test/codegen/memcombine.go:318)	MOVL	8(SP), AX
	0x0043 00067 (/usr/local/go/test/codegen/memcombine.go:318)	MOVL	12(SP), CX
	0x0047 00071 (/usr/local/go/test/codegen/memcombine.go:318)	MOVL	AX, "".~r2+40(SP)
	0x004b 00075 (/usr/local/go/test/codegen/memcombine.go:318)	MOVL	CX, "".~r3+44(SP)
	0x004f 00079 (/usr/local/go/test/codegen/memcombine.go:318)	MOVQ	16(SP), BP
	0x0054 00084 (/usr/local/go/test/codegen/memcombine.go:318)	ADDQ	$24, SP
	0x0058 00088 (/usr/local/go/test/codegen/memcombine.go:318)	RET
	0x0059 00089 (/usr/local/go/test/codegen/memcombine.go:318)	NOP
	0x0059 00089 (/usr/local/go/test/codegen/memcombine.go:317)	PCDATA	$1, $-1
	0x0059 00089 (/usr/local/go/test/codegen/memcombine.go:317)	PCDATA	$0, $-2
	0x0059 00089 (/usr/local/go/test/codegen/memcombine.go:317)	CALL	runtime.morestack_noctxt(SB)
	0x005e 00094 (/usr/local/go/test/codegen/memcombine.go:317)	PCDATA	$0, $-1
	0x005e 00094 (/usr/local/go/test/codegen/memcombine.go:317)	NOP
	0x0060 00096 (/usr/local/go/test/codegen/memcombine.go:317)	JMP	0
	0x0000 64 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 4a 48  dH..%....H;a.vJH
	0x0010 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 8b 44 24  ...H.l$.H.l$..D$
	0x0020 20 89 04 24 8b 44 24 24 89 44 24 04 e8 00 00 00   ..$.D$$.D$.....
	0x0030 00 48 8b 44 24 08 48 89 04 24 e8 00 00 00 00 8b  .H.D$.H..$......
	0x0040 44 24 08 8b 4c 24 0c 89 44 24 28 89 4c 24 2c 48  D$..L$..D$(.L$,H
	0x0050 8b 6c 24 10 48 83 c4 18 c3 e8 00 00 00 00 66 90  .l$.H.........f.
	0x0060 eb 9e                                            ..
	rel 5+4 t=17 TLS+0
	rel 45+4 t=8 "".fcall_uint32+0
	rel 59+4 t=8 "".fcall_uint32+0
	rel 90+4 t=8 runtime.morestack_noctxt+0
"".load_op_merge STEXT nosplit size=20 args=0x10 locals=0x0
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:323)	TEXT	"".load_op_merge(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:323)	FUNCDATA	$0, gclocals·dc9b0298814590ca3ffc3a889546fc8b(SB)
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:323)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:325)	MOVQ	"".q+16(SP), AX
	0x0005 00005 (/usr/local/go/test/codegen/memcombine.go:325)	MOVQ	(AX), CX
	0x0008 00008 (/usr/local/go/test/codegen/memcombine.go:324)	MOVQ	"".p+8(SP), DX
	0x000d 00013 (/usr/local/go/test/codegen/memcombine.go:324)	ADDQ	(DX), CX
	0x0010 00016 (/usr/local/go/test/codegen/memcombine.go:325)	MOVQ	CX, (AX)
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:326)	RET
	0x0000 48 8b 44 24 10 48 8b 08 48 8b 54 24 08 48 03 0a  H.D$.H..H.T$.H..
	0x0010 48 89 08 c3                                      H...
"".load_op_no_merge STEXT nosplit size=30 args=0x10 locals=0x0
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:327)	TEXT	"".load_op_no_merge(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:327)	FUNCDATA	$0, gclocals·dc9b0298814590ca3ffc3a889546fc8b(SB)
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:327)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:328)	MOVQ	"".p+8(SP), AX
	0x0005 00005 (/usr/local/go/test/codegen/memcombine.go:328)	MOVQ	(AX), AX
	0x0008 00008 (/usr/local/go/test/codegen/memcombine.go:329)	MOVQ	"".q+16(SP), CX
	0x000d 00013 (/usr/local/go/test/codegen/memcombine.go:329)	XORL	DX, DX
	0x000f 00015 (/usr/local/go/test/codegen/memcombine.go:329)	JMP	23
	0x0011 00017 (/usr/local/go/test/codegen/memcombine.go:330)	ADDQ	AX, (CX)
	0x0014 00020 (/usr/local/go/test/codegen/memcombine.go:329)	INCQ	DX
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:329)	CMPQ	DX, $10
	0x001b 00027 (/usr/local/go/test/codegen/memcombine.go:329)	JLT	17
	0x001d 00029 (/usr/local/go/test/codegen/memcombine.go:329)	RET
	0x0000 48 8b 44 24 08 48 8b 00 48 8b 4c 24 10 31 d2 eb  H.D$.H..H.L$.1..
	0x0010 06 48 01 01 48 ff c2 48 83 fa 0a 7c f4 c3        .H..H..H...|..
"".offsets_fold STEXT nosplit size=38 args=0x40 locals=0x0
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:335)	TEXT	"".offsets_fold(SB), NOSPLIT|ABIInternal, $0-64
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:335)	FUNCDATA	$0, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:335)	FUNCDATA	$1, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:335)	MOVQ	$0, "".b+48(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:335)	XORPS	X0, X0
	0x000c 00012 (/usr/local/go/test/codegen/memcombine.go:335)	MOVUPS	X0, "".b+52(SP)
	0x0011 00017 (/usr/local/go/test/codegen/memcombine.go:337)	MOVQ	"".a+28(SP), AX
	0x0016 00022 (/usr/local/go/test/codegen/memcombine.go:337)	MOVQ	AX, "".b+48(SP)
	0x001b 00027 (/usr/local/go/test/codegen/memcombine.go:337)	MOVUPS	"".a+32(SP), X0
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:337)	MOVUPS	X0, "".b+52(SP)
	0x0025 00037 (/usr/local/go/test/codegen/memcombine.go:338)	RET
	0x0000 48 c7 44 24 30 00 00 00 00 0f 57 c0 0f 11 44 24  H.D$0.....W...D$
	0x0010 34 48 8b 44 24 1c 48 89 44 24 30 0f 10 44 24 20  4H.D$.H.D$0..D$ 
	0x0020 0f 11 44 24 34 c3                                ..D$4.
"".safe_point STEXT size=133 args=0x10 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:344)	TEXT	"".safe_point(SB), ABIInternal, $24-16
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:344)	MOVQ	(TLS), CX
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:344)	CMPQ	SP, 16(CX)
	0x000d 00013 (/usr/local/go/test/codegen/memcombine.go:344)	PCDATA	$0, $-2
	0x000d 00013 (/usr/local/go/test/codegen/memcombine.go:344)	JLS	122
	0x000f 00015 (/usr/local/go/test/codegen/memcombine.go:344)	PCDATA	$0, $-1
	0x000f 00015 (/usr/local/go/test/codegen/memcombine.go:344)	SUBQ	$24, SP
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:344)	MOVQ	BP, 16(SP)
	0x0018 00024 (/usr/local/go/test/codegen/memcombine.go:344)	LEAQ	16(SP), BP
	0x001d 00029 (/usr/local/go/test/codegen/memcombine.go:344)	FUNCDATA	$0, gclocals·fdbf1f5761f6d17e8ae3f0aaecb6a3c5(SB)
	0x001d 00029 (/usr/local/go/test/codegen/memcombine.go:344)	FUNCDATA	$1, gclocals·cebf9419b90e46477aa4e5920f8669ae(SB)
	0x001d 00029 (/usr/local/go/test/codegen/memcombine.go:345)	MOVQ	"".p+32(SP), AX
	0x0022 00034 (/usr/local/go/test/codegen/memcombine.go:345)	MOVQ	(AX), CX
	0x0025 00037 (/usr/local/go/test/codegen/memcombine.go:345)	MOVQ	CX, "".a+8(SP)
	0x002a 00042 (/usr/local/go/test/codegen/memcombine.go:345)	MOVQ	8(AX), AX
	0x002e 00046 (/usr/local/go/test/codegen/memcombine.go:345)	MOVQ	AX, "".b(SP)
	0x0032 00050 (/usr/local/go/test/codegen/memcombine.go:346)	PCDATA	$1, $1
	0x0032 00050 (/usr/local/go/test/codegen/memcombine.go:346)	CALL	runtime.GC(SB)
	0x0037 00055 (/usr/local/go/test/codegen/memcombine.go:347)	MOVQ	"".q+40(SP), DI
	0x003c 00060 (/usr/local/go/test/codegen/memcombine.go:347)	TESTB	AL, (DI)
	0x003e 00062 (/usr/local/go/test/codegen/memcombine.go:347)	PCDATA	$0, $-2
	0x003e 00062 (/usr/local/go/test/codegen/memcombine.go:347)	CMPL	runtime.writeBarrier(SB), $0
	0x0045 00069 (/usr/local/go/test/codegen/memcombine.go:347)	JNE	97
	0x0047 00071 (/usr/local/go/test/codegen/memcombine.go:347)	MOVQ	"".a+8(SP), AX
	0x004c 00076 (/usr/local/go/test/codegen/memcombine.go:347)	MOVQ	AX, (DI)
	0x004f 00079 (/usr/local/go/test/codegen/memcombine.go:347)	MOVQ	"".b(SP), AX
	0x0053 00083 (/usr/local/go/test/codegen/memcombine.go:347)	MOVQ	AX, 8(DI)
	0x0057 00087 (/usr/local/go/test/codegen/memcombine.go:348)	PCDATA	$0, $-1
	0x0057 00087 (/usr/local/go/test/codegen/memcombine.go:348)	PCDATA	$1, $-1
	0x0057 00087 (/usr/local/go/test/codegen/memcombine.go:348)	MOVQ	16(SP), BP
	0x005c 00092 (/usr/local/go/test/codegen/memcombine.go:348)	ADDQ	$24, SP
	0x0060 00096 (/usr/local/go/test/codegen/memcombine.go:348)	RET
	0x0061 00097 (/usr/local/go/test/codegen/memcombine.go:347)	PCDATA	$0, $-2
	0x0061 00097 (/usr/local/go/test/codegen/memcombine.go:347)	MOVQ	"".a+8(SP), AX
	0x0066 00102 (/usr/local/go/test/codegen/memcombine.go:347)	CALL	runtime.gcWriteBarrier(SB)
	0x006b 00107 (/usr/local/go/test/codegen/memcombine.go:347)	ADDQ	$8, DI
	0x006f 00111 (/usr/local/go/test/codegen/memcombine.go:347)	MOVQ	"".b(SP), AX
	0x0073 00115 (/usr/local/go/test/codegen/memcombine.go:347)	CALL	runtime.gcWriteBarrier(SB)
	0x0078 00120 (/usr/local/go/test/codegen/memcombine.go:347)	JMP	87
	0x007a 00122 (/usr/local/go/test/codegen/memcombine.go:347)	NOP
	0x007a 00122 (/usr/local/go/test/codegen/memcombine.go:344)	PCDATA	$1, $-1
	0x007a 00122 (/usr/local/go/test/codegen/memcombine.go:344)	PCDATA	$0, $-2
	0x007a 00122 (/usr/local/go/test/codegen/memcombine.go:344)	CALL	runtime.morestack_noctxt(SB)
	0x007f 00127 (/usr/local/go/test/codegen/memcombine.go:344)	PCDATA	$0, $-1
	0x007f 00127 (/usr/local/go/test/codegen/memcombine.go:344)	NOP
	0x0080 00128 (/usr/local/go/test/codegen/memcombine.go:344)	JMP	0
	0x0000 64 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 6b 48  dH..%....H;a.vkH
	0x0010 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b 44  ...H.l$.H.l$.H.D
	0x0020 24 20 48 8b 08 48 89 4c 24 08 48 8b 40 08 48 89  $ H..H.L$.H.@.H.
	0x0030 04 24 e8 00 00 00 00 48 8b 7c 24 28 84 07 83 3d  .$.....H.|$(...=
	0x0040 00 00 00 00 00 75 1a 48 8b 44 24 08 48 89 07 48  .....u.H.D$.H..H
	0x0050 8b 04 24 48 89 47 08 48 8b 6c 24 10 48 83 c4 18  ..$H.G.H.l$.H...
	0x0060 c3 48 8b 44 24 08 e8 00 00 00 00 48 83 c7 08 48  .H.D$......H...H
	0x0070 8b 04 24 e8 00 00 00 00 eb dd e8 00 00 00 00 90  ..$.............
	0x0080 e9 7b ff ff ff                                   .{...
	rel 5+4 t=17 TLS+0
	rel 51+4 t=8 runtime.GC+0
	rel 64+4 t=16 runtime.writeBarrier+-1
	rel 103+4 t=8 runtime.gcWriteBarrier+0
	rel 116+4 t=8 runtime.gcWriteBarrier+0
	rel 123+4 t=8 runtime.morestack_noctxt+0
"".store_le64 STEXT nosplit size=70 args=0x18 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:354)	TEXT	"".store_le64(SB), NOSPLIT|ABIInternal, $24-24
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:354)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:354)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:354)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:354)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:354)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (<unknown line number>)	NOP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:359)	MOVQ	"".sink64(SB), DX
	0x0015 00021 (/usr/local/go/test/codegen/memcombine.go:359)	MOVQ	"".b+40(SP), CX
	0x001a 00026 (/usr/local/go/test/codegen/memcombine.go:359)	NOP
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:359)	CMPQ	CX, $7
	0x0024 00036 (/usr/local/go/test/codegen/memcombine.go:359)	JLS	56
	0x0026 00038 (/usr/local/go/test/codegen/memcombine.go:359)	MOVQ	"".b+32(SP), AX
	0x002b 00043 (/usr/local/go/test/codegen/memcombine.go:359)	MOVQ	DX, (AX)
	0x002e 00046 (/usr/local/go/test/codegen/memcombine.go:359)	MOVQ	16(SP), BP
	0x0033 00051 (/usr/local/go/test/codegen/memcombine.go:359)	ADDQ	$24, SP
	0x0037 00055 (/usr/local/go/test/codegen/memcombine.go:359)	RET
	0x0038 00056 (/usr/local/go/test/codegen/memcombine.go:359)	MOVL	$7, AX
	0x003d 00061 (/usr/local/go/test/codegen/memcombine.go:359)	PCDATA	$1, $1
	0x003d 00061 (/usr/local/go/test/codegen/memcombine.go:359)	NOP
	0x0040 00064 (/usr/local/go/test/codegen/memcombine.go:359)	CALL	runtime.panicIndex(SB)
	0x0045 00069 (/usr/local/go/test/codegen/memcombine.go:359)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 15 00 00 00 00 48 8b 4c 24 28 66 0f 1f 44 00 00  .....H.L$(f..D..
	0x0020 48 83 f9 07 76 12 48 8b 44 24 20 48 89 10 48 8b  H...v.H.D$ H..H.
	0x0030 6c 24 10 48 83 c4 18 c3 b8 07 00 00 00 0f 1f 00  l$.H............
	0x0040 e8 00 00 00 00 90                                ......
	rel 17+4 t=16 "".sink64+0
	rel 65+4 t=8 runtime.panicIndex+0
"".store_le64_idx STEXT nosplit size=102 args=0x20 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:362)	TEXT	"".store_le64_idx(SB), NOSPLIT|ABIInternal, $24-32
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:362)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:362)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:362)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:362)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:362)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:367)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:367)	MOVQ	"".b+40(SP), CX
	0x0018 00024 (/usr/local/go/test/codegen/memcombine.go:367)	CMPQ	AX, CX
	0x001b 00027 (/usr/local/go/test/codegen/memcombine.go:367)	JHI	96
	0x001d 00029 (/usr/local/go/test/codegen/memcombine.go:367)	MOVQ	"".sink64(SB), DX
	0x0024 00036 (<unknown line number>)	NOP
	0x0024 00036 (/usr/local/go/test/codegen/memcombine.go:367)	SUBQ	AX, CX
	0x0027 00039 (/usr/local/go/test/codegen/memcombine.go:367)	MOVQ	"".b+48(SP), BX
	0x002c 00044 (/usr/local/go/test/codegen/memcombine.go:367)	MOVQ	AX, SI
	0x002f 00047 (/usr/local/go/test/codegen/memcombine.go:367)	SUBQ	BX, AX
	0x0032 00050 (/usr/local/go/test/codegen/memcombine.go:367)	SARQ	$63, AX
	0x0036 00054 (/usr/local/go/test/codegen/memcombine.go:367)	ANDQ	AX, SI
	0x0039 00057 (/usr/local/go/test/codegen/memcombine.go:367)	CMPQ	CX, $7
	0x003d 00061 (/usr/local/go/test/codegen/memcombine.go:367)	JLS	82
	0x003f 00063 (/usr/local/go/test/codegen/memcombine.go:367)	MOVQ	"".b+32(SP), AX
	0x0044 00068 (/usr/local/go/test/codegen/memcombine.go:367)	MOVQ	DX, (AX)(SI*1)
	0x0048 00072 (/usr/local/go/test/codegen/memcombine.go:367)	MOVQ	16(SP), BP
	0x004d 00077 (/usr/local/go/test/codegen/memcombine.go:367)	ADDQ	$24, SP
	0x0051 00081 (/usr/local/go/test/codegen/memcombine.go:367)	RET
	0x0052 00082 (/usr/local/go/test/codegen/memcombine.go:367)	MOVL	$7, AX
	0x0057 00087 (/usr/local/go/test/codegen/memcombine.go:367)	PCDATA	$1, $1
	0x0057 00087 (/usr/local/go/test/codegen/memcombine.go:367)	CALL	runtime.panicIndex(SB)
	0x005c 00092 (/usr/local/go/test/codegen/memcombine.go:367)	NOP
	0x0060 00096 (/usr/local/go/test/codegen/memcombine.go:367)	CALL	runtime.panicSliceB(SB)
	0x0065 00101 (/usr/local/go/test/codegen/memcombine.go:367)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 8b 4c 24 28 48 39 c8 77 43 48 8b 15  D$8H.L$(H9.wCH..
	0x0020 00 00 00 00 48 29 c1 48 8b 5c 24 30 48 89 c6 48  ....H).H.\$0H..H
	0x0030 29 d8 48 c1 f8 3f 48 21 c6 48 83 f9 07 76 13 48  ).H..?H!.H...v.H
	0x0040 8b 44 24 20 48 89 14 30 48 8b 6c 24 10 48 83 c4  .D$ H..0H.l$.H..
	0x0050 18 c3 b8 07 00 00 00 e8 00 00 00 00 0f 1f 40 00  ..............@.
	0x0060 e8 00 00 00 00 90                                ......
	rel 32+4 t=16 "".sink64+0
	rel 88+4 t=8 runtime.panicIndex+0
	rel 97+4 t=8 runtime.panicSliceB+0
"".store_le32 STEXT nosplit size=59 args=0x18 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:370)	TEXT	"".store_le32(SB), NOSPLIT|ABIInternal, $24-24
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:370)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:370)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:370)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:370)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:370)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (<unknown line number>)	NOP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:375)	MOVL	"".sink32(SB), DX
	0x0014 00020 (/usr/local/go/test/codegen/memcombine.go:375)	MOVQ	"".b+40(SP), CX
	0x0019 00025 (/usr/local/go/test/codegen/memcombine.go:375)	CMPQ	CX, $3
	0x001d 00029 (/usr/local/go/test/codegen/memcombine.go:375)	JLS	48
	0x001f 00031 (/usr/local/go/test/codegen/memcombine.go:375)	MOVQ	"".b+32(SP), AX
	0x0024 00036 (/usr/local/go/test/codegen/memcombine.go:375)	MOVL	DX, (AX)
	0x0026 00038 (/usr/local/go/test/codegen/memcombine.go:375)	MOVQ	16(SP), BP
	0x002b 00043 (/usr/local/go/test/codegen/memcombine.go:375)	ADDQ	$24, SP
	0x002f 00047 (/usr/local/go/test/codegen/memcombine.go:375)	RET
	0x0030 00048 (/usr/local/go/test/codegen/memcombine.go:375)	MOVL	$3, AX
	0x0035 00053 (/usr/local/go/test/codegen/memcombine.go:375)	PCDATA	$1, $1
	0x0035 00053 (/usr/local/go/test/codegen/memcombine.go:375)	CALL	runtime.panicIndex(SB)
	0x003a 00058 (/usr/local/go/test/codegen/memcombine.go:375)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 8b 15  H...H.l$.H.l$...
	0x0010 00 00 00 00 48 8b 4c 24 28 48 83 f9 03 76 11 48  ....H.L$(H...v.H
	0x0020 8b 44 24 20 89 10 48 8b 6c 24 10 48 83 c4 18 c3  .D$ ..H.l$.H....
	0x0030 b8 03 00 00 00 e8 00 00 00 00 90                 ...........
	rel 16+4 t=16 "".sink32+0
	rel 54+4 t=8 runtime.panicIndex+0
"".store_le32_idx STEXT nosplit size=96 args=0x20 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:378)	TEXT	"".store_le32_idx(SB), NOSPLIT|ABIInternal, $24-32
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:378)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:378)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:378)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:378)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:378)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:383)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:383)	MOVQ	"".b+40(SP), CX
	0x0018 00024 (/usr/local/go/test/codegen/memcombine.go:383)	CMPQ	AX, CX
	0x001b 00027 (/usr/local/go/test/codegen/memcombine.go:383)	JHI	90
	0x001d 00029 (/usr/local/go/test/codegen/memcombine.go:383)	MOVL	"".sink32(SB), DX
	0x0023 00035 (<unknown line number>)	NOP
	0x0023 00035 (/usr/local/go/test/codegen/memcombine.go:383)	SUBQ	AX, CX
	0x0026 00038 (/usr/local/go/test/codegen/memcombine.go:383)	MOVQ	"".b+48(SP), BX
	0x002b 00043 (/usr/local/go/test/codegen/memcombine.go:383)	MOVQ	AX, SI
	0x002e 00046 (/usr/local/go/test/codegen/memcombine.go:383)	SUBQ	BX, AX
	0x0031 00049 (/usr/local/go/test/codegen/memcombine.go:383)	SARQ	$63, AX
	0x0035 00053 (/usr/local/go/test/codegen/memcombine.go:383)	ANDQ	AX, SI
	0x0038 00056 (/usr/local/go/test/codegen/memcombine.go:383)	CMPQ	CX, $3
	0x003c 00060 (/usr/local/go/test/codegen/memcombine.go:383)	JLS	80
	0x003e 00062 (/usr/local/go/test/codegen/memcombine.go:383)	MOVQ	"".b+32(SP), AX
	0x0043 00067 (/usr/local/go/test/codegen/memcombine.go:383)	MOVL	DX, (AX)(SI*1)
	0x0046 00070 (/usr/local/go/test/codegen/memcombine.go:383)	MOVQ	16(SP), BP
	0x004b 00075 (/usr/local/go/test/codegen/memcombine.go:383)	ADDQ	$24, SP
	0x004f 00079 (/usr/local/go/test/codegen/memcombine.go:383)	RET
	0x0050 00080 (/usr/local/go/test/codegen/memcombine.go:383)	MOVL	$3, AX
	0x0055 00085 (/usr/local/go/test/codegen/memcombine.go:383)	PCDATA	$1, $1
	0x0055 00085 (/usr/local/go/test/codegen/memcombine.go:383)	CALL	runtime.panicIndex(SB)
	0x005a 00090 (/usr/local/go/test/codegen/memcombine.go:383)	CALL	runtime.panicSliceB(SB)
	0x005f 00095 (/usr/local/go/test/codegen/memcombine.go:383)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 8b 4c 24 28 48 39 c8 77 3d 8b 15 00  D$8H.L$(H9.w=...
	0x0020 00 00 00 48 29 c1 48 8b 5c 24 30 48 89 c6 48 29  ...H).H.\$0H..H)
	0x0030 d8 48 c1 f8 3f 48 21 c6 48 83 f9 03 76 12 48 8b  .H..?H!.H...v.H.
	0x0040 44 24 20 89 14 30 48 8b 6c 24 10 48 83 c4 18 c3  D$ ..0H.l$.H....
	0x0050 b8 03 00 00 00 e8 00 00 00 00 e8 00 00 00 00 90  ................
	rel 31+4 t=16 "".sink32+0
	rel 86+4 t=8 runtime.panicIndex+0
	rel 91+4 t=8 runtime.panicSliceB+0
"".store_le16 STEXT nosplit size=70 args=0x18 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:386)	TEXT	"".store_le16(SB), NOSPLIT|ABIInternal, $24-24
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:386)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:386)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:386)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:386)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:386)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (<unknown line number>)	NOP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:391)	MOVWLZX	"".sink16(SB), DX
	0x0015 00021 (/usr/local/go/test/codegen/memcombine.go:391)	MOVQ	"".b+40(SP), CX
	0x001a 00026 (/usr/local/go/test/codegen/memcombine.go:391)	NOP
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:391)	CMPQ	CX, $1
	0x0024 00036 (/usr/local/go/test/codegen/memcombine.go:391)	JLS	56
	0x0026 00038 (/usr/local/go/test/codegen/memcombine.go:391)	MOVQ	"".b+32(SP), AX
	0x002b 00043 (/usr/local/go/test/codegen/memcombine.go:391)	MOVW	DX, (AX)
	0x002e 00046 (/usr/local/go/test/codegen/memcombine.go:391)	MOVQ	16(SP), BP
	0x0033 00051 (/usr/local/go/test/codegen/memcombine.go:391)	ADDQ	$24, SP
	0x0037 00055 (/usr/local/go/test/codegen/memcombine.go:391)	RET
	0x0038 00056 (/usr/local/go/test/codegen/memcombine.go:391)	MOVL	$1, AX
	0x003d 00061 (/usr/local/go/test/codegen/memcombine.go:391)	PCDATA	$1, $1
	0x003d 00061 (/usr/local/go/test/codegen/memcombine.go:391)	NOP
	0x0040 00064 (/usr/local/go/test/codegen/memcombine.go:391)	CALL	runtime.panicIndex(SB)
	0x0045 00069 (/usr/local/go/test/codegen/memcombine.go:391)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 0f b7  H...H.l$.H.l$...
	0x0010 15 00 00 00 00 48 8b 4c 24 28 66 0f 1f 44 00 00  .....H.L$(f..D..
	0x0020 48 83 f9 01 76 12 48 8b 44 24 20 66 89 10 48 8b  H...v.H.D$ f..H.
	0x0030 6c 24 10 48 83 c4 18 c3 b8 01 00 00 00 0f 1f 00  l$.H............
	0x0040 e8 00 00 00 00 90                                ......
	rel 17+4 t=16 "".sink16+0
	rel 65+4 t=8 runtime.panicIndex+0
"".store_le16_idx STEXT nosplit size=102 args=0x20 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:394)	TEXT	"".store_le16_idx(SB), NOSPLIT|ABIInternal, $24-32
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:394)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:394)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:394)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:394)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:394)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:399)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:399)	MOVQ	"".b+40(SP), CX
	0x0018 00024 (/usr/local/go/test/codegen/memcombine.go:399)	CMPQ	AX, CX
	0x001b 00027 (/usr/local/go/test/codegen/memcombine.go:399)	JHI	96
	0x001d 00029 (/usr/local/go/test/codegen/memcombine.go:399)	MOVWLZX	"".sink16(SB), DX
	0x0024 00036 (<unknown line number>)	NOP
	0x0024 00036 (/usr/local/go/test/codegen/memcombine.go:399)	SUBQ	AX, CX
	0x0027 00039 (/usr/local/go/test/codegen/memcombine.go:399)	MOVQ	"".b+48(SP), BX
	0x002c 00044 (/usr/local/go/test/codegen/memcombine.go:399)	MOVQ	AX, SI
	0x002f 00047 (/usr/local/go/test/codegen/memcombine.go:399)	SUBQ	BX, AX
	0x0032 00050 (/usr/local/go/test/codegen/memcombine.go:399)	SARQ	$63, AX
	0x0036 00054 (/usr/local/go/test/codegen/memcombine.go:399)	ANDQ	AX, SI
	0x0039 00057 (/usr/local/go/test/codegen/memcombine.go:399)	CMPQ	CX, $1
	0x003d 00061 (/usr/local/go/test/codegen/memcombine.go:399)	JLS	82
	0x003f 00063 (/usr/local/go/test/codegen/memcombine.go:399)	MOVQ	"".b+32(SP), AX
	0x0044 00068 (/usr/local/go/test/codegen/memcombine.go:399)	MOVW	DX, (AX)(SI*1)
	0x0048 00072 (/usr/local/go/test/codegen/memcombine.go:399)	MOVQ	16(SP), BP
	0x004d 00077 (/usr/local/go/test/codegen/memcombine.go:399)	ADDQ	$24, SP
	0x0051 00081 (/usr/local/go/test/codegen/memcombine.go:399)	RET
	0x0052 00082 (/usr/local/go/test/codegen/memcombine.go:399)	MOVL	$1, AX
	0x0057 00087 (/usr/local/go/test/codegen/memcombine.go:399)	PCDATA	$1, $1
	0x0057 00087 (/usr/local/go/test/codegen/memcombine.go:399)	CALL	runtime.panicIndex(SB)
	0x005c 00092 (/usr/local/go/test/codegen/memcombine.go:399)	NOP
	0x0060 00096 (/usr/local/go/test/codegen/memcombine.go:399)	CALL	runtime.panicSliceB(SB)
	0x0065 00101 (/usr/local/go/test/codegen/memcombine.go:399)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 8b 4c 24 28 48 39 c8 77 43 0f b7 15  D$8H.L$(H9.wC...
	0x0020 00 00 00 00 48 29 c1 48 8b 5c 24 30 48 89 c6 48  ....H).H.\$0H..H
	0x0030 29 d8 48 c1 f8 3f 48 21 c6 48 83 f9 01 76 13 48  ).H..?H!.H...v.H
	0x0040 8b 44 24 20 66 89 14 30 48 8b 6c 24 10 48 83 c4  .D$ f..0H.l$.H..
	0x0050 18 c3 b8 01 00 00 00 e8 00 00 00 00 0f 1f 40 00  ..............@.
	0x0060 e8 00 00 00 00 90                                ......
	rel 32+4 t=16 "".sink16+0
	rel 88+4 t=8 runtime.panicIndex+0
	rel 97+4 t=8 runtime.panicSliceB+0
"".store_be64 STEXT nosplit size=70 args=0x18 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:402)	TEXT	"".store_be64(SB), NOSPLIT|ABIInternal, $24-24
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:402)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:402)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:402)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:402)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:402)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (<unknown line number>)	NOP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:407)	MOVQ	"".sink64(SB), DX
	0x0015 00021 (/usr/local/go/test/codegen/memcombine.go:407)	MOVQ	"".b+40(SP), CX
	0x001a 00026 (/usr/local/go/test/codegen/memcombine.go:407)	NOP
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:407)	CMPQ	CX, $7
	0x0024 00036 (/usr/local/go/test/codegen/memcombine.go:407)	JLS	59
	0x0026 00038 (/usr/local/go/test/codegen/memcombine.go:407)	BSWAPQ	DX
	0x0029 00041 (/usr/local/go/test/codegen/memcombine.go:407)	MOVQ	"".b+32(SP), AX
	0x002e 00046 (/usr/local/go/test/codegen/memcombine.go:407)	MOVQ	DX, (AX)
	0x0031 00049 (/usr/local/go/test/codegen/memcombine.go:407)	MOVQ	16(SP), BP
	0x0036 00054 (/usr/local/go/test/codegen/memcombine.go:407)	ADDQ	$24, SP
	0x003a 00058 (/usr/local/go/test/codegen/memcombine.go:407)	RET
	0x003b 00059 (/usr/local/go/test/codegen/memcombine.go:407)	MOVL	$7, AX
	0x0040 00064 (/usr/local/go/test/codegen/memcombine.go:407)	PCDATA	$1, $1
	0x0040 00064 (/usr/local/go/test/codegen/memcombine.go:407)	CALL	runtime.panicIndex(SB)
	0x0045 00069 (/usr/local/go/test/codegen/memcombine.go:407)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 15 00 00 00 00 48 8b 4c 24 28 66 0f 1f 44 00 00  .....H.L$(f..D..
	0x0020 48 83 f9 07 76 15 48 0f ca 48 8b 44 24 20 48 89  H...v.H..H.D$ H.
	0x0030 10 48 8b 6c 24 10 48 83 c4 18 c3 b8 07 00 00 00  .H.l$.H.........
	0x0040 e8 00 00 00 00 90                                ......
	rel 17+4 t=16 "".sink64+0
	rel 65+4 t=8 runtime.panicIndex+0
"".store_be64_idx STEXT nosplit size=102 args=0x20 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:410)	TEXT	"".store_be64_idx(SB), NOSPLIT|ABIInternal, $24-32
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:410)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:410)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:410)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:410)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:410)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:415)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:415)	MOVQ	"".b+40(SP), CX
	0x0018 00024 (/usr/local/go/test/codegen/memcombine.go:415)	CMPQ	AX, CX
	0x001b 00027 (/usr/local/go/test/codegen/memcombine.go:415)	JHI	96
	0x001d 00029 (/usr/local/go/test/codegen/memcombine.go:415)	MOVQ	"".sink64(SB), DX
	0x0024 00036 (<unknown line number>)	NOP
	0x0024 00036 (/usr/local/go/test/codegen/memcombine.go:415)	SUBQ	AX, CX
	0x0027 00039 (/usr/local/go/test/codegen/memcombine.go:415)	MOVQ	"".b+48(SP), BX
	0x002c 00044 (/usr/local/go/test/codegen/memcombine.go:415)	MOVQ	AX, SI
	0x002f 00047 (/usr/local/go/test/codegen/memcombine.go:415)	SUBQ	BX, AX
	0x0032 00050 (/usr/local/go/test/codegen/memcombine.go:415)	SARQ	$63, AX
	0x0036 00054 (/usr/local/go/test/codegen/memcombine.go:415)	ANDQ	AX, SI
	0x0039 00057 (/usr/local/go/test/codegen/memcombine.go:415)	CMPQ	CX, $7
	0x003d 00061 (/usr/local/go/test/codegen/memcombine.go:415)	JLS	85
	0x003f 00063 (/usr/local/go/test/codegen/memcombine.go:415)	BSWAPQ	DX
	0x0042 00066 (/usr/local/go/test/codegen/memcombine.go:415)	MOVQ	"".b+32(SP), AX
	0x0047 00071 (/usr/local/go/test/codegen/memcombine.go:415)	MOVQ	DX, (AX)(SI*1)
	0x004b 00075 (/usr/local/go/test/codegen/memcombine.go:415)	MOVQ	16(SP), BP
	0x0050 00080 (/usr/local/go/test/codegen/memcombine.go:415)	ADDQ	$24, SP
	0x0054 00084 (/usr/local/go/test/codegen/memcombine.go:415)	RET
	0x0055 00085 (/usr/local/go/test/codegen/memcombine.go:415)	MOVL	$7, AX
	0x005a 00090 (/usr/local/go/test/codegen/memcombine.go:415)	PCDATA	$1, $1
	0x005a 00090 (/usr/local/go/test/codegen/memcombine.go:415)	CALL	runtime.panicIndex(SB)
	0x005f 00095 (/usr/local/go/test/codegen/memcombine.go:415)	NOP
	0x0060 00096 (/usr/local/go/test/codegen/memcombine.go:415)	CALL	runtime.panicSliceB(SB)
	0x0065 00101 (/usr/local/go/test/codegen/memcombine.go:415)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 8b 4c 24 28 48 39 c8 77 43 48 8b 15  D$8H.L$(H9.wCH..
	0x0020 00 00 00 00 48 29 c1 48 8b 5c 24 30 48 89 c6 48  ....H).H.\$0H..H
	0x0030 29 d8 48 c1 f8 3f 48 21 c6 48 83 f9 07 76 16 48  ).H..?H!.H...v.H
	0x0040 0f ca 48 8b 44 24 20 48 89 14 30 48 8b 6c 24 10  ..H.D$ H..0H.l$.
	0x0050 48 83 c4 18 c3 b8 07 00 00 00 e8 00 00 00 00 90  H...............
	0x0060 e8 00 00 00 00 90                                ......
	rel 32+4 t=16 "".sink64+0
	rel 91+4 t=8 runtime.panicIndex+0
	rel 97+4 t=8 runtime.panicSliceB+0
"".store_be32 STEXT nosplit size=61 args=0x18 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:418)	TEXT	"".store_be32(SB), NOSPLIT|ABIInternal, $24-24
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:418)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:418)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:418)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:418)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:418)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (<unknown line number>)	NOP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:423)	MOVL	"".sink32(SB), DX
	0x0014 00020 (/usr/local/go/test/codegen/memcombine.go:423)	MOVQ	"".b+40(SP), CX
	0x0019 00025 (/usr/local/go/test/codegen/memcombine.go:423)	CMPQ	CX, $3
	0x001d 00029 (/usr/local/go/test/codegen/memcombine.go:423)	JLS	50
	0x001f 00031 (/usr/local/go/test/codegen/memcombine.go:423)	BSWAPL	DX
	0x0021 00033 (/usr/local/go/test/codegen/memcombine.go:423)	MOVQ	"".b+32(SP), AX
	0x0026 00038 (/usr/local/go/test/codegen/memcombine.go:423)	MOVL	DX, (AX)
	0x0028 00040 (/usr/local/go/test/codegen/memcombine.go:423)	MOVQ	16(SP), BP
	0x002d 00045 (/usr/local/go/test/codegen/memcombine.go:423)	ADDQ	$24, SP
	0x0031 00049 (/usr/local/go/test/codegen/memcombine.go:423)	RET
	0x0032 00050 (/usr/local/go/test/codegen/memcombine.go:423)	MOVL	$3, AX
	0x0037 00055 (/usr/local/go/test/codegen/memcombine.go:423)	PCDATA	$1, $1
	0x0037 00055 (/usr/local/go/test/codegen/memcombine.go:423)	CALL	runtime.panicIndex(SB)
	0x003c 00060 (/usr/local/go/test/codegen/memcombine.go:423)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 8b 15  H...H.l$.H.l$...
	0x0010 00 00 00 00 48 8b 4c 24 28 48 83 f9 03 76 13 0f  ....H.L$(H...v..
	0x0020 ca 48 8b 44 24 20 89 10 48 8b 6c 24 10 48 83 c4  .H.D$ ..H.l$.H..
	0x0030 18 c3 b8 03 00 00 00 e8 00 00 00 00 90           .............
	rel 16+4 t=16 "".sink32+0
	rel 56+4 t=8 runtime.panicIndex+0
"".store_be32_idx STEXT nosplit size=102 args=0x20 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:426)	TEXT	"".store_be32_idx(SB), NOSPLIT|ABIInternal, $24-32
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:426)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:426)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:426)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:426)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:426)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:431)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:431)	MOVQ	"".b+40(SP), CX
	0x0018 00024 (/usr/local/go/test/codegen/memcombine.go:431)	CMPQ	AX, CX
	0x001b 00027 (/usr/local/go/test/codegen/memcombine.go:431)	JHI	96
	0x001d 00029 (/usr/local/go/test/codegen/memcombine.go:431)	MOVL	"".sink32(SB), DX
	0x0023 00035 (<unknown line number>)	NOP
	0x0023 00035 (/usr/local/go/test/codegen/memcombine.go:431)	SUBQ	AX, CX
	0x0026 00038 (/usr/local/go/test/codegen/memcombine.go:431)	MOVQ	"".b+48(SP), BX
	0x002b 00043 (/usr/local/go/test/codegen/memcombine.go:431)	MOVQ	AX, SI
	0x002e 00046 (/usr/local/go/test/codegen/memcombine.go:431)	SUBQ	BX, AX
	0x0031 00049 (/usr/local/go/test/codegen/memcombine.go:431)	SARQ	$63, AX
	0x0035 00053 (/usr/local/go/test/codegen/memcombine.go:431)	ANDQ	AX, SI
	0x0038 00056 (/usr/local/go/test/codegen/memcombine.go:431)	CMPQ	CX, $3
	0x003c 00060 (/usr/local/go/test/codegen/memcombine.go:431)	JLS	82
	0x003e 00062 (/usr/local/go/test/codegen/memcombine.go:431)	BSWAPL	DX
	0x0040 00064 (/usr/local/go/test/codegen/memcombine.go:431)	MOVQ	"".b+32(SP), AX
	0x0045 00069 (/usr/local/go/test/codegen/memcombine.go:431)	MOVL	DX, (AX)(SI*1)
	0x0048 00072 (/usr/local/go/test/codegen/memcombine.go:431)	MOVQ	16(SP), BP
	0x004d 00077 (/usr/local/go/test/codegen/memcombine.go:431)	ADDQ	$24, SP
	0x0051 00081 (/usr/local/go/test/codegen/memcombine.go:431)	RET
	0x0052 00082 (/usr/local/go/test/codegen/memcombine.go:431)	MOVL	$3, AX
	0x0057 00087 (/usr/local/go/test/codegen/memcombine.go:431)	PCDATA	$1, $1
	0x0057 00087 (/usr/local/go/test/codegen/memcombine.go:431)	CALL	runtime.panicIndex(SB)
	0x005c 00092 (/usr/local/go/test/codegen/memcombine.go:431)	NOP
	0x0060 00096 (/usr/local/go/test/codegen/memcombine.go:431)	CALL	runtime.panicSliceB(SB)
	0x0065 00101 (/usr/local/go/test/codegen/memcombine.go:431)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 8b 4c 24 28 48 39 c8 77 43 8b 15 00  D$8H.L$(H9.wC...
	0x0020 00 00 00 48 29 c1 48 8b 5c 24 30 48 89 c6 48 29  ...H).H.\$0H..H)
	0x0030 d8 48 c1 f8 3f 48 21 c6 48 83 f9 03 76 14 0f ca  .H..?H!.H...v...
	0x0040 48 8b 44 24 20 89 14 30 48 8b 6c 24 10 48 83 c4  H.D$ ..0H.l$.H..
	0x0050 18 c3 b8 03 00 00 00 e8 00 00 00 00 0f 1f 40 00  ..............@.
	0x0060 e8 00 00 00 00 90                                ......
	rel 31+4 t=16 "".sink32+0
	rel 88+4 t=8 runtime.panicIndex+0
	rel 97+4 t=8 runtime.panicSliceB+0
"".store_be16 STEXT nosplit size=71 args=0x18 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:434)	TEXT	"".store_be16(SB), NOSPLIT|ABIInternal, $24-24
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:434)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:434)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:434)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:434)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:434)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (<unknown line number>)	NOP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:439)	MOVWLZX	"".sink16(SB), DX
	0x0015 00021 (/usr/local/go/test/codegen/memcombine.go:439)	MOVQ	"".b+40(SP), CX
	0x001a 00026 (/usr/local/go/test/codegen/memcombine.go:439)	NOP
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:439)	CMPQ	CX, $1
	0x0024 00036 (/usr/local/go/test/codegen/memcombine.go:439)	JLS	60
	0x0026 00038 (/usr/local/go/test/codegen/memcombine.go:439)	ROLW	$8, DX
	0x002a 00042 (/usr/local/go/test/codegen/memcombine.go:439)	MOVQ	"".b+32(SP), AX
	0x002f 00047 (/usr/local/go/test/codegen/memcombine.go:439)	MOVW	DX, (AX)
	0x0032 00050 (/usr/local/go/test/codegen/memcombine.go:439)	MOVQ	16(SP), BP
	0x0037 00055 (/usr/local/go/test/codegen/memcombine.go:439)	ADDQ	$24, SP
	0x003b 00059 (/usr/local/go/test/codegen/memcombine.go:439)	RET
	0x003c 00060 (/usr/local/go/test/codegen/memcombine.go:439)	MOVL	$1, AX
	0x0041 00065 (/usr/local/go/test/codegen/memcombine.go:439)	PCDATA	$1, $1
	0x0041 00065 (/usr/local/go/test/codegen/memcombine.go:439)	CALL	runtime.panicIndex(SB)
	0x0046 00070 (/usr/local/go/test/codegen/memcombine.go:439)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 0f b7  H...H.l$.H.l$...
	0x0010 15 00 00 00 00 48 8b 4c 24 28 66 0f 1f 44 00 00  .....H.L$(f..D..
	0x0020 48 83 f9 01 76 16 66 c1 c2 08 48 8b 44 24 20 66  H...v.f...H.D$ f
	0x0030 89 10 48 8b 6c 24 10 48 83 c4 18 c3 b8 01 00 00  ..H.l$.H........
	0x0040 00 e8 00 00 00 00 90                             .......
	rel 17+4 t=16 "".sink16+0
	rel 66+4 t=8 runtime.panicIndex+0
"".store_be16_idx STEXT nosplit size=107 args=0x20 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:442)	TEXT	"".store_be16_idx(SB), NOSPLIT|ABIInternal, $24-32
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:442)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:442)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:442)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:442)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:442)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:447)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:447)	MOVQ	"".b+40(SP), CX
	0x0018 00024 (/usr/local/go/test/codegen/memcombine.go:447)	CMPQ	AX, CX
	0x001b 00027 (/usr/local/go/test/codegen/memcombine.go:447)	JHI	101
	0x001d 00029 (/usr/local/go/test/codegen/memcombine.go:447)	MOVWLZX	"".sink16(SB), DX
	0x0024 00036 (<unknown line number>)	NOP
	0x0024 00036 (/usr/local/go/test/codegen/memcombine.go:447)	SUBQ	AX, CX
	0x0027 00039 (/usr/local/go/test/codegen/memcombine.go:447)	MOVQ	"".b+48(SP), BX
	0x002c 00044 (/usr/local/go/test/codegen/memcombine.go:447)	MOVQ	AX, SI
	0x002f 00047 (/usr/local/go/test/codegen/memcombine.go:447)	SUBQ	BX, AX
	0x0032 00050 (/usr/local/go/test/codegen/memcombine.go:447)	SARQ	$63, AX
	0x0036 00054 (/usr/local/go/test/codegen/memcombine.go:447)	ANDQ	AX, SI
	0x0039 00057 (/usr/local/go/test/codegen/memcombine.go:447)	CMPQ	CX, $1
	0x003d 00061 (/usr/local/go/test/codegen/memcombine.go:447)	JLS	86
	0x003f 00063 (/usr/local/go/test/codegen/memcombine.go:447)	ROLW	$8, DX
	0x0043 00067 (/usr/local/go/test/codegen/memcombine.go:447)	MOVQ	"".b+32(SP), AX
	0x0048 00072 (/usr/local/go/test/codegen/memcombine.go:447)	MOVW	DX, (AX)(SI*1)
	0x004c 00076 (/usr/local/go/test/codegen/memcombine.go:447)	MOVQ	16(SP), BP
	0x0051 00081 (/usr/local/go/test/codegen/memcombine.go:447)	ADDQ	$24, SP
	0x0055 00085 (/usr/local/go/test/codegen/memcombine.go:447)	RET
	0x0056 00086 (/usr/local/go/test/codegen/memcombine.go:447)	MOVL	$1, AX
	0x005b 00091 (/usr/local/go/test/codegen/memcombine.go:447)	PCDATA	$1, $1
	0x005b 00091 (/usr/local/go/test/codegen/memcombine.go:447)	NOP
	0x0060 00096 (/usr/local/go/test/codegen/memcombine.go:447)	CALL	runtime.panicIndex(SB)
	0x0065 00101 (/usr/local/go/test/codegen/memcombine.go:447)	CALL	runtime.panicSliceB(SB)
	0x006a 00106 (/usr/local/go/test/codegen/memcombine.go:447)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 8b 4c 24 28 48 39 c8 77 48 0f b7 15  D$8H.L$(H9.wH...
	0x0020 00 00 00 00 48 29 c1 48 8b 5c 24 30 48 89 c6 48  ....H).H.\$0H..H
	0x0030 29 d8 48 c1 f8 3f 48 21 c6 48 83 f9 01 76 17 66  ).H..?H!.H...v.f
	0x0040 c1 c2 08 48 8b 44 24 20 66 89 14 30 48 8b 6c 24  ...H.D$ f..0H.l$
	0x0050 10 48 83 c4 18 c3 b8 01 00 00 00 0f 1f 44 00 00  .H...........D..
	0x0060 e8 00 00 00 00 e8 00 00 00 00 90                 ...........
	rel 32+4 t=16 "".sink16+0
	rel 97+4 t=8 runtime.panicIndex+0
	rel 102+4 t=8 runtime.panicSliceB+0
"".store_le_byte_2 STEXT nosplit size=60 args=0x20 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:450)	TEXT	"".store_le_byte_2(SB), NOSPLIT|ABIInternal, $24-32
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:450)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:450)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:450)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:450)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:450)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:451)	MOVQ	"".b+40(SP), CX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:451)	CMPQ	CX, $2
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:451)	JLS	49
	0x0019 00025 (/usr/local/go/test/codegen/memcombine.go:455)	MOVWLZX	"".val+56(SP), AX
	0x001e 00030 (/usr/local/go/test/codegen/memcombine.go:455)	MOVQ	"".b+32(SP), CX
	0x0023 00035 (/usr/local/go/test/codegen/memcombine.go:455)	MOVW	AX, 1(CX)
	0x0027 00039 (/usr/local/go/test/codegen/memcombine.go:456)	MOVQ	16(SP), BP
	0x002c 00044 (/usr/local/go/test/codegen/memcombine.go:456)	ADDQ	$24, SP
	0x0030 00048 (/usr/local/go/test/codegen/memcombine.go:456)	RET
	0x0031 00049 (/usr/local/go/test/codegen/memcombine.go:451)	MOVL	$2, AX
	0x0036 00054 (/usr/local/go/test/codegen/memcombine.go:451)	PCDATA	$1, $1
	0x0036 00054 (/usr/local/go/test/codegen/memcombine.go:451)	CALL	runtime.panicIndex(SB)
	0x003b 00059 (/usr/local/go/test/codegen/memcombine.go:451)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 4c 24 28 48 83 f9 02 76 18 0f b7 44 24 38 48 8b  L$(H...v...D$8H.
	0x0020 4c 24 20 66 89 41 01 48 8b 6c 24 10 48 83 c4 18  L$ f.A.H.l$.H...
	0x0030 c3 b8 02 00 00 00 e8 00 00 00 00 90              ............
	rel 55+4 t=8 runtime.panicIndex+0
"".store_le_byte_2_inv STEXT nosplit size=60 args=0x20 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:458)	TEXT	"".store_le_byte_2_inv(SB), NOSPLIT|ABIInternal, $24-32
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:458)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:458)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:458)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:458)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:458)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:459)	MOVQ	"".b+40(SP), CX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:459)	CMPQ	CX, $2
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:459)	JLS	49
	0x0019 00025 (/usr/local/go/test/codegen/memcombine.go:462)	MOVWLZX	"".val+56(SP), AX
	0x001e 00030 (/usr/local/go/test/codegen/memcombine.go:462)	MOVQ	"".b+32(SP), CX
	0x0023 00035 (/usr/local/go/test/codegen/memcombine.go:462)	MOVW	AX, 1(CX)
	0x0027 00039 (/usr/local/go/test/codegen/memcombine.go:463)	MOVQ	16(SP), BP
	0x002c 00044 (/usr/local/go/test/codegen/memcombine.go:463)	ADDQ	$24, SP
	0x0030 00048 (/usr/local/go/test/codegen/memcombine.go:463)	RET
	0x0031 00049 (/usr/local/go/test/codegen/memcombine.go:459)	MOVL	$2, AX
	0x0036 00054 (/usr/local/go/test/codegen/memcombine.go:459)	PCDATA	$1, $1
	0x0036 00054 (/usr/local/go/test/codegen/memcombine.go:459)	CALL	runtime.panicIndex(SB)
	0x003b 00059 (/usr/local/go/test/codegen/memcombine.go:459)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 4c 24 28 48 83 f9 02 76 18 0f b7 44 24 38 48 8b  L$(H...v...D$8H.
	0x0020 4c 24 20 66 89 41 01 48 8b 6c 24 10 48 83 c4 18  L$ f.A.H.l$.H...
	0x0030 c3 b8 02 00 00 00 e8 00 00 00 00 90              ............
	rel 55+4 t=8 runtime.panicIndex+0
"".store_le_byte_4 STEXT nosplit size=58 args=0x20 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:465)	TEXT	"".store_le_byte_4(SB), NOSPLIT|ABIInternal, $24-32
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:465)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:465)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:465)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:465)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:465)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:466)	MOVQ	"".b+40(SP), CX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:466)	CMPQ	CX, $4
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:466)	JLS	47
	0x0019 00025 (/usr/local/go/test/codegen/memcombine.go:470)	MOVL	"".val+56(SP), AX
	0x001d 00029 (/usr/local/go/test/codegen/memcombine.go:470)	MOVQ	"".b+32(SP), CX
	0x0022 00034 (/usr/local/go/test/codegen/memcombine.go:470)	MOVL	AX, 1(CX)
	0x0025 00037 (/usr/local/go/test/codegen/memcombine.go:471)	MOVQ	16(SP), BP
	0x002a 00042 (/usr/local/go/test/codegen/memcombine.go:471)	ADDQ	$24, SP
	0x002e 00046 (/usr/local/go/test/codegen/memcombine.go:471)	RET
	0x002f 00047 (/usr/local/go/test/codegen/memcombine.go:466)	MOVL	$4, AX
	0x0034 00052 (/usr/local/go/test/codegen/memcombine.go:466)	PCDATA	$1, $1
	0x0034 00052 (/usr/local/go/test/codegen/memcombine.go:466)	CALL	runtime.panicIndex(SB)
	0x0039 00057 (/usr/local/go/test/codegen/memcombine.go:466)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 4c 24 28 48 83 f9 04 76 16 8b 44 24 38 48 8b 4c  L$(H...v..D$8H.L
	0x0020 24 20 89 41 01 48 8b 6c 24 10 48 83 c4 18 c3 b8  $ .A.H.l$.H.....
	0x0030 04 00 00 00 e8 00 00 00 00 90                    ..........
	rel 53+4 t=8 runtime.panicIndex+0
"".store_le_byte_8 STEXT nosplit size=60 args=0x20 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:473)	TEXT	"".store_le_byte_8(SB), NOSPLIT|ABIInternal, $24-32
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:473)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:473)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:473)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:473)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:473)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:474)	MOVQ	"".b+40(SP), CX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:474)	CMPQ	CX, $8
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:474)	JLS	49
	0x0019 00025 (/usr/local/go/test/codegen/memcombine.go:477)	MOVQ	"".val+56(SP), AX
	0x001e 00030 (/usr/local/go/test/codegen/memcombine.go:477)	MOVQ	"".b+32(SP), CX
	0x0023 00035 (/usr/local/go/test/codegen/memcombine.go:477)	MOVQ	AX, 1(CX)
	0x0027 00039 (/usr/local/go/test/codegen/memcombine.go:478)	MOVQ	16(SP), BP
	0x002c 00044 (/usr/local/go/test/codegen/memcombine.go:478)	ADDQ	$24, SP
	0x0030 00048 (/usr/local/go/test/codegen/memcombine.go:478)	RET
	0x0031 00049 (/usr/local/go/test/codegen/memcombine.go:474)	MOVL	$8, AX
	0x0036 00054 (/usr/local/go/test/codegen/memcombine.go:474)	PCDATA	$1, $1
	0x0036 00054 (/usr/local/go/test/codegen/memcombine.go:474)	CALL	runtime.panicIndex(SB)
	0x003b 00059 (/usr/local/go/test/codegen/memcombine.go:474)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 4c 24 28 48 83 f9 08 76 18 48 8b 44 24 38 48 8b  L$(H...v.H.D$8H.
	0x0020 4c 24 20 48 89 41 01 48 8b 6c 24 10 48 83 c4 18  L$ H.A.H.l$.H...
	0x0030 c3 b8 08 00 00 00 e8 00 00 00 00 90              ............
	rel 55+4 t=8 runtime.panicIndex+0
"".store_be_byte_2 STEXT nosplit size=64 args=0x20 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:480)	TEXT	"".store_be_byte_2(SB), NOSPLIT|ABIInternal, $24-32
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:480)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:480)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:480)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:480)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:480)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:481)	MOVQ	"".b+40(SP), CX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:481)	CMPQ	CX, $2
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:481)	JLS	53
	0x0019 00025 (/usr/local/go/test/codegen/memcombine.go:484)	MOVWLZX	"".val+56(SP), AX
	0x001e 00030 (/usr/local/go/test/codegen/memcombine.go:484)	ROLW	$8, AX
	0x0022 00034 (/usr/local/go/test/codegen/memcombine.go:484)	MOVQ	"".b+32(SP), CX
	0x0027 00039 (/usr/local/go/test/codegen/memcombine.go:484)	MOVW	AX, 1(CX)
	0x002b 00043 (/usr/local/go/test/codegen/memcombine.go:485)	MOVQ	16(SP), BP
	0x0030 00048 (/usr/local/go/test/codegen/memcombine.go:485)	ADDQ	$24, SP
	0x0034 00052 (/usr/local/go/test/codegen/memcombine.go:485)	RET
	0x0035 00053 (/usr/local/go/test/codegen/memcombine.go:481)	MOVL	$2, AX
	0x003a 00058 (/usr/local/go/test/codegen/memcombine.go:481)	PCDATA	$1, $1
	0x003a 00058 (/usr/local/go/test/codegen/memcombine.go:481)	CALL	runtime.panicIndex(SB)
	0x003f 00063 (/usr/local/go/test/codegen/memcombine.go:481)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 4c 24 28 48 83 f9 02 76 1c 0f b7 44 24 38 66 c1  L$(H...v...D$8f.
	0x0020 c0 08 48 8b 4c 24 20 66 89 41 01 48 8b 6c 24 10  ..H.L$ f.A.H.l$.
	0x0030 48 83 c4 18 c3 b8 02 00 00 00 e8 00 00 00 00 90  H...............
	rel 59+4 t=8 runtime.panicIndex+0
"".store_be_byte_4 STEXT nosplit size=60 args=0x20 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:487)	TEXT	"".store_be_byte_4(SB), NOSPLIT|ABIInternal, $24-32
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:487)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:487)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:487)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:487)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:487)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:488)	MOVQ	"".b+40(SP), CX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:488)	CMPQ	CX, $4
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:488)	JLS	49
	0x0019 00025 (/usr/local/go/test/codegen/memcombine.go:491)	MOVL	"".val+56(SP), AX
	0x001d 00029 (/usr/local/go/test/codegen/memcombine.go:491)	BSWAPL	AX
	0x001f 00031 (/usr/local/go/test/codegen/memcombine.go:491)	MOVQ	"".b+32(SP), CX
	0x0024 00036 (/usr/local/go/test/codegen/memcombine.go:491)	MOVL	AX, 1(CX)
	0x0027 00039 (/usr/local/go/test/codegen/memcombine.go:492)	MOVQ	16(SP), BP
	0x002c 00044 (/usr/local/go/test/codegen/memcombine.go:492)	ADDQ	$24, SP
	0x0030 00048 (/usr/local/go/test/codegen/memcombine.go:492)	RET
	0x0031 00049 (/usr/local/go/test/codegen/memcombine.go:488)	MOVL	$4, AX
	0x0036 00054 (/usr/local/go/test/codegen/memcombine.go:488)	PCDATA	$1, $1
	0x0036 00054 (/usr/local/go/test/codegen/memcombine.go:488)	CALL	runtime.panicIndex(SB)
	0x003b 00059 (/usr/local/go/test/codegen/memcombine.go:488)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 4c 24 28 48 83 f9 04 76 18 8b 44 24 38 0f c8 48  L$(H...v..D$8..H
	0x0020 8b 4c 24 20 89 41 01 48 8b 6c 24 10 48 83 c4 18  .L$ .A.H.l$.H...
	0x0030 c3 b8 04 00 00 00 e8 00 00 00 00 90              ............
	rel 55+4 t=8 runtime.panicIndex+0
"".store_be_byte_8 STEXT nosplit size=63 args=0x20 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:494)	TEXT	"".store_be_byte_8(SB), NOSPLIT|ABIInternal, $24-32
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:494)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:494)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:494)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:494)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:494)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:495)	MOVQ	"".b+40(SP), CX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:495)	CMPQ	CX, $8
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:495)	JLS	52
	0x0019 00025 (/usr/local/go/test/codegen/memcombine.go:498)	MOVQ	"".val+56(SP), AX
	0x001e 00030 (/usr/local/go/test/codegen/memcombine.go:498)	BSWAPQ	AX
	0x0021 00033 (/usr/local/go/test/codegen/memcombine.go:498)	MOVQ	"".b+32(SP), CX
	0x0026 00038 (/usr/local/go/test/codegen/memcombine.go:498)	MOVQ	AX, 1(CX)
	0x002a 00042 (/usr/local/go/test/codegen/memcombine.go:499)	MOVQ	16(SP), BP
	0x002f 00047 (/usr/local/go/test/codegen/memcombine.go:499)	ADDQ	$24, SP
	0x0033 00051 (/usr/local/go/test/codegen/memcombine.go:499)	RET
	0x0034 00052 (/usr/local/go/test/codegen/memcombine.go:495)	MOVL	$8, AX
	0x0039 00057 (/usr/local/go/test/codegen/memcombine.go:495)	PCDATA	$1, $1
	0x0039 00057 (/usr/local/go/test/codegen/memcombine.go:495)	CALL	runtime.panicIndex(SB)
	0x003e 00062 (/usr/local/go/test/codegen/memcombine.go:495)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 4c 24 28 48 83 f9 08 76 1b 48 8b 44 24 38 48 0f  L$(H...v.H.D$8H.
	0x0020 c8 48 8b 4c 24 20 48 89 41 01 48 8b 6c 24 10 48  .H.L$ H.A.H.l$.H
	0x0030 83 c4 18 c3 b8 08 00 00 00 e8 00 00 00 00 90     ...............
	rel 58+4 t=8 runtime.panicIndex+0
"".store_le_byte_2_idx STEXT nosplit size=80 args=0x28 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:501)	TEXT	"".store_le_byte_2_idx(SB), NOSPLIT|ABIInternal, $24-40
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:501)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:501)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:501)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:501)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:501)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:502)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:502)	LEAQ	1(AX), DX
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:502)	MOVQ	"".b+40(SP), CX
	0x001c 00028 (/usr/local/go/test/codegen/memcombine.go:502)	NOP
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:502)	CMPQ	DX, CX
	0x0023 00035 (/usr/local/go/test/codegen/memcombine.go:502)	JCC	71
	0x0025 00037 (/usr/local/go/test/codegen/memcombine.go:502)	CMPQ	AX, CX
	0x0028 00040 (/usr/local/go/test/codegen/memcombine.go:502)	JCC	66
	0x002a 00042 (/usr/local/go/test/codegen/memcombine.go:505)	MOVWLZX	"".val+64(SP), CX
	0x002f 00047 (/usr/local/go/test/codegen/memcombine.go:505)	MOVQ	"".b+32(SP), DX
	0x0034 00052 (/usr/local/go/test/codegen/memcombine.go:505)	MOVW	CX, (DX)(AX*1)
	0x0038 00056 (/usr/local/go/test/codegen/memcombine.go:506)	MOVQ	16(SP), BP
	0x003d 00061 (/usr/local/go/test/codegen/memcombine.go:506)	ADDQ	$24, SP
	0x0041 00065 (/usr/local/go/test/codegen/memcombine.go:506)	RET
	0x0042 00066 (/usr/local/go/test/codegen/memcombine.go:502)	PCDATA	$1, $1
	0x0042 00066 (/usr/local/go/test/codegen/memcombine.go:502)	CALL	runtime.panicIndex(SB)
	0x0047 00071 (/usr/local/go/test/codegen/memcombine.go:502)	MOVQ	DX, AX
	0x004a 00074 (/usr/local/go/test/codegen/memcombine.go:502)	CALL	runtime.panicIndex(SB)
	0x004f 00079 (/usr/local/go/test/codegen/memcombine.go:502)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 8d 50 01 48 8b 4c 24 28 0f 1f 40 00  D$8H.P.H.L$(..@.
	0x0020 48 39 ca 73 22 48 39 c8 73 18 0f b7 4c 24 40 48  H9.s"H9.s...L$@H
	0x0030 8b 54 24 20 66 89 0c 02 48 8b 6c 24 10 48 83 c4  .T$ f...H.l$.H..
	0x0040 18 c3 e8 00 00 00 00 48 89 d0 e8 00 00 00 00 90  .......H........
	rel 67+4 t=8 runtime.panicIndex+0
	rel 75+4 t=8 runtime.panicIndex+0
"".store_le_byte_2_idx_inv STEXT nosplit size=80 args=0x28 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:508)	TEXT	"".store_le_byte_2_idx_inv(SB), NOSPLIT|ABIInternal, $24-40
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:508)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:508)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:508)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:508)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:508)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:509)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:509)	LEAQ	1(AX), DX
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:509)	MOVQ	"".b+40(SP), CX
	0x001c 00028 (/usr/local/go/test/codegen/memcombine.go:509)	NOP
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:509)	CMPQ	DX, CX
	0x0023 00035 (/usr/local/go/test/codegen/memcombine.go:509)	JCC	71
	0x0025 00037 (/usr/local/go/test/codegen/memcombine.go:509)	CMPQ	AX, CX
	0x0028 00040 (/usr/local/go/test/codegen/memcombine.go:509)	JCC	66
	0x002a 00042 (/usr/local/go/test/codegen/memcombine.go:511)	MOVWLZX	"".val+64(SP), CX
	0x002f 00047 (/usr/local/go/test/codegen/memcombine.go:511)	MOVQ	"".b+32(SP), DX
	0x0034 00052 (/usr/local/go/test/codegen/memcombine.go:511)	MOVW	CX, (DX)(AX*1)
	0x0038 00056 (/usr/local/go/test/codegen/memcombine.go:512)	MOVQ	16(SP), BP
	0x003d 00061 (/usr/local/go/test/codegen/memcombine.go:512)	ADDQ	$24, SP
	0x0041 00065 (/usr/local/go/test/codegen/memcombine.go:512)	RET
	0x0042 00066 (/usr/local/go/test/codegen/memcombine.go:509)	PCDATA	$1, $1
	0x0042 00066 (/usr/local/go/test/codegen/memcombine.go:509)	CALL	runtime.panicIndex(SB)
	0x0047 00071 (/usr/local/go/test/codegen/memcombine.go:509)	MOVQ	DX, AX
	0x004a 00074 (/usr/local/go/test/codegen/memcombine.go:509)	CALL	runtime.panicIndex(SB)
	0x004f 00079 (/usr/local/go/test/codegen/memcombine.go:509)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 8d 50 01 48 8b 4c 24 28 0f 1f 40 00  D$8H.P.H.L$(..@.
	0x0020 48 39 ca 73 22 48 39 c8 73 18 0f b7 4c 24 40 48  H9.s"H9.s...L$@H
	0x0030 8b 54 24 20 66 89 0c 02 48 8b 6c 24 10 48 83 c4  .T$ f...H.l$.H..
	0x0040 18 c3 e8 00 00 00 00 48 89 d0 e8 00 00 00 00 90  .......H........
	rel 67+4 t=8 runtime.panicIndex+0
	rel 75+4 t=8 runtime.panicIndex+0
"".store_le_byte_4_idx STEXT nosplit size=134 args=0x28 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:514)	TEXT	"".store_le_byte_4_idx(SB), NOSPLIT|ABIInternal, $24-40
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:514)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:514)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:514)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:514)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:514)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:515)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:515)	LEAQ	1(AX), DX
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:515)	MOVQ	"".b+40(SP), CX
	0x001c 00028 (/usr/local/go/test/codegen/memcombine.go:515)	NOP
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:515)	CMPQ	DX, CX
	0x0023 00035 (/usr/local/go/test/codegen/memcombine.go:515)	JCC	122
	0x0025 00037 (/usr/local/go/test/codegen/memcombine.go:515)	LEAQ	2(AX), DX
	0x0029 00041 (/usr/local/go/test/codegen/memcombine.go:515)	CMPQ	DX, CX
	0x002c 00044 (/usr/local/go/test/codegen/memcombine.go:515)	JCC	114
	0x002e 00046 (/usr/local/go/test/codegen/memcombine.go:515)	LEAQ	3(AX), DX
	0x0032 00050 (/usr/local/go/test/codegen/memcombine.go:515)	CMPQ	DX, CX
	0x0035 00053 (/usr/local/go/test/codegen/memcombine.go:515)	JCC	106
	0x0037 00055 (/usr/local/go/test/codegen/memcombine.go:515)	CMPQ	AX, CX
	0x003a 00058 (/usr/local/go/test/codegen/memcombine.go:515)	JCC	101
	0x003c 00060 (/usr/local/go/test/codegen/memcombine.go:517)	MOVL	"".val+64(SP), CX
	0x0040 00064 (/usr/local/go/test/codegen/memcombine.go:517)	MOVL	CX, DX
	0x0042 00066 (/usr/local/go/test/codegen/memcombine.go:517)	SHRL	$24, CX
	0x0045 00069 (/usr/local/go/test/codegen/memcombine.go:517)	MOVQ	"".b+32(SP), BX
	0x004a 00074 (/usr/local/go/test/codegen/memcombine.go:517)	MOVB	CL, 3(AX)(BX*1)
	0x004e 00078 (/usr/local/go/test/codegen/memcombine.go:517)	MOVL	DX, CX
	0x0050 00080 (/usr/local/go/test/codegen/memcombine.go:517)	SHRL	$16, DX
	0x0053 00083 (/usr/local/go/test/codegen/memcombine.go:517)	MOVB	DL, 2(AX)(BX*1)
	0x0057 00087 (/usr/local/go/test/codegen/memcombine.go:517)	MOVW	CX, (BX)(AX*1)
	0x005b 00091 (/usr/local/go/test/codegen/memcombine.go:518)	MOVQ	16(SP), BP
	0x0060 00096 (/usr/local/go/test/codegen/memcombine.go:518)	ADDQ	$24, SP
	0x0064 00100 (/usr/local/go/test/codegen/memcombine.go:518)	RET
	0x0065 00101 (/usr/local/go/test/codegen/memcombine.go:515)	PCDATA	$1, $1
	0x0065 00101 (/usr/local/go/test/codegen/memcombine.go:515)	CALL	runtime.panicIndex(SB)
	0x006a 00106 (/usr/local/go/test/codegen/memcombine.go:515)	MOVQ	DX, AX
	0x006d 00109 (/usr/local/go/test/codegen/memcombine.go:515)	CALL	runtime.panicIndex(SB)
	0x0072 00114 (/usr/local/go/test/codegen/memcombine.go:515)	MOVQ	DX, AX
	0x0075 00117 (/usr/local/go/test/codegen/memcombine.go:515)	CALL	runtime.panicIndex(SB)
	0x007a 00122 (/usr/local/go/test/codegen/memcombine.go:515)	MOVQ	DX, AX
	0x007d 00125 (/usr/local/go/test/codegen/memcombine.go:515)	NOP
	0x0080 00128 (/usr/local/go/test/codegen/memcombine.go:515)	CALL	runtime.panicIndex(SB)
	0x0085 00133 (/usr/local/go/test/codegen/memcombine.go:515)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 8d 50 01 48 8b 4c 24 28 0f 1f 40 00  D$8H.P.H.L$(..@.
	0x0020 48 39 ca 73 55 48 8d 50 02 48 39 ca 73 44 48 8d  H9.sUH.P.H9.sDH.
	0x0030 50 03 48 39 ca 73 33 48 39 c8 73 29 8b 4c 24 40  P.H9.s3H9.s).L$@
	0x0040 89 ca c1 e9 18 48 8b 5c 24 20 88 4c 18 03 89 d1  .....H.\$ .L....
	0x0050 c1 ea 10 88 54 18 02 66 89 0c 03 48 8b 6c 24 10  ....T..f...H.l$.
	0x0060 48 83 c4 18 c3 e8 00 00 00 00 48 89 d0 e8 00 00  H.........H.....
	0x0070 00 00 48 89 d0 e8 00 00 00 00 48 89 d0 0f 1f 00  ..H.......H.....
	0x0080 e8 00 00 00 00 90                                ......
	rel 102+4 t=8 runtime.panicIndex+0
	rel 110+4 t=8 runtime.panicIndex+0
	rel 118+4 t=8 runtime.panicIndex+0
	rel 129+4 t=8 runtime.panicIndex+0
"".store_be_byte_2_idx STEXT nosplit size=84 args=0x28 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:520)	TEXT	"".store_be_byte_2_idx(SB), NOSPLIT|ABIInternal, $24-40
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:520)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:520)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:520)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:520)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:520)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:521)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:521)	LEAQ	1(AX), DX
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:521)	MOVQ	"".b+40(SP), CX
	0x001c 00028 (/usr/local/go/test/codegen/memcombine.go:521)	NOP
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:521)	CMPQ	DX, CX
	0x0023 00035 (/usr/local/go/test/codegen/memcombine.go:521)	JCC	75
	0x0025 00037 (/usr/local/go/test/codegen/memcombine.go:521)	CMPQ	AX, CX
	0x0028 00040 (/usr/local/go/test/codegen/memcombine.go:521)	JCC	70
	0x002a 00042 (/usr/local/go/test/codegen/memcombine.go:523)	MOVWLZX	"".val+64(SP), CX
	0x002f 00047 (/usr/local/go/test/codegen/memcombine.go:523)	ROLW	$8, CX
	0x0033 00051 (/usr/local/go/test/codegen/memcombine.go:523)	MOVQ	"".b+32(SP), DX
	0x0038 00056 (/usr/local/go/test/codegen/memcombine.go:523)	MOVW	CX, (DX)(AX*1)
	0x003c 00060 (/usr/local/go/test/codegen/memcombine.go:524)	MOVQ	16(SP), BP
	0x0041 00065 (/usr/local/go/test/codegen/memcombine.go:524)	ADDQ	$24, SP
	0x0045 00069 (/usr/local/go/test/codegen/memcombine.go:524)	RET
	0x0046 00070 (/usr/local/go/test/codegen/memcombine.go:521)	PCDATA	$1, $1
	0x0046 00070 (/usr/local/go/test/codegen/memcombine.go:521)	CALL	runtime.panicIndex(SB)
	0x004b 00075 (/usr/local/go/test/codegen/memcombine.go:521)	MOVQ	DX, AX
	0x004e 00078 (/usr/local/go/test/codegen/memcombine.go:521)	CALL	runtime.panicIndex(SB)
	0x0053 00083 (/usr/local/go/test/codegen/memcombine.go:521)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 8d 50 01 48 8b 4c 24 28 0f 1f 40 00  D$8H.P.H.L$(..@.
	0x0020 48 39 ca 73 26 48 39 c8 73 1c 0f b7 4c 24 40 66  H9.s&H9.s...L$@f
	0x0030 c1 c1 08 48 8b 54 24 20 66 89 0c 02 48 8b 6c 24  ...H.T$ f...H.l$
	0x0040 10 48 83 c4 18 c3 e8 00 00 00 00 48 89 d0 e8 00  .H.........H....
	0x0050 00 00 00 90                                      ....
	rel 71+4 t=8 runtime.panicIndex+0
	rel 79+4 t=8 runtime.panicIndex+0
"".store_be_byte_4_idx STEXT nosplit size=118 args=0x28 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:526)	TEXT	"".store_be_byte_4_idx(SB), NOSPLIT|ABIInternal, $24-40
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:526)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:526)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:526)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:526)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:526)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:527)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:527)	LEAQ	1(AX), DX
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:527)	MOVQ	"".b+40(SP), CX
	0x001c 00028 (/usr/local/go/test/codegen/memcombine.go:527)	NOP
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:527)	CMPQ	DX, CX
	0x0023 00035 (/usr/local/go/test/codegen/memcombine.go:527)	JCC	109
	0x0025 00037 (/usr/local/go/test/codegen/memcombine.go:527)	LEAQ	2(AX), DX
	0x0029 00041 (/usr/local/go/test/codegen/memcombine.go:527)	CMPQ	DX, CX
	0x002c 00044 (/usr/local/go/test/codegen/memcombine.go:527)	JCC	101
	0x002e 00046 (/usr/local/go/test/codegen/memcombine.go:527)	LEAQ	3(AX), DX
	0x0032 00050 (/usr/local/go/test/codegen/memcombine.go:527)	CMPQ	DX, CX
	0x0035 00053 (/usr/local/go/test/codegen/memcombine.go:527)	JCC	89
	0x0037 00055 (/usr/local/go/test/codegen/memcombine.go:527)	CMPQ	AX, CX
	0x003a 00058 (/usr/local/go/test/codegen/memcombine.go:527)	JCC	84
	0x003c 00060 (/usr/local/go/test/codegen/memcombine.go:529)	MOVL	"".val+64(SP), CX
	0x0040 00064 (/usr/local/go/test/codegen/memcombine.go:529)	BSWAPL	CX
	0x0042 00066 (/usr/local/go/test/codegen/memcombine.go:529)	MOVQ	"".b+32(SP), DX
	0x0047 00071 (/usr/local/go/test/codegen/memcombine.go:529)	MOVL	CX, (DX)(AX*1)
	0x004a 00074 (/usr/local/go/test/codegen/memcombine.go:530)	MOVQ	16(SP), BP
	0x004f 00079 (/usr/local/go/test/codegen/memcombine.go:530)	ADDQ	$24, SP
	0x0053 00083 (/usr/local/go/test/codegen/memcombine.go:530)	RET
	0x0054 00084 (/usr/local/go/test/codegen/memcombine.go:527)	PCDATA	$1, $1
	0x0054 00084 (/usr/local/go/test/codegen/memcombine.go:527)	CALL	runtime.panicIndex(SB)
	0x0059 00089 (/usr/local/go/test/codegen/memcombine.go:527)	MOVQ	DX, AX
	0x005c 00092 (/usr/local/go/test/codegen/memcombine.go:527)	NOP
	0x0060 00096 (/usr/local/go/test/codegen/memcombine.go:527)	CALL	runtime.panicIndex(SB)
	0x0065 00101 (/usr/local/go/test/codegen/memcombine.go:527)	MOVQ	DX, AX
	0x0068 00104 (/usr/local/go/test/codegen/memcombine.go:527)	CALL	runtime.panicIndex(SB)
	0x006d 00109 (/usr/local/go/test/codegen/memcombine.go:527)	MOVQ	DX, AX
	0x0070 00112 (/usr/local/go/test/codegen/memcombine.go:527)	CALL	runtime.panicIndex(SB)
	0x0075 00117 (/usr/local/go/test/codegen/memcombine.go:527)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 8d 50 01 48 8b 4c 24 28 0f 1f 40 00  D$8H.P.H.L$(..@.
	0x0020 48 39 ca 73 48 48 8d 50 02 48 39 ca 73 37 48 8d  H9.sHH.P.H9.s7H.
	0x0030 50 03 48 39 ca 73 22 48 39 c8 73 18 8b 4c 24 40  P.H9.s"H9.s..L$@
	0x0040 0f c9 48 8b 54 24 20 89 0c 02 48 8b 6c 24 10 48  ..H.T$ ...H.l$.H
	0x0050 83 c4 18 c3 e8 00 00 00 00 48 89 d0 0f 1f 40 00  .........H....@.
	0x0060 e8 00 00 00 00 48 89 d0 e8 00 00 00 00 48 89 d0  .....H.......H..
	0x0070 e8 00 00 00 00 90                                ......
	rel 85+4 t=8 runtime.panicIndex+0
	rel 97+4 t=8 runtime.panicIndex+0
	rel 105+4 t=8 runtime.panicIndex+0
	rel 113+4 t=8 runtime.panicIndex+0
"".store_be_byte_2_idx2 STEXT nosplit size=110 args=0x28 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:532)	TEXT	"".store_be_byte_2_idx2(SB), NOSPLIT|ABIInternal, $24-40
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:532)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:532)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:532)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:532)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:532)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:533)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:533)	LEAQ	(AX)(AX*1), DX
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:533)	LEAQ	1(DX), DX
	0x001b 00027 (/usr/local/go/test/codegen/memcombine.go:533)	MOVQ	"".b+40(SP), CX
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:533)	CMPQ	DX, CX
	0x0023 00035 (/usr/local/go/test/codegen/memcombine.go:533)	JCC	101
	0x0025 00037 (/usr/local/go/test/codegen/memcombine.go:533)	MOVQ	AX, DX
	0x0028 00040 (/usr/local/go/test/codegen/memcombine.go:533)	SHLQ	$1, AX
	0x002b 00043 (/usr/local/go/test/codegen/memcombine.go:533)	CMPQ	AX, CX
	0x002e 00046 (/usr/local/go/test/codegen/memcombine.go:533)	JCC	91
	0x0030 00048 (/usr/local/go/test/codegen/memcombine.go:535)	MOVQ	"".b+32(SP), AX
	0x0035 00053 (/usr/local/go/test/codegen/memcombine.go:535)	LEAQ	(AX)(DX*2), CX
	0x0039 00057 (/usr/local/go/test/codegen/memcombine.go:535)	MOVWLZX	"".val+64(SP), BX
	0x003e 00062 (/usr/local/go/test/codegen/memcombine.go:535)	MOVL	BX, SI
	0x0040 00064 (/usr/local/go/test/codegen/memcombine.go:535)	SHRW	$8, BX
	0x0044 00068 (/usr/local/go/test/codegen/memcombine.go:535)	MOVB	BL, (CX)
	0x0046 00070 (/usr/local/go/test/codegen/memcombine.go:535)	LEAQ	(AX)(DX*2), AX
	0x004a 00074 (/usr/local/go/test/codegen/memcombine.go:535)	LEAQ	1(AX), AX
	0x004e 00078 (/usr/local/go/test/codegen/memcombine.go:535)	MOVB	SIB, (AX)
	0x0051 00081 (/usr/local/go/test/codegen/memcombine.go:536)	MOVQ	16(SP), BP
	0x0056 00086 (/usr/local/go/test/codegen/memcombine.go:536)	ADDQ	$24, SP
	0x005a 00090 (/usr/local/go/test/codegen/memcombine.go:536)	RET
	0x005b 00091 (/usr/local/go/test/codegen/memcombine.go:533)	PCDATA	$1, $1
	0x005b 00091 (/usr/local/go/test/codegen/memcombine.go:533)	NOP
	0x0060 00096 (/usr/local/go/test/codegen/memcombine.go:533)	CALL	runtime.panicIndex(SB)
	0x0065 00101 (/usr/local/go/test/codegen/memcombine.go:533)	MOVQ	DX, AX
	0x0068 00104 (/usr/local/go/test/codegen/memcombine.go:533)	CALL	runtime.panicIndex(SB)
	0x006d 00109 (/usr/local/go/test/codegen/memcombine.go:533)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 8d 14 00 48 8d 52 01 48 8b 4c 24 28  D$8H...H.R.H.L$(
	0x0020 48 39 ca 73 40 48 89 c2 48 d1 e0 48 39 c8 73 2b  H9.s@H..H..H9.s+
	0x0030 48 8b 44 24 20 48 8d 0c 50 0f b7 5c 24 40 89 de  H.D$ H..P..\$@..
	0x0040 66 c1 eb 08 88 19 48 8d 04 50 48 8d 40 01 40 88  f.....H..PH.@.@.
	0x0050 30 48 8b 6c 24 10 48 83 c4 18 c3 0f 1f 44 00 00  0H.l$.H......D..
	0x0060 e8 00 00 00 00 48 89 d0 e8 00 00 00 00 90        .....H........
	rel 97+4 t=8 runtime.panicIndex+0
	rel 105+4 t=8 runtime.panicIndex+0
"".store_le_byte_2_idx2 STEXT nosplit size=110 args=0x28 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:538)	TEXT	"".store_le_byte_2_idx2(SB), NOSPLIT|ABIInternal, $24-40
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:538)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:538)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:538)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:538)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:538)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:539)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:539)	LEAQ	(AX)(AX*1), DX
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:539)	LEAQ	1(DX), DX
	0x001b 00027 (/usr/local/go/test/codegen/memcombine.go:539)	MOVQ	"".b+40(SP), CX
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:539)	CMPQ	DX, CX
	0x0023 00035 (/usr/local/go/test/codegen/memcombine.go:539)	JCC	101
	0x0025 00037 (/usr/local/go/test/codegen/memcombine.go:539)	MOVQ	AX, DX
	0x0028 00040 (/usr/local/go/test/codegen/memcombine.go:539)	SHLQ	$1, AX
	0x002b 00043 (/usr/local/go/test/codegen/memcombine.go:539)	CMPQ	AX, CX
	0x002e 00046 (/usr/local/go/test/codegen/memcombine.go:539)	JCC	91
	0x0030 00048 (/usr/local/go/test/codegen/memcombine.go:541)	MOVQ	"".b+32(SP), AX
	0x0035 00053 (/usr/local/go/test/codegen/memcombine.go:541)	LEAQ	(AX)(DX*2), CX
	0x0039 00057 (/usr/local/go/test/codegen/memcombine.go:541)	LEAQ	1(CX), CX
	0x003d 00061 (/usr/local/go/test/codegen/memcombine.go:541)	MOVWLZX	"".val+64(SP), BX
	0x0042 00066 (/usr/local/go/test/codegen/memcombine.go:541)	MOVL	BX, SI
	0x0044 00068 (/usr/local/go/test/codegen/memcombine.go:541)	SHRW	$8, BX
	0x0048 00072 (/usr/local/go/test/codegen/memcombine.go:541)	MOVB	BL, (CX)
	0x004a 00074 (/usr/local/go/test/codegen/memcombine.go:541)	LEAQ	(AX)(DX*2), AX
	0x004e 00078 (/usr/local/go/test/codegen/memcombine.go:541)	MOVB	SIB, (AX)
	0x0051 00081 (/usr/local/go/test/codegen/memcombine.go:542)	MOVQ	16(SP), BP
	0x0056 00086 (/usr/local/go/test/codegen/memcombine.go:542)	ADDQ	$24, SP
	0x005a 00090 (/usr/local/go/test/codegen/memcombine.go:542)	RET
	0x005b 00091 (/usr/local/go/test/codegen/memcombine.go:539)	PCDATA	$1, $1
	0x005b 00091 (/usr/local/go/test/codegen/memcombine.go:539)	NOP
	0x0060 00096 (/usr/local/go/test/codegen/memcombine.go:539)	CALL	runtime.panicIndex(SB)
	0x0065 00101 (/usr/local/go/test/codegen/memcombine.go:539)	MOVQ	DX, AX
	0x0068 00104 (/usr/local/go/test/codegen/memcombine.go:539)	CALL	runtime.panicIndex(SB)
	0x006d 00109 (/usr/local/go/test/codegen/memcombine.go:539)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 8d 14 00 48 8d 52 01 48 8b 4c 24 28  D$8H...H.R.H.L$(
	0x0020 48 39 ca 73 40 48 89 c2 48 d1 e0 48 39 c8 73 2b  H9.s@H..H..H9.s+
	0x0030 48 8b 44 24 20 48 8d 0c 50 48 8d 49 01 0f b7 5c  H.D$ H..PH.I...\
	0x0040 24 40 89 de 66 c1 eb 08 88 19 48 8d 04 50 40 88  $@..f.....H..P@.
	0x0050 30 48 8b 6c 24 10 48 83 c4 18 c3 0f 1f 44 00 00  0H.l$.H......D..
	0x0060 e8 00 00 00 00 48 89 d0 e8 00 00 00 00 90        .....H........
	rel 97+4 t=8 runtime.panicIndex+0
	rel 105+4 t=8 runtime.panicIndex+0
"".store_be_byte_4_idx4 STEXT nosplit size=166 args=0x28 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:544)	TEXT	"".store_be_byte_4_idx4(SB), NOSPLIT|ABIInternal, $24-40
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:544)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:544)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:544)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:544)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:544)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:545)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:545)	MOVQ	AX, DX
	0x0016 00022 (/usr/local/go/test/codegen/memcombine.go:545)	SHLQ	$2, AX
	0x001a 00026 (/usr/local/go/test/codegen/memcombine.go:545)	LEAQ	1(AX), BX
	0x001e 00030 (/usr/local/go/test/codegen/memcombine.go:545)	MOVQ	"".b+40(SP), CX
	0x0023 00035 (/usr/local/go/test/codegen/memcombine.go:545)	CMPQ	BX, CX
	0x0026 00038 (/usr/local/go/test/codegen/memcombine.go:545)	JCC	156
	0x0028 00040 (/usr/local/go/test/codegen/memcombine.go:545)	LEAQ	2(AX), BX
	0x002c 00044 (/usr/local/go/test/codegen/memcombine.go:545)	CMPQ	BX, CX
	0x002f 00047 (/usr/local/go/test/codegen/memcombine.go:545)	JCC	148
	0x0031 00049 (/usr/local/go/test/codegen/memcombine.go:545)	LEAQ	3(AX), BX
	0x0035 00053 (/usr/local/go/test/codegen/memcombine.go:545)	CMPQ	BX, CX
	0x0038 00056 (/usr/local/go/test/codegen/memcombine.go:545)	JCC	140
	0x003a 00058 (/usr/local/go/test/codegen/memcombine.go:545)	CMPQ	AX, CX
	0x003d 00061 (/usr/local/go/test/codegen/memcombine.go:545)	JCC	135
	0x003f 00063 (/usr/local/go/test/codegen/memcombine.go:547)	MOVQ	"".b+32(SP), AX
	0x0044 00068 (/usr/local/go/test/codegen/memcombine.go:547)	LEAQ	(AX)(DX*4), CX
	0x0048 00072 (/usr/local/go/test/codegen/memcombine.go:547)	MOVL	"".val+64(SP), BX
	0x004c 00076 (/usr/local/go/test/codegen/memcombine.go:547)	MOVL	BX, SI
	0x004e 00078 (/usr/local/go/test/codegen/memcombine.go:547)	SHRL	$24, BX
	0x0051 00081 (/usr/local/go/test/codegen/memcombine.go:547)	MOVB	BL, (CX)
	0x0053 00083 (/usr/local/go/test/codegen/memcombine.go:547)	LEAQ	(AX)(DX*4), CX
	0x0057 00087 (/usr/local/go/test/codegen/memcombine.go:547)	LEAQ	1(CX), CX
	0x005b 00091 (/usr/local/go/test/codegen/memcombine.go:547)	MOVL	SI, BX
	0x005d 00093 (/usr/local/go/test/codegen/memcombine.go:547)	SHRL	$16, SI
	0x0060 00096 (/usr/local/go/test/codegen/memcombine.go:547)	MOVB	SIB, (CX)
	0x0063 00099 (/usr/local/go/test/codegen/memcombine.go:547)	LEAQ	(AX)(DX*4), CX
	0x0067 00103 (/usr/local/go/test/codegen/memcombine.go:547)	LEAQ	2(CX), CX
	0x006b 00107 (/usr/local/go/test/codegen/memcombine.go:547)	MOVL	BX, SI
	0x006d 00109 (/usr/local/go/test/codegen/memcombine.go:547)	SHRL	$8, BX
	0x0070 00112 (/usr/local/go/test/codegen/memcombine.go:547)	MOVB	BL, (CX)
	0x0072 00114 (/usr/local/go/test/codegen/memcombine.go:547)	LEAQ	(AX)(DX*4), AX
	0x0076 00118 (/usr/local/go/test/codegen/memcombine.go:547)	LEAQ	3(AX), AX
	0x007a 00122 (/usr/local/go/test/codegen/memcombine.go:547)	MOVB	SIB, (AX)
	0x007d 00125 (/usr/local/go/test/codegen/memcombine.go:548)	MOVQ	16(SP), BP
	0x0082 00130 (/usr/local/go/test/codegen/memcombine.go:548)	ADDQ	$24, SP
	0x0086 00134 (/usr/local/go/test/codegen/memcombine.go:548)	RET
	0x0087 00135 (/usr/local/go/test/codegen/memcombine.go:545)	PCDATA	$1, $1
	0x0087 00135 (/usr/local/go/test/codegen/memcombine.go:545)	CALL	runtime.panicIndex(SB)
	0x008c 00140 (/usr/local/go/test/codegen/memcombine.go:545)	MOVQ	BX, AX
	0x008f 00143 (/usr/local/go/test/codegen/memcombine.go:545)	CALL	runtime.panicIndex(SB)
	0x0094 00148 (/usr/local/go/test/codegen/memcombine.go:545)	MOVQ	BX, AX
	0x0097 00151 (/usr/local/go/test/codegen/memcombine.go:545)	CALL	runtime.panicIndex(SB)
	0x009c 00156 (/usr/local/go/test/codegen/memcombine.go:545)	MOVQ	BX, AX
	0x009f 00159 (/usr/local/go/test/codegen/memcombine.go:545)	NOP
	0x00a0 00160 (/usr/local/go/test/codegen/memcombine.go:545)	CALL	runtime.panicIndex(SB)
	0x00a5 00165 (/usr/local/go/test/codegen/memcombine.go:545)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 89 c2 48 c1 e0 02 48 8d 58 01 48 8b  D$8H..H...H.X.H.
	0x0020 4c 24 28 48 39 cb 73 74 48 8d 58 02 48 39 cb 73  L$(H9.stH.X.H9.s
	0x0030 63 48 8d 58 03 48 39 cb 73 52 48 39 c8 73 48 48  cH.X.H9.sRH9.sHH
	0x0040 8b 44 24 20 48 8d 0c 90 8b 5c 24 40 89 de c1 eb  .D$ H....\$@....
	0x0050 18 88 19 48 8d 0c 90 48 8d 49 01 89 f3 c1 ee 10  ...H...H.I......
	0x0060 40 88 31 48 8d 0c 90 48 8d 49 02 89 de c1 eb 08  @.1H...H.I......
	0x0070 88 19 48 8d 04 90 48 8d 40 03 40 88 30 48 8b 6c  ..H...H.@.@.0H.l
	0x0080 24 10 48 83 c4 18 c3 e8 00 00 00 00 48 89 d8 e8  $.H.........H...
	0x0090 00 00 00 00 48 89 d8 e8 00 00 00 00 48 89 d8 90  ....H.......H...
	0x00a0 e8 00 00 00 00 90                                ......
	rel 136+4 t=8 runtime.panicIndex+0
	rel 144+4 t=8 runtime.panicIndex+0
	rel 152+4 t=8 runtime.panicIndex+0
	rel 161+4 t=8 runtime.panicIndex+0
"".store_le_byte_4_idx4_inv STEXT nosplit size=166 args=0x28 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:550)	TEXT	"".store_le_byte_4_idx4_inv(SB), NOSPLIT|ABIInternal, $24-40
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:550)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:550)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:550)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:550)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:550)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:551)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:551)	MOVQ	AX, DX
	0x0016 00022 (/usr/local/go/test/codegen/memcombine.go:551)	SHLQ	$2, AX
	0x001a 00026 (/usr/local/go/test/codegen/memcombine.go:551)	LEAQ	1(AX), BX
	0x001e 00030 (/usr/local/go/test/codegen/memcombine.go:551)	MOVQ	"".b+40(SP), CX
	0x0023 00035 (/usr/local/go/test/codegen/memcombine.go:551)	CMPQ	BX, CX
	0x0026 00038 (/usr/local/go/test/codegen/memcombine.go:551)	JCC	156
	0x0028 00040 (/usr/local/go/test/codegen/memcombine.go:551)	LEAQ	2(AX), BX
	0x002c 00044 (/usr/local/go/test/codegen/memcombine.go:551)	CMPQ	BX, CX
	0x002f 00047 (/usr/local/go/test/codegen/memcombine.go:551)	JCC	148
	0x0031 00049 (/usr/local/go/test/codegen/memcombine.go:551)	LEAQ	3(AX), BX
	0x0035 00053 (/usr/local/go/test/codegen/memcombine.go:551)	CMPQ	BX, CX
	0x0038 00056 (/usr/local/go/test/codegen/memcombine.go:551)	JCC	140
	0x003a 00058 (/usr/local/go/test/codegen/memcombine.go:551)	CMPQ	AX, CX
	0x003d 00061 (/usr/local/go/test/codegen/memcombine.go:551)	JCC	135
	0x003f 00063 (/usr/local/go/test/codegen/memcombine.go:553)	MOVQ	"".b+32(SP), AX
	0x0044 00068 (/usr/local/go/test/codegen/memcombine.go:553)	LEAQ	(AX)(DX*4), CX
	0x0048 00072 (/usr/local/go/test/codegen/memcombine.go:553)	LEAQ	3(CX), CX
	0x004c 00076 (/usr/local/go/test/codegen/memcombine.go:553)	MOVL	"".val+64(SP), BX
	0x0050 00080 (/usr/local/go/test/codegen/memcombine.go:553)	MOVL	BX, SI
	0x0052 00082 (/usr/local/go/test/codegen/memcombine.go:553)	SHRL	$24, BX
	0x0055 00085 (/usr/local/go/test/codegen/memcombine.go:553)	MOVB	BL, (CX)
	0x0057 00087 (/usr/local/go/test/codegen/memcombine.go:553)	LEAQ	(AX)(DX*4), CX
	0x005b 00091 (/usr/local/go/test/codegen/memcombine.go:553)	LEAQ	2(CX), CX
	0x005f 00095 (/usr/local/go/test/codegen/memcombine.go:553)	MOVL	SI, BX
	0x0061 00097 (/usr/local/go/test/codegen/memcombine.go:553)	SHRL	$16, SI
	0x0064 00100 (/usr/local/go/test/codegen/memcombine.go:553)	MOVB	SIB, (CX)
	0x0067 00103 (/usr/local/go/test/codegen/memcombine.go:553)	LEAQ	(AX)(DX*4), CX
	0x006b 00107 (/usr/local/go/test/codegen/memcombine.go:553)	LEAQ	1(CX), CX
	0x006f 00111 (/usr/local/go/test/codegen/memcombine.go:553)	MOVL	BX, SI
	0x0071 00113 (/usr/local/go/test/codegen/memcombine.go:553)	SHRL	$8, BX
	0x0074 00116 (/usr/local/go/test/codegen/memcombine.go:553)	MOVB	BL, (CX)
	0x0076 00118 (/usr/local/go/test/codegen/memcombine.go:553)	LEAQ	(AX)(DX*4), AX
	0x007a 00122 (/usr/local/go/test/codegen/memcombine.go:553)	MOVB	SIB, (AX)
	0x007d 00125 (/usr/local/go/test/codegen/memcombine.go:554)	MOVQ	16(SP), BP
	0x0082 00130 (/usr/local/go/test/codegen/memcombine.go:554)	ADDQ	$24, SP
	0x0086 00134 (/usr/local/go/test/codegen/memcombine.go:554)	RET
	0x0087 00135 (/usr/local/go/test/codegen/memcombine.go:551)	PCDATA	$1, $1
	0x0087 00135 (/usr/local/go/test/codegen/memcombine.go:551)	CALL	runtime.panicIndex(SB)
	0x008c 00140 (/usr/local/go/test/codegen/memcombine.go:551)	MOVQ	BX, AX
	0x008f 00143 (/usr/local/go/test/codegen/memcombine.go:551)	CALL	runtime.panicIndex(SB)
	0x0094 00148 (/usr/local/go/test/codegen/memcombine.go:551)	MOVQ	BX, AX
	0x0097 00151 (/usr/local/go/test/codegen/memcombine.go:551)	CALL	runtime.panicIndex(SB)
	0x009c 00156 (/usr/local/go/test/codegen/memcombine.go:551)	MOVQ	BX, AX
	0x009f 00159 (/usr/local/go/test/codegen/memcombine.go:551)	NOP
	0x00a0 00160 (/usr/local/go/test/codegen/memcombine.go:551)	CALL	runtime.panicIndex(SB)
	0x00a5 00165 (/usr/local/go/test/codegen/memcombine.go:551)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 89 c2 48 c1 e0 02 48 8d 58 01 48 8b  D$8H..H...H.X.H.
	0x0020 4c 24 28 48 39 cb 73 74 48 8d 58 02 48 39 cb 73  L$(H9.stH.X.H9.s
	0x0030 63 48 8d 58 03 48 39 cb 73 52 48 39 c8 73 48 48  cH.X.H9.sRH9.sHH
	0x0040 8b 44 24 20 48 8d 0c 90 48 8d 49 03 8b 5c 24 40  .D$ H...H.I..\$@
	0x0050 89 de c1 eb 18 88 19 48 8d 0c 90 48 8d 49 02 89  .......H...H.I..
	0x0060 f3 c1 ee 10 40 88 31 48 8d 0c 90 48 8d 49 01 89  ....@.1H...H.I..
	0x0070 de c1 eb 08 88 19 48 8d 04 90 40 88 30 48 8b 6c  ......H...@.0H.l
	0x0080 24 10 48 83 c4 18 c3 e8 00 00 00 00 48 89 d8 e8  $.H.........H...
	0x0090 00 00 00 00 48 89 d8 e8 00 00 00 00 48 89 d8 90  ....H.......H...
	0x00a0 e8 00 00 00 00 90                                ......
	rel 136+4 t=8 runtime.panicIndex+0
	rel 144+4 t=8 runtime.panicIndex+0
	rel 152+4 t=8 runtime.panicIndex+0
	rel 161+4 t=8 runtime.panicIndex+0
"".zero_byte_2 STEXT nosplit size=89 args=0x30 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:562)	TEXT	"".zero_byte_2(SB), NOSPLIT|ABIInternal, $24-48
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:562)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:562)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:562)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:562)	FUNCDATA	$0, gclocals·385b9fcf304627fb2d5e79f269b14707(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:562)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:564)	MOVQ	"".b2+64(SP), CX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:564)	CMPQ	CX, $1
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:564)	JLS	78
	0x0019 00025 (/usr/local/go/test/codegen/memcombine.go:564)	MOVQ	"".b1+40(SP), CX
	0x001e 00030 (/usr/local/go/test/codegen/memcombine.go:564)	NOP
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:564)	CMPQ	CX, $1
	0x0024 00036 (/usr/local/go/test/codegen/memcombine.go:564)	JLS	68
	0x0026 00038 (/usr/local/go/test/codegen/memcombine.go:568)	MOVQ	"".b1+32(SP), AX
	0x002b 00043 (/usr/local/go/test/codegen/memcombine.go:568)	MOVW	$0, (AX)
	0x0030 00048 (/usr/local/go/test/codegen/memcombine.go:572)	MOVQ	"".b2+56(SP), AX
	0x0035 00053 (/usr/local/go/test/codegen/memcombine.go:572)	MOVW	$0, (AX)
	0x003a 00058 (/usr/local/go/test/codegen/memcombine.go:573)	MOVQ	16(SP), BP
	0x003f 00063 (/usr/local/go/test/codegen/memcombine.go:573)	ADDQ	$24, SP
	0x0043 00067 (/usr/local/go/test/codegen/memcombine.go:573)	RET
	0x0044 00068 (/usr/local/go/test/codegen/memcombine.go:564)	MOVL	$1, AX
	0x0049 00073 (/usr/local/go/test/codegen/memcombine.go:564)	PCDATA	$1, $1
	0x0049 00073 (/usr/local/go/test/codegen/memcombine.go:564)	CALL	runtime.panicIndex(SB)
	0x004e 00078 (/usr/local/go/test/codegen/memcombine.go:564)	MOVL	$1, AX
	0x0053 00083 (/usr/local/go/test/codegen/memcombine.go:564)	CALL	runtime.panicIndex(SB)
	0x0058 00088 (/usr/local/go/test/codegen/memcombine.go:564)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 4c 24 40 48 83 f9 01 76 35 48 8b 4c 24 28 66 90  L$@H...v5H.L$(f.
	0x0020 48 83 f9 01 76 1e 48 8b 44 24 20 66 c7 00 00 00  H...v.H.D$ f....
	0x0030 48 8b 44 24 38 66 c7 00 00 00 48 8b 6c 24 10 48  H.D$8f....H.l$.H
	0x0040 83 c4 18 c3 b8 01 00 00 00 e8 00 00 00 00 b8 01  ................
	0x0050 00 00 00 e8 00 00 00 00 90                       .........
	rel 74+4 t=8 runtime.panicIndex+0
	rel 84+4 t=8 runtime.panicIndex+0
"".zero_byte_4 STEXT nosplit size=91 args=0x30 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:575)	TEXT	"".zero_byte_4(SB), NOSPLIT|ABIInternal, $24-48
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:575)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:575)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:575)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:575)	FUNCDATA	$0, gclocals·385b9fcf304627fb2d5e79f269b14707(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:575)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:576)	MOVQ	"".b2+64(SP), CX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:576)	CMPQ	CX, $3
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:576)	JLS	80
	0x0019 00025 (/usr/local/go/test/codegen/memcombine.go:576)	MOVQ	"".b1+40(SP), CX
	0x001e 00030 (/usr/local/go/test/codegen/memcombine.go:576)	NOP
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:576)	CMPQ	CX, $3
	0x0024 00036 (/usr/local/go/test/codegen/memcombine.go:576)	JLS	70
	0x0026 00038 (/usr/local/go/test/codegen/memcombine.go:580)	MOVQ	"".b1+32(SP), AX
	0x002b 00043 (/usr/local/go/test/codegen/memcombine.go:580)	MOVL	$0, (AX)
	0x0031 00049 (/usr/local/go/test/codegen/memcombine.go:582)	MOVQ	"".b2+56(SP), AX
	0x0036 00054 (/usr/local/go/test/codegen/memcombine.go:582)	MOVL	$0, (AX)
	0x003c 00060 (/usr/local/go/test/codegen/memcombine.go:583)	MOVQ	16(SP), BP
	0x0041 00065 (/usr/local/go/test/codegen/memcombine.go:583)	ADDQ	$24, SP
	0x0045 00069 (/usr/local/go/test/codegen/memcombine.go:583)	RET
	0x0046 00070 (/usr/local/go/test/codegen/memcombine.go:576)	MOVL	$3, AX
	0x004b 00075 (/usr/local/go/test/codegen/memcombine.go:576)	PCDATA	$1, $1
	0x004b 00075 (/usr/local/go/test/codegen/memcombine.go:576)	CALL	runtime.panicIndex(SB)
	0x0050 00080 (/usr/local/go/test/codegen/memcombine.go:576)	MOVL	$3, AX
	0x0055 00085 (/usr/local/go/test/codegen/memcombine.go:576)	CALL	runtime.panicIndex(SB)
	0x005a 00090 (/usr/local/go/test/codegen/memcombine.go:576)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 4c 24 40 48 83 f9 03 76 37 48 8b 4c 24 28 66 90  L$@H...v7H.L$(f.
	0x0020 48 83 f9 03 76 20 48 8b 44 24 20 c7 00 00 00 00  H...v H.D$ .....
	0x0030 00 48 8b 44 24 38 c7 00 00 00 00 00 48 8b 6c 24  .H.D$8......H.l$
	0x0040 10 48 83 c4 18 c3 b8 03 00 00 00 e8 00 00 00 00  .H..............
	0x0050 b8 03 00 00 00 e8 00 00 00 00 90                 ...........
	rel 76+4 t=8 runtime.panicIndex+0
	rel 86+4 t=8 runtime.panicIndex+0
"".zero_byte_8 STEXT nosplit size=58 args=0x18 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:585)	TEXT	"".zero_byte_8(SB), NOSPLIT|ABIInternal, $24-24
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:585)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:585)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:585)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:585)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:585)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:586)	MOVQ	"".b+40(SP), CX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:586)	CMPQ	CX, $7
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:586)	JLS	47
	0x0019 00025 (/usr/local/go/test/codegen/memcombine.go:588)	MOVQ	"".b+32(SP), AX
	0x001e 00030 (/usr/local/go/test/codegen/memcombine.go:588)	MOVQ	$0, (AX)
	0x0025 00037 (/usr/local/go/test/codegen/memcombine.go:589)	MOVQ	16(SP), BP
	0x002a 00042 (/usr/local/go/test/codegen/memcombine.go:589)	ADDQ	$24, SP
	0x002e 00046 (/usr/local/go/test/codegen/memcombine.go:589)	RET
	0x002f 00047 (/usr/local/go/test/codegen/memcombine.go:586)	MOVL	$7, AX
	0x0034 00052 (/usr/local/go/test/codegen/memcombine.go:586)	PCDATA	$1, $1
	0x0034 00052 (/usr/local/go/test/codegen/memcombine.go:586)	CALL	runtime.panicIndex(SB)
	0x0039 00057 (/usr/local/go/test/codegen/memcombine.go:586)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 4c 24 28 48 83 f9 07 76 16 48 8b 44 24 20 48 c7  L$(H...v.H.D$ H.
	0x0020 00 00 00 00 00 48 8b 6c 24 10 48 83 c4 18 c3 b8  .....H.l$.H.....
	0x0030 07 00 00 00 e8 00 00 00 00 90                    ..........
	rel 53+4 t=8 runtime.panicIndex+0
"".zero_byte_16 STEXT nosplit size=57 args=0x18 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:591)	TEXT	"".zero_byte_16(SB), NOSPLIT|ABIInternal, $24-24
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:591)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:591)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:591)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:591)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:591)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:592)	MOVQ	"".b+40(SP), CX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:592)	CMPQ	CX, $15
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:592)	JLS	46
	0x0019 00025 (/usr/local/go/test/codegen/memcombine.go:596)	XORPS	X0, X0
	0x001c 00028 (/usr/local/go/test/codegen/memcombine.go:596)	MOVQ	"".b+32(SP), AX
	0x0021 00033 (/usr/local/go/test/codegen/memcombine.go:596)	MOVUPS	X0, (AX)
	0x0024 00036 (/usr/local/go/test/codegen/memcombine.go:597)	MOVQ	16(SP), BP
	0x0029 00041 (/usr/local/go/test/codegen/memcombine.go:597)	ADDQ	$24, SP
	0x002d 00045 (/usr/local/go/test/codegen/memcombine.go:597)	RET
	0x002e 00046 (/usr/local/go/test/codegen/memcombine.go:592)	MOVL	$15, AX
	0x0033 00051 (/usr/local/go/test/codegen/memcombine.go:592)	PCDATA	$1, $1
	0x0033 00051 (/usr/local/go/test/codegen/memcombine.go:592)	CALL	runtime.panicIndex(SB)
	0x0038 00056 (/usr/local/go/test/codegen/memcombine.go:592)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 4c 24 28 48 83 f9 0f 76 15 0f 57 c0 48 8b 44 24  L$(H...v..W.H.D$
	0x0020 20 0f 11 00 48 8b 6c 24 10 48 83 c4 18 c3 b8 0f   ...H.l$.H......
	0x0030 00 00 00 e8 00 00 00 00 90                       .........
	rel 52+4 t=8 runtime.panicIndex+0
"".zero_byte_30 STEXT nosplit size=16 args=0x8 locals=0x0
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:599)	TEXT	"".zero_byte_30(SB), NOSPLIT|ABIInternal, $0-8
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:599)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:599)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:600)	XORPS	X0, X0
	0x0003 00003 (/usr/local/go/test/codegen/memcombine.go:600)	MOVQ	"".a+8(SP), AX
	0x0008 00008 (/usr/local/go/test/codegen/memcombine.go:600)	MOVUPS	X0, (AX)
	0x000b 00011 (/usr/local/go/test/codegen/memcombine.go:600)	MOVUPS	X0, 14(AX)
	0x000f 00015 (/usr/local/go/test/codegen/memcombine.go:601)	RET
	0x0000 0f 57 c0 48 8b 44 24 08 0f 11 00 0f 11 40 0e c3  .W.H.D$......@..
"".zero_byte_39 STEXT nosplit size=24 args=0x8 locals=0x0
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:603)	TEXT	"".zero_byte_39(SB), NOSPLIT|ABIInternal, $0-8
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:603)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:603)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:604)	MOVQ	"".a+8(SP), AX
	0x0005 00005 (/usr/local/go/test/codegen/memcombine.go:604)	MOVQ	$0, (AX)
	0x000c 00012 (/usr/local/go/test/codegen/memcombine.go:604)	XORPS	X0, X0
	0x000f 00015 (/usr/local/go/test/codegen/memcombine.go:604)	MOVUPS	X0, 7(AX)
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:604)	MOVUPS	X0, 23(AX)
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:605)	RET
	0x0000 48 8b 44 24 08 48 c7 00 00 00 00 00 0f 57 c0 0f  H.D$.H.......W..
	0x0010 11 40 07 0f 11 40 17 c3                          .@...@..
"".zero_byte_2_idx STEXT nosplit size=80 args=0x20 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:607)	TEXT	"".zero_byte_2_idx(SB), NOSPLIT|ABIInternal, $24-32
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:607)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:607)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:607)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:607)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:607)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:608)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:608)	LEAQ	1(AX), DX
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:608)	MOVQ	"".b+40(SP), CX
	0x001c 00028 (/usr/local/go/test/codegen/memcombine.go:608)	NOP
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:608)	CMPQ	DX, CX
	0x0023 00035 (/usr/local/go/test/codegen/memcombine.go:608)	JCC	71
	0x0025 00037 (/usr/local/go/test/codegen/memcombine.go:608)	CMPQ	AX, CX
	0x0028 00040 (/usr/local/go/test/codegen/memcombine.go:608)	JCC	66
	0x002a 00042 (/usr/local/go/test/codegen/memcombine.go:610)	MOVQ	"".b+32(SP), CX
	0x002f 00047 (/usr/local/go/test/codegen/memcombine.go:610)	MOVB	$0, (CX)(AX*1)
	0x0033 00051 (/usr/local/go/test/codegen/memcombine.go:610)	MOVB	$0, 1(AX)(CX*1)
	0x0038 00056 (/usr/local/go/test/codegen/memcombine.go:611)	MOVQ	16(SP), BP
	0x003d 00061 (/usr/local/go/test/codegen/memcombine.go:611)	ADDQ	$24, SP
	0x0041 00065 (/usr/local/go/test/codegen/memcombine.go:611)	RET
	0x0042 00066 (/usr/local/go/test/codegen/memcombine.go:608)	PCDATA	$1, $1
	0x0042 00066 (/usr/local/go/test/codegen/memcombine.go:608)	CALL	runtime.panicIndex(SB)
	0x0047 00071 (/usr/local/go/test/codegen/memcombine.go:608)	MOVQ	DX, AX
	0x004a 00074 (/usr/local/go/test/codegen/memcombine.go:608)	CALL	runtime.panicIndex(SB)
	0x004f 00079 (/usr/local/go/test/codegen/memcombine.go:608)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 8d 50 01 48 8b 4c 24 28 0f 1f 40 00  D$8H.P.H.L$(..@.
	0x0020 48 39 ca 73 22 48 39 c8 73 18 48 8b 4c 24 20 c6  H9.s"H9.s.H.L$ .
	0x0030 04 01 00 c6 44 08 01 00 48 8b 6c 24 10 48 83 c4  ....D...H.l$.H..
	0x0040 18 c3 e8 00 00 00 00 48 89 d0 e8 00 00 00 00 90  .......H........
	rel 67+4 t=8 runtime.panicIndex+0
	rel 75+4 t=8 runtime.panicIndex+0
"".zero_byte_2_idx2 STEXT nosplit size=95 args=0x20 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:613)	TEXT	"".zero_byte_2_idx2(SB), NOSPLIT|ABIInternal, $24-32
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:613)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:613)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:613)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:613)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:613)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:614)	MOVQ	"".idx+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:614)	LEAQ	(AX)(AX*1), DX
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:614)	LEAQ	1(DX), DX
	0x001b 00027 (/usr/local/go/test/codegen/memcombine.go:614)	MOVQ	"".b+40(SP), CX
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:614)	CMPQ	DX, CX
	0x0023 00035 (/usr/local/go/test/codegen/memcombine.go:614)	JCC	86
	0x0025 00037 (/usr/local/go/test/codegen/memcombine.go:614)	MOVQ	AX, DX
	0x0028 00040 (/usr/local/go/test/codegen/memcombine.go:614)	SHLQ	$1, AX
	0x002b 00043 (/usr/local/go/test/codegen/memcombine.go:614)	CMPQ	AX, CX
	0x002e 00046 (/usr/local/go/test/codegen/memcombine.go:614)	JCC	81
	0x0030 00048 (/usr/local/go/test/codegen/memcombine.go:616)	MOVQ	"".b+32(SP), AX
	0x0035 00053 (/usr/local/go/test/codegen/memcombine.go:616)	LEAQ	(AX)(DX*2), CX
	0x0039 00057 (/usr/local/go/test/codegen/memcombine.go:616)	MOVB	$0, (CX)
	0x003c 00060 (/usr/local/go/test/codegen/memcombine.go:616)	LEAQ	(AX)(DX*2), AX
	0x0040 00064 (/usr/local/go/test/codegen/memcombine.go:616)	LEAQ	1(AX), AX
	0x0044 00068 (/usr/local/go/test/codegen/memcombine.go:616)	MOVB	$0, (AX)
	0x0047 00071 (/usr/local/go/test/codegen/memcombine.go:617)	MOVQ	16(SP), BP
	0x004c 00076 (/usr/local/go/test/codegen/memcombine.go:617)	ADDQ	$24, SP
	0x0050 00080 (/usr/local/go/test/codegen/memcombine.go:617)	RET
	0x0051 00081 (/usr/local/go/test/codegen/memcombine.go:614)	PCDATA	$1, $1
	0x0051 00081 (/usr/local/go/test/codegen/memcombine.go:614)	CALL	runtime.panicIndex(SB)
	0x0056 00086 (/usr/local/go/test/codegen/memcombine.go:614)	MOVQ	DX, AX
	0x0059 00089 (/usr/local/go/test/codegen/memcombine.go:614)	CALL	runtime.panicIndex(SB)
	0x005e 00094 (/usr/local/go/test/codegen/memcombine.go:614)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 8d 14 00 48 8d 52 01 48 8b 4c 24 28  D$8H...H.R.H.L$(
	0x0020 48 39 ca 73 31 48 89 c2 48 d1 e0 48 39 c8 73 21  H9.s1H..H..H9.s!
	0x0030 48 8b 44 24 20 48 8d 0c 50 c6 01 00 48 8d 04 50  H.D$ H..P...H..P
	0x0040 48 8d 40 01 c6 00 00 48 8b 6c 24 10 48 83 c4 18  H.@....H.l$.H...
	0x0050 c3 e8 00 00 00 00 48 89 d0 e8 00 00 00 00 90     ......H........
	rel 82+4 t=8 runtime.panicIndex+0
	rel 90+4 t=8 runtime.panicIndex+0
"".zero_uint16_2 STEXT nosplit size=91 args=0x30 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:619)	TEXT	"".zero_uint16_2(SB), NOSPLIT|ABIInternal, $24-48
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:619)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:619)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:619)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:619)	FUNCDATA	$0, gclocals·385b9fcf304627fb2d5e79f269b14707(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:619)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:620)	MOVQ	"".h2+64(SP), CX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:620)	CMPQ	CX, $1
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:620)	JLS	80
	0x0019 00025 (/usr/local/go/test/codegen/memcombine.go:620)	MOVQ	"".h1+40(SP), CX
	0x001e 00030 (/usr/local/go/test/codegen/memcombine.go:620)	NOP
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:620)	CMPQ	CX, $1
	0x0024 00036 (/usr/local/go/test/codegen/memcombine.go:620)	JLS	70
	0x0026 00038 (/usr/local/go/test/codegen/memcombine.go:624)	MOVQ	"".h1+32(SP), AX
	0x002b 00043 (/usr/local/go/test/codegen/memcombine.go:624)	MOVL	$0, (AX)
	0x0031 00049 (/usr/local/go/test/codegen/memcombine.go:628)	MOVQ	"".h2+56(SP), AX
	0x0036 00054 (/usr/local/go/test/codegen/memcombine.go:628)	MOVL	$0, (AX)
	0x003c 00060 (/usr/local/go/test/codegen/memcombine.go:629)	MOVQ	16(SP), BP
	0x0041 00065 (/usr/local/go/test/codegen/memcombine.go:629)	ADDQ	$24, SP
	0x0045 00069 (/usr/local/go/test/codegen/memcombine.go:629)	RET
	0x0046 00070 (/usr/local/go/test/codegen/memcombine.go:620)	MOVL	$1, AX
	0x004b 00075 (/usr/local/go/test/codegen/memcombine.go:620)	PCDATA	$1, $1
	0x004b 00075 (/usr/local/go/test/codegen/memcombine.go:620)	CALL	runtime.panicIndex(SB)
	0x0050 00080 (/usr/local/go/test/codegen/memcombine.go:620)	MOVL	$1, AX
	0x0055 00085 (/usr/local/go/test/codegen/memcombine.go:620)	CALL	runtime.panicIndex(SB)
	0x005a 00090 (/usr/local/go/test/codegen/memcombine.go:620)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 4c 24 40 48 83 f9 01 76 37 48 8b 4c 24 28 66 90  L$@H...v7H.L$(f.
	0x0020 48 83 f9 01 76 20 48 8b 44 24 20 c7 00 00 00 00  H...v H.D$ .....
	0x0030 00 48 8b 44 24 38 c7 00 00 00 00 00 48 8b 6c 24  .H.D$8......H.l$
	0x0040 10 48 83 c4 18 c3 b8 01 00 00 00 e8 00 00 00 00  .H..............
	0x0050 b8 01 00 00 00 e8 00 00 00 00 90                 ...........
	rel 76+4 t=8 runtime.panicIndex+0
	rel 86+4 t=8 runtime.panicIndex+0
"".zero_uint16_4 STEXT nosplit size=93 args=0x30 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:631)	TEXT	"".zero_uint16_4(SB), NOSPLIT|ABIInternal, $24-48
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:631)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:631)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:631)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:631)	FUNCDATA	$0, gclocals·385b9fcf304627fb2d5e79f269b14707(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:631)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:632)	MOVQ	"".h2+64(SP), CX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:632)	CMPQ	CX, $3
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:632)	JLS	82
	0x0019 00025 (/usr/local/go/test/codegen/memcombine.go:632)	MOVQ	"".h1+40(SP), CX
	0x001e 00030 (/usr/local/go/test/codegen/memcombine.go:632)	NOP
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:632)	CMPQ	CX, $3
	0x0024 00036 (/usr/local/go/test/codegen/memcombine.go:632)	JLS	72
	0x0026 00038 (/usr/local/go/test/codegen/memcombine.go:635)	MOVQ	"".h1+32(SP), AX
	0x002b 00043 (/usr/local/go/test/codegen/memcombine.go:635)	MOVQ	$0, (AX)
	0x0032 00050 (/usr/local/go/test/codegen/memcombine.go:637)	MOVQ	"".h2+56(SP), AX
	0x0037 00055 (/usr/local/go/test/codegen/memcombine.go:637)	MOVQ	$0, (AX)
	0x003e 00062 (/usr/local/go/test/codegen/memcombine.go:638)	MOVQ	16(SP), BP
	0x0043 00067 (/usr/local/go/test/codegen/memcombine.go:638)	ADDQ	$24, SP
	0x0047 00071 (/usr/local/go/test/codegen/memcombine.go:638)	RET
	0x0048 00072 (/usr/local/go/test/codegen/memcombine.go:632)	MOVL	$3, AX
	0x004d 00077 (/usr/local/go/test/codegen/memcombine.go:632)	PCDATA	$1, $1
	0x004d 00077 (/usr/local/go/test/codegen/memcombine.go:632)	CALL	runtime.panicIndex(SB)
	0x0052 00082 (/usr/local/go/test/codegen/memcombine.go:632)	MOVL	$3, AX
	0x0057 00087 (/usr/local/go/test/codegen/memcombine.go:632)	CALL	runtime.panicIndex(SB)
	0x005c 00092 (/usr/local/go/test/codegen/memcombine.go:632)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 4c 24 40 48 83 f9 03 76 39 48 8b 4c 24 28 66 90  L$@H...v9H.L$(f.
	0x0020 48 83 f9 03 76 22 48 8b 44 24 20 48 c7 00 00 00  H...v"H.D$ H....
	0x0030 00 00 48 8b 44 24 38 48 c7 00 00 00 00 00 48 8b  ..H.D$8H......H.
	0x0040 6c 24 10 48 83 c4 18 c3 b8 03 00 00 00 e8 00 00  l$.H............
	0x0050 00 00 b8 03 00 00 00 e8 00 00 00 00 90           .............
	rel 78+4 t=8 runtime.panicIndex+0
	rel 88+4 t=8 runtime.panicIndex+0
"".zero_uint16_8 STEXT nosplit size=57 args=0x18 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:640)	TEXT	"".zero_uint16_8(SB), NOSPLIT|ABIInternal, $24-24
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:640)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:640)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:640)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:640)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:640)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:641)	MOVQ	"".h+40(SP), CX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:641)	CMPQ	CX, $7
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:641)	JLS	46
	0x0019 00025 (/usr/local/go/test/codegen/memcombine.go:643)	XORPS	X0, X0
	0x001c 00028 (/usr/local/go/test/codegen/memcombine.go:643)	MOVQ	"".h+32(SP), AX
	0x0021 00033 (/usr/local/go/test/codegen/memcombine.go:643)	MOVUPS	X0, (AX)
	0x0024 00036 (/usr/local/go/test/codegen/memcombine.go:644)	MOVQ	16(SP), BP
	0x0029 00041 (/usr/local/go/test/codegen/memcombine.go:644)	ADDQ	$24, SP
	0x002d 00045 (/usr/local/go/test/codegen/memcombine.go:644)	RET
	0x002e 00046 (/usr/local/go/test/codegen/memcombine.go:641)	MOVL	$7, AX
	0x0033 00051 (/usr/local/go/test/codegen/memcombine.go:641)	PCDATA	$1, $1
	0x0033 00051 (/usr/local/go/test/codegen/memcombine.go:641)	CALL	runtime.panicIndex(SB)
	0x0038 00056 (/usr/local/go/test/codegen/memcombine.go:641)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 4c 24 28 48 83 f9 07 76 15 0f 57 c0 48 8b 44 24  L$(H...v..W.H.D$
	0x0020 20 0f 11 00 48 8b 6c 24 10 48 83 c4 18 c3 b8 07   ...H.l$.H......
	0x0030 00 00 00 e8 00 00 00 00 90                       .........
	rel 52+4 t=8 runtime.panicIndex+0
"".zero_uint32_2 STEXT nosplit size=93 args=0x30 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:646)	TEXT	"".zero_uint32_2(SB), NOSPLIT|ABIInternal, $24-48
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:646)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:646)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:646)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:646)	FUNCDATA	$0, gclocals·385b9fcf304627fb2d5e79f269b14707(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:646)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:647)	MOVQ	"".w2+64(SP), CX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:647)	CMPQ	CX, $1
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:647)	JLS	82
	0x0019 00025 (/usr/local/go/test/codegen/memcombine.go:647)	MOVQ	"".w1+40(SP), CX
	0x001e 00030 (/usr/local/go/test/codegen/memcombine.go:647)	NOP
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:647)	CMPQ	CX, $1
	0x0024 00036 (/usr/local/go/test/codegen/memcombine.go:647)	JLS	72
	0x0026 00038 (/usr/local/go/test/codegen/memcombine.go:650)	MOVQ	"".w1+32(SP), AX
	0x002b 00043 (/usr/local/go/test/codegen/memcombine.go:650)	MOVQ	$0, (AX)
	0x0032 00050 (/usr/local/go/test/codegen/memcombine.go:653)	MOVQ	"".w2+56(SP), AX
	0x0037 00055 (/usr/local/go/test/codegen/memcombine.go:653)	MOVQ	$0, (AX)
	0x003e 00062 (/usr/local/go/test/codegen/memcombine.go:654)	MOVQ	16(SP), BP
	0x0043 00067 (/usr/local/go/test/codegen/memcombine.go:654)	ADDQ	$24, SP
	0x0047 00071 (/usr/local/go/test/codegen/memcombine.go:654)	RET
	0x0048 00072 (/usr/local/go/test/codegen/memcombine.go:647)	MOVL	$1, AX
	0x004d 00077 (/usr/local/go/test/codegen/memcombine.go:647)	PCDATA	$1, $1
	0x004d 00077 (/usr/local/go/test/codegen/memcombine.go:647)	CALL	runtime.panicIndex(SB)
	0x0052 00082 (/usr/local/go/test/codegen/memcombine.go:647)	MOVL	$1, AX
	0x0057 00087 (/usr/local/go/test/codegen/memcombine.go:647)	CALL	runtime.panicIndex(SB)
	0x005c 00092 (/usr/local/go/test/codegen/memcombine.go:647)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 4c 24 40 48 83 f9 01 76 39 48 8b 4c 24 28 66 90  L$@H...v9H.L$(f.
	0x0020 48 83 f9 01 76 22 48 8b 44 24 20 48 c7 00 00 00  H...v"H.D$ H....
	0x0030 00 00 48 8b 44 24 38 48 c7 00 00 00 00 00 48 8b  ..H.D$8H......H.
	0x0040 6c 24 10 48 83 c4 18 c3 b8 01 00 00 00 e8 00 00  l$.H............
	0x0050 00 00 b8 01 00 00 00 e8 00 00 00 00 90           .............
	rel 78+4 t=8 runtime.panicIndex+0
	rel 88+4 t=8 runtime.panicIndex+0
"".zero_uint32_4 STEXT nosplit size=102 args=0x30 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:656)	TEXT	"".zero_uint32_4(SB), NOSPLIT|ABIInternal, $24-48
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:656)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:656)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:656)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:656)	FUNCDATA	$0, gclocals·385b9fcf304627fb2d5e79f269b14707(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:656)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:657)	MOVQ	"".w2+64(SP), CX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:657)	CMPQ	CX, $3
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:657)	JLS	89
	0x0019 00025 (/usr/local/go/test/codegen/memcombine.go:657)	MOVQ	"".w1+40(SP), CX
	0x001e 00030 (/usr/local/go/test/codegen/memcombine.go:657)	NOP
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:657)	CMPQ	CX, $3
	0x0024 00036 (/usr/local/go/test/codegen/memcombine.go:657)	JLS	79
	0x0026 00038 (/usr/local/go/test/codegen/memcombine.go:658)	XORPS	X0, X0
	0x0029 00041 (/usr/local/go/test/codegen/memcombine.go:658)	MOVQ	"".w1+32(SP), AX
	0x002e 00046 (/usr/local/go/test/codegen/memcombine.go:658)	MOVUPS	X0, (AX)
	0x0031 00049 (/usr/local/go/test/codegen/memcombine.go:659)	MOVQ	"".w2+56(SP), AX
	0x0036 00054 (/usr/local/go/test/codegen/memcombine.go:659)	MOVQ	$0, 8(AX)
	0x003e 00062 (/usr/local/go/test/codegen/memcombine.go:659)	MOVQ	$0, (AX)
	0x0045 00069 (/usr/local/go/test/codegen/memcombine.go:660)	MOVQ	16(SP), BP
	0x004a 00074 (/usr/local/go/test/codegen/memcombine.go:660)	ADDQ	$24, SP
	0x004e 00078 (/usr/local/go/test/codegen/memcombine.go:660)	RET
	0x004f 00079 (/usr/local/go/test/codegen/memcombine.go:657)	MOVL	$3, AX
	0x0054 00084 (/usr/local/go/test/codegen/memcombine.go:657)	PCDATA	$1, $1
	0x0054 00084 (/usr/local/go/test/codegen/memcombine.go:657)	CALL	runtime.panicIndex(SB)
	0x0059 00089 (/usr/local/go/test/codegen/memcombine.go:657)	MOVL	$3, AX
	0x005e 00094 (/usr/local/go/test/codegen/memcombine.go:657)	NOP
	0x0060 00096 (/usr/local/go/test/codegen/memcombine.go:657)	CALL	runtime.panicIndex(SB)
	0x0065 00101 (/usr/local/go/test/codegen/memcombine.go:657)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 4c 24 40 48 83 f9 03 76 40 48 8b 4c 24 28 66 90  L$@H...v@H.L$(f.
	0x0020 48 83 f9 03 76 29 0f 57 c0 48 8b 44 24 20 0f 11  H...v).W.H.D$ ..
	0x0030 00 48 8b 44 24 38 48 c7 40 08 00 00 00 00 48 c7  .H.D$8H.@.....H.
	0x0040 00 00 00 00 00 48 8b 6c 24 10 48 83 c4 18 c3 b8  .....H.l$.H.....
	0x0050 03 00 00 00 e8 00 00 00 00 b8 03 00 00 00 66 90  ..............f.
	0x0060 e8 00 00 00 00 90                                ......
	rel 85+4 t=8 runtime.panicIndex+0
	rel 97+4 t=8 runtime.panicIndex+0
"".zero_uint64_2 STEXT nosplit size=102 args=0x30 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:662)	TEXT	"".zero_uint64_2(SB), NOSPLIT|ABIInternal, $24-48
	0x0000 00000 (/usr/local/go/test/codegen/memcombine.go:662)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/memcombine.go:662)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/memcombine.go:662)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:662)	FUNCDATA	$0, gclocals·385b9fcf304627fb2d5e79f269b14707(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:662)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/memcombine.go:663)	MOVQ	"".d2+64(SP), CX
	0x0013 00019 (/usr/local/go/test/codegen/memcombine.go:663)	CMPQ	CX, $1
	0x0017 00023 (/usr/local/go/test/codegen/memcombine.go:663)	JLS	89
	0x0019 00025 (/usr/local/go/test/codegen/memcombine.go:663)	MOVQ	"".d1+40(SP), CX
	0x001e 00030 (/usr/local/go/test/codegen/memcombine.go:663)	NOP
	0x0020 00032 (/usr/local/go/test/codegen/memcombine.go:663)	CMPQ	CX, $1
	0x0024 00036 (/usr/local/go/test/codegen/memcombine.go:663)	JLS	79
	0x0026 00038 (/usr/local/go/test/codegen/memcombine.go:664)	XORPS	X0, X0
	0x0029 00041 (/usr/local/go/test/codegen/memcombine.go:664)	MOVQ	"".d1+32(SP), AX
	0x002e 00046 (/usr/local/go/test/codegen/memcombine.go:664)	MOVUPS	X0, (AX)
	0x0031 00049 (/usr/local/go/test/codegen/memcombine.go:665)	MOVQ	"".d2+56(SP), AX
	0x0036 00054 (/usr/local/go/test/codegen/memcombine.go:665)	MOVQ	$0, 8(AX)
	0x003e 00062 (/usr/local/go/test/codegen/memcombine.go:665)	MOVQ	$0, (AX)
	0x0045 00069 (/usr/local/go/test/codegen/memcombine.go:666)	MOVQ	16(SP), BP
	0x004a 00074 (/usr/local/go/test/codegen/memcombine.go:666)	ADDQ	$24, SP
	0x004e 00078 (/usr/local/go/test/codegen/memcombine.go:666)	RET
	0x004f 00079 (/usr/local/go/test/codegen/memcombine.go:663)	MOVL	$1, AX
	0x0054 00084 (/usr/local/go/test/codegen/memcombine.go:663)	PCDATA	$1, $1
	0x0054 00084 (/usr/local/go/test/codegen/memcombine.go:663)	CALL	runtime.panicIndex(SB)
	0x0059 00089 (/usr/local/go/test/codegen/memcombine.go:663)	MOVL	$1, AX
	0x005e 00094 (/usr/local/go/test/codegen/memcombine.go:663)	NOP
	0x0060 00096 (/usr/local/go/test/codegen/memcombine.go:663)	CALL	runtime.panicIndex(SB)
	0x0065 00101 (/usr/local/go/test/codegen/memcombine.go:663)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 4c 24 40 48 83 f9 01 76 40 48 8b 4c 24 28 66 90  L$@H...v@H.L$(f.
	0x0020 48 83 f9 01 76 29 0f 57 c0 48 8b 44 24 20 0f 11  H...v).W.H.D$ ..
	0x0030 00 48 8b 44 24 38 48 c7 40 08 00 00 00 00 48 c7  .H.D$8H.@.....H.
	0x0040 00 00 00 00 00 48 8b 6c 24 10 48 83 c4 18 c3 b8  .....H.l$.H.....
	0x0050 01 00 00 00 e8 00 00 00 00 b8 01 00 00 00 66 90  ..............f.
	0x0060 e8 00 00 00 00 90                                ......
	rel 85+4 t=8 runtime.panicIndex+0
	rel 97+4 t=8 runtime.panicIndex+0
go.cuinfo.packagename.command-line-arguments SDWARFINFO dupok size=0
	0x0000 63 6f 64 65 67 65 6e                             codegen
go.info.encoding/binary.littleEndian.Uint64$abstract SDWARFINFO dupok size=48
	0x0000 04 65 6e 63 6f 64 69 6e 67 2f 62 69 6e 61 72 79  .encoding/binary
	0x0010 2e 6c 69 74 74 6c 65 45 6e 64 69 61 6e 2e 55 69  .littleEndian.Ui
	0x0020 6e 74 36 34 00 01 01 11 62 00 00 00 00 00 00 00  nt64....b.......
	rel 0+0 t=24 type.[]uint8+0
	rel 43+4 t=29 go.info.[]uint8+0
go.info.encoding/binary.littleEndian.Uint32$abstract SDWARFINFO dupok size=48
	0x0000 04 65 6e 63 6f 64 69 6e 67 2f 62 69 6e 61 72 79  .encoding/binary
	0x0010 2e 6c 69 74 74 6c 65 45 6e 64 69 61 6e 2e 55 69  .littleEndian.Ui
	0x0020 6e 74 33 32 00 01 01 11 62 00 00 00 00 00 00 00  nt32....b.......
	rel 0+0 t=24 type.[]uint8+0
	rel 43+4 t=29 go.info.[]uint8+0
go.info.encoding/binary.littleEndian.Uint16$abstract SDWARFINFO dupok size=48
	0x0000 04 65 6e 63 6f 64 69 6e 67 2f 62 69 6e 61 72 79  .encoding/binary
	0x0010 2e 6c 69 74 74 6c 65 45 6e 64 69 61 6e 2e 55 69  .littleEndian.Ui
	0x0020 6e 74 31 36 00 01 01 11 62 00 00 00 00 00 00 00  nt16....b.......
	rel 0+0 t=24 type.[]uint8+0
	rel 43+4 t=29 go.info.[]uint8+0
go.info.encoding/binary.bigEndian.Uint64$abstract SDWARFINFO dupok size=45
	0x0000 04 65 6e 63 6f 64 69 6e 67 2f 62 69 6e 61 72 79  .encoding/binary
	0x0010 2e 62 69 67 45 6e 64 69 61 6e 2e 55 69 6e 74 36  .bigEndian.Uint6
	0x0020 34 00 01 01 11 62 00 00 00 00 00 00 00           4....b.......
	rel 0+0 t=24 type.[]uint8+0
	rel 40+4 t=29 go.info.[]uint8+0
go.info.encoding/binary.bigEndian.Uint32$abstract SDWARFINFO dupok size=45
	0x0000 04 65 6e 63 6f 64 69 6e 67 2f 62 69 6e 61 72 79  .encoding/binary
	0x0010 2e 62 69 67 45 6e 64 69 61 6e 2e 55 69 6e 74 33  .bigEndian.Uint3
	0x0020 32 00 01 01 11 62 00 00 00 00 00 00 00           2....b.......
	rel 0+0 t=24 type.[]uint8+0
	rel 40+4 t=29 go.info.[]uint8+0
go.info.encoding/binary.bigEndian.Uint16$abstract SDWARFINFO dupok size=45
	0x0000 04 65 6e 63 6f 64 69 6e 67 2f 62 69 6e 61 72 79  .encoding/binary
	0x0010 2e 62 69 67 45 6e 64 69 61 6e 2e 55 69 6e 74 31  .bigEndian.Uint1
	0x0020 36 00 01 01 11 62 00 00 00 00 00 00 00           6....b.......
	rel 0+0 t=24 type.[]uint8+0
	rel 40+4 t=29 go.info.[]uint8+0
go.info.encoding/binary.littleEndian.PutUint64$abstract SDWARFINFO dupok size=59
	0x0000 04 65 6e 63 6f 64 69 6e 67 2f 62 69 6e 61 72 79  .encoding/binary
	0x0010 2e 6c 69 74 74 6c 65 45 6e 64 69 61 6e 2e 50 75  .littleEndian.Pu
	0x0020 74 55 69 6e 74 36 34 00 01 01 11 62 00 00 00 00  tUint64....b....
	0x0030 00 00 11 76 00 00 00 00 00 00 00                 ...v.......
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.uint64+0
	rel 46+4 t=29 go.info.[]uint8+0
	rel 54+4 t=29 go.info.uint64+0
go.info.encoding/binary.littleEndian.PutUint32$abstract SDWARFINFO dupok size=59
	0x0000 04 65 6e 63 6f 64 69 6e 67 2f 62 69 6e 61 72 79  .encoding/binary
	0x0010 2e 6c 69 74 74 6c 65 45 6e 64 69 61 6e 2e 50 75  .littleEndian.Pu
	0x0020 74 55 69 6e 74 33 32 00 01 01 11 62 00 00 00 00  tUint32....b....
	0x0030 00 00 11 76 00 00 00 00 00 00 00                 ...v.......
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.uint32+0
	rel 46+4 t=29 go.info.[]uint8+0
	rel 54+4 t=29 go.info.uint32+0
go.info.encoding/binary.littleEndian.PutUint16$abstract SDWARFINFO dupok size=59
	0x0000 04 65 6e 63 6f 64 69 6e 67 2f 62 69 6e 61 72 79  .encoding/binary
	0x0010 2e 6c 69 74 74 6c 65 45 6e 64 69 61 6e 2e 50 75  .littleEndian.Pu
	0x0020 74 55 69 6e 74 31 36 00 01 01 11 62 00 00 00 00  tUint16....b....
	0x0030 00 00 11 76 00 00 00 00 00 00 00                 ...v.......
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.uint16+0
	rel 46+4 t=29 go.info.[]uint8+0
	rel 54+4 t=29 go.info.uint16+0
go.info.encoding/binary.bigEndian.PutUint64$abstract SDWARFINFO dupok size=56
	0x0000 04 65 6e 63 6f 64 69 6e 67 2f 62 69 6e 61 72 79  .encoding/binary
	0x0010 2e 62 69 67 45 6e 64 69 61 6e 2e 50 75 74 55 69  .bigEndian.PutUi
	0x0020 6e 74 36 34 00 01 01 11 62 00 00 00 00 00 00 11  nt64....b.......
	0x0030 76 00 00 00 00 00 00 00                          v.......
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.uint64+0
	rel 43+4 t=29 go.info.[]uint8+0
	rel 51+4 t=29 go.info.uint64+0
go.info.encoding/binary.bigEndian.PutUint32$abstract SDWARFINFO dupok size=56
	0x0000 04 65 6e 63 6f 64 69 6e 67 2f 62 69 6e 61 72 79  .encoding/binary
	0x0010 2e 62 69 67 45 6e 64 69 61 6e 2e 50 75 74 55 69  .bigEndian.PutUi
	0x0020 6e 74 33 32 00 01 01 11 62 00 00 00 00 00 00 11  nt32....b.......
	0x0030 76 00 00 00 00 00 00 00                          v.......
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.uint32+0
	rel 43+4 t=29 go.info.[]uint8+0
	rel 51+4 t=29 go.info.uint32+0
go.info.encoding/binary.bigEndian.PutUint16$abstract SDWARFINFO dupok size=56
	0x0000 04 65 6e 63 6f 64 69 6e 67 2f 62 69 6e 61 72 79  .encoding/binary
	0x0010 2e 62 69 67 45 6e 64 69 61 6e 2e 50 75 74 55 69  .bigEndian.PutUi
	0x0020 6e 74 31 36 00 01 01 11 62 00 00 00 00 00 00 11  nt16....b.......
	0x0030 76 00 00 00 00 00 00 00                          v.......
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.uint16+0
	rel 43+4 t=29 go.info.[]uint8+0
	rel 51+4 t=29 go.info.uint16+0
""..inittask SNOPTRDATA size=40
	0x0000 00 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 encoding/binary..inittask+0
	rel 32+8 t=1 runtime..inittask+0
"".sink64 SNOPTRBSS size=8
"".sink32 SNOPTRBSS size=4
"".sink16 SNOPTRBSS size=2
runtime.memequal64·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 runtime.memequal64+0
runtime.gcbits.01 SRODATA dupok size=1
	0x0000 01                                               .
type..namedata.*[]*int- SRODATA dupok size=10
	0x0000 00 00 07 2a 5b 5d 2a 69 6e 74                    ...*[]*int
type.*[]*int SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 18 3d d8 bc 08 08 08 36 00 00 00 00 00 00 00 00  .=.....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]*int-+0
	rel 48+8 t=1 type.[]*int+0
type.[]*int SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 41 59 d9 aa 02 08 08 17 00 00 00 00 00 00 00 00  AY..............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]*int-+0
	rel 44+4 t=6 type.*[]*int+0
	rel 48+8 t=1 type.*int+0
runtime.memequal128·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 runtime.memequal128+0
runtime.gcbits.03 SRODATA dupok size=1
	0x0000 03                                               .
type..namedata.*[2]*int- SRODATA dupok size=11
	0x0000 00 00 08 2a 5b 32 5d 2a 69 6e 74                 ...*[2]*int
type.[2]*int SRODATA dupok size=72
	0x0000 10 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x0010 c1 41 e1 5b 0a 08 08 11 00 00 00 00 00 00 00 00  .A.[............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 02 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal128·f+0
	rel 32+8 t=1 runtime.gcbits.03+0
	rel 40+4 t=5 type..namedata.*[2]*int-+0
	rel 44+4 t=6 type.*[2]*int+0
	rel 48+8 t=1 type.*int+0
	rel 56+8 t=1 type.[]*int+0
type.*[2]*int SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 93 ed cb 51 08 08 08 36 00 00 00 00 00 00 00 00  ...Q...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[2]*int-+0
	rel 48+8 t=1 type.[2]*int+0
type..namedata.*[]uint8- SRODATA dupok size=11
	0x0000 00 00 08 2a 5b 5d 75 69 6e 74 38                 ...*[]uint8
type.*[]uint8 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 a5 8e d0 69 08 08 08 36 00 00 00 00 00 00 00 00  ...i...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]uint8-+0
	rel 48+8 t=1 type.[]uint8+0
type.[]uint8 SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 df 7e 2e 38 02 08 08 17 00 00 00 00 00 00 00 00  .~.8............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]uint8-+0
	rel 44+4 t=6 type.*[]uint8+0
	rel 48+8 t=1 type.uint8+0
type..eqfunc30 SRODATA dupok size=16
	0x0000 00 00 00 00 00 00 00 00 1e 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 runtime.memequal_varlen+0
runtime.gcbits. SRODATA dupok size=0
type..namedata.*[30]uint8- SRODATA dupok size=13
	0x0000 00 00 0a 2a 5b 33 30 5d 75 69 6e 74 38           ...*[30]uint8
type.[30]uint8 SRODATA dupok size=72
	0x0000 1e 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 5d 07 2f b9 0a 01 01 11 00 00 00 00 00 00 00 00  ]./.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 1e 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 type..eqfunc30+0
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type..namedata.*[30]uint8-+0
	rel 44+4 t=6 type.*[30]uint8+0
	rel 48+8 t=1 type.uint8+0
	rel 56+8 t=1 type.[]uint8+0
type.*[30]uint8 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 25 08 ac 82 08 08 08 36 00 00 00 00 00 00 00 00  %......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[30]uint8-+0
	rel 48+8 t=1 type.[30]uint8+0
type..eqfunc39 SRODATA dupok size=16
	0x0000 00 00 00 00 00 00 00 00 27 00 00 00 00 00 00 00  ........'.......
	rel 0+8 t=1 runtime.memequal_varlen+0
type..namedata.*[39]uint8- SRODATA dupok size=13
	0x0000 00 00 0a 2a 5b 33 39 5d 75 69 6e 74 38           ...*[39]uint8
type.[39]uint8 SRODATA dupok size=72
	0x0000 27 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  '...............
	0x0010 79 c7 33 18 0a 01 01 11 00 00 00 00 00 00 00 00  y.3.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 27 00 00 00 00 00 00 00                          '.......
	rel 24+8 t=1 type..eqfunc39+0
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type..namedata.*[39]uint8-+0
	rel 44+4 t=6 type.*[39]uint8+0
	rel 48+8 t=1 type.uint8+0
	rel 56+8 t=1 type.[]uint8+0
type.*[39]uint8 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 66 26 4c 14 08 08 08 36 00 00 00 00 00 00 00 00  f&L....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[39]uint8-+0
	rel 48+8 t=1 type.[39]uint8+0
type..eqfunc20 SRODATA dupok size=16
	0x0000 00 00 00 00 00 00 00 00 14 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 runtime.memequal_varlen+0
type..namedata.*[20]uint8- SRODATA dupok size=13
	0x0000 00 00 0a 2a 5b 32 30 5d 75 69 6e 74 38           ...*[20]uint8
type.*[20]uint8 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 31 95 1e 4d 08 08 08 36 00 00 00 00 00 00 00 00  1..M...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[20]uint8-+0
	rel 48+8 t=1 type.[20]uint8+0
type.[20]uint8 SRODATA dupok size=72
	0x0000 14 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 10 7e a8 85 0a 01 01 11 00 00 00 00 00 00 00 00  .~..............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 14 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 type..eqfunc20+0
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type..namedata.*[20]uint8-+0
	rel 44+4 t=6 type.*[20]uint8+0
	rel 48+8 t=1 type.uint8+0
	rel 56+8 t=1 type.[]uint8+0
type..namedata.*[]uint16- SRODATA dupok size=12
	0x0000 00 00 09 2a 5b 5d 75 69 6e 74 31 36              ...*[]uint16
type.*[]uint16 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 5f 18 a0 4c 08 08 08 36 00 00 00 00 00 00 00 00  _..L...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]uint16-+0
	rel 48+8 t=1 type.[]uint16+0
type.[]uint16 SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 e7 8e e3 20 02 08 08 17 00 00 00 00 00 00 00 00  ... ............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]uint16-+0
	rel 44+4 t=6 type.*[]uint16+0
	rel 48+8 t=1 type.uint16+0
type..namedata.*[]uint32- SRODATA dupok size=12
	0x0000 00 00 09 2a 5b 5d 75 69 6e 74 33 32              ...*[]uint32
type.*[]uint32 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 a9 25 88 3f 08 08 08 36 00 00 00 00 00 00 00 00  .%.?...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]uint32-+0
	rel 48+8 t=1 type.[]uint32+0
type.[]uint32 SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 d4 91 1d 1f 02 08 08 17 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]uint32-+0
	rel 44+4 t=6 type.*[]uint32+0
	rel 48+8 t=1 type.uint32+0
type..namedata.*[]uint64- SRODATA dupok size=12
	0x0000 00 00 09 2a 5b 5d 75 69 6e 74 36 34              ...*[]uint64
type.*[]uint64 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 2f 44 4b 5c 08 08 08 36 00 00 00 00 00 00 00 00  /DK\...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]uint64-+0
	rel 48+8 t=1 type.[]uint64+0
type.[]uint64 SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 3f b5 69 20 02 08 08 17 00 00 00 00 00 00 00 00  ?.i ............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]uint64-+0
	rel 44+4 t=6 type.*[]uint64+0
	rel 48+8 t=1 type.uint64+0
type..importpath.encoding/binary. SRODATA dupok size=18
	0x0000 00 00 0f 65 6e 63 6f 64 69 6e 67 2f 62 69 6e 61  ...encoding/bina
	0x0010 72 79                                            ry
type..importpath.runtime. SRODATA dupok size=10
	0x0000 00 00 07 72 75 6e 74 69 6d 65                    ...runtime
gclocals·1a65e721a2ccc325b382662e7ffee780 SRODATA dupok size=10
	0x0000 02 00 00 00 01 00 00 00 01 00                    ..........
gclocals·69c1753bd5f81501d95132d08af04464 SRODATA dupok size=8
	0x0000 02 00 00 00 00 00 00 00                          ........
gclocals·33cdeccccebe80329f1fdbee7f5874cb SRODATA dupok size=8
	0x0000 01 00 00 00 00 00 00 00                          ........
gclocals·dc9b0298814590ca3ffc3a889546fc8b SRODATA dupok size=10
	0x0000 02 00 00 00 02 00 00 00 03 00                    ..........
gclocals·fdbf1f5761f6d17e8ae3f0aaecb6a3c5 SRODATA dupok size=11
	0x0000 03 00 00 00 02 00 00 00 03 02 00                 ...........
gclocals·cebf9419b90e46477aa4e5920f8669ae SRODATA dupok size=11
	0x0000 03 00 00 00 02 00 00 00 00 03 00                 ...........
gclocals·385b9fcf304627fb2d5e79f269b14707 SRODATA dupok size=10
	0x0000 02 00 00 00 04 00 00 00 09 00                    ..........
aux for "".load_le64 SDWARFRANGE size=64
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 13 00 00 00 00 00 00 00 21 00 00 00 00 00 00 00  ........!.......
	0x0020 32 00 00 00 00 00 00 00 3d 00 00 00 00 00 00 00  2.......=.......
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 8+8 t=1 "".load_le64+0
aux for "".load_le64 SDWARFLOC size=114
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 3d 00 00 00 00 00 00 00  ........=.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 3d 00 00 00 00 00 00 00 07 00 9c 93 08 91 08  .=..............
	0x0060 93 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00                                            ..
	rel 8+8 t=1 "".load_le64+0
	rel 65+8 t=1 "".load_le64+0
aux for "".load_le64 SDWARFLINES size=38
	0x0000 04 02 0a 03 10 14 a0 04 03 03 2d 46 06 37 06 25  ..........-F.7.%
	0x0010 06 41 04 02 06 03 50 29 56 04 03 06 03 2c 78 06  .A....P)V....,x.
	0x0020 73 02 01 00 01 01                                s.....
aux for "".load_le64 SDWARFINFO size=95
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 6c 65 36  guments.load_le6
	0x0020 34 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  4...............
	0x0030 00 00 01 9c 02 00 00 00 01 10 62 00 00 16 00 00  ..........b.....
	0x0040 00 00 00 00 00 00 07 00 00 00 00 00 00 00 00 02  ................
	0x0050 00 00 00 1b 13 00 00 00 00 00 00 00 00 00 00     ...............
	rel 0+0 t=24 type.[]uint8+0
	rel 34+8 t=1 "".load_le64+0
	rel 42+8 t=1 "".load_le64+61
	rel 62+4 t=29 go.info.[]uint8+0
	rel 66+4 t=29 +0
	rel 71+4 t=29 go.info.encoding/binary.littleEndian.Uint64$abstract+0
	rel 75+4 t=29 +0
	rel 85+4 t=29 go.info.encoding/binary.littleEndian.Uint64$abstract+39
	rel 89+4 t=29 +57
aux for "".load_le64_idx SDWARFRANGE size=64
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 32 00 00 00 00 00 00 00 41 00 00 00 00 00 00 00  2.......A.......
	0x0020 52 00 00 00 00 00 00 00 60 00 00 00 00 00 00 00  R.......`.......
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 8+8 t=1 "".load_le64_idx+0
aux for "".load_le64_idx SDWARFLOC size=164
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 66 00 00 00 00 00 00 00  ........f.......
	0x0020 0b 00 9c 93 08 91 08 93 08 91 10 93 08 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 ff ff ff  ................
	0x0040 ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 66 00 00 00 00 00 00 00 02 00 91  .....f..........
	0x0060 18 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00  ................
	0x0080 00 20 00 00 00 00 00 00 00 60 00 00 00 00 00 00  . .......`......
	0x0090 00 01 00 52 00 00 00 00 00 00 00 00 00 00 00 00  ...R............
	0x00a0 00 00 00 00                                      ....
	rel 8+8 t=1 "".load_le64_idx+0
	rel 69+8 t=1 "".load_le64_idx+0
	rel 121+8 t=1 "".load_le64_idx+0
aux for "".load_le64_idx SDWARFLINES size=47
	0x0000 04 02 0a 03 18 14 a0 06 41 04 03 06 08 03 25 5a  ........A.....%Z
	0x0010 06 37 06 25 06 41 04 02 06 03 58 33 56 04 03 06  .7.%.A....X3V...
	0x0020 03 24 78 04 02 03 5a 97 06 41 02 01 00 01 01     .$x...Z..A.....
aux for "".load_le64_idx SDWARFINFO size=114
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 6c 65 36  guments.load_le6
	0x0020 34 5f 69 64 78 00 00 00 00 00 00 00 00 00 00 00  4_idx...........
	0x0030 00 00 00 00 00 00 01 9c 02 00 00 00 01 10 62 00  ..............b.
	0x0040 00 1e 00 00 00 00 00 00 00 00 10 69 64 78 00 00  ...........idx..
	0x0050 1e 00 00 00 00 00 00 00 00 07 00 00 00 00 00 00  ................
	0x0060 00 00 02 00 00 00 23 13 00 00 00 00 00 00 00 00  ......#.........
	0x0070 00 00                                            ..
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 38+8 t=1 "".load_le64_idx+0
	rel 46+8 t=1 "".load_le64_idx+102
	rel 66+4 t=29 go.info.[]uint8+0
	rel 70+4 t=29 +0
	rel 81+4 t=29 go.info.int+0
	rel 85+4 t=29 +61
	rel 90+4 t=29 go.info.encoding/binary.littleEndian.Uint64$abstract+0
	rel 94+4 t=29 +0
	rel 104+4 t=29 go.info.encoding/binary.littleEndian.Uint64$abstract+39
	rel 108+4 t=29 +113
aux for "".load_le32 SDWARFRANGE size=64
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 13 00 00 00 00 00 00 00 20 00 00 00 00 00 00 00  ........ .......
	0x0020 30 00 00 00 00 00 00 00 3b 00 00 00 00 00 00 00  0.......;.......
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 8+8 t=1 "".load_le32+0
aux for "".load_le32 SDWARFLOC size=114
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 3b 00 00 00 00 00 00 00  ........;.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 3b 00 00 00 00 00 00 00 07 00 9c 93 08 91 08  .;..............
	0x0060 93 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00                                            ..
	rel 8+8 t=1 "".load_le32+0
	rel 65+8 t=1 "".load_le32+0
aux for "".load_le32 SDWARFLINES size=40
	0x0000 04 02 0a 03 20 14 03 01 a0 04 03 03 0f 46 06 37  .... ........F.7
	0x0010 06 24 06 41 04 02 06 03 6f 1f 4c 04 03 06 03 0e  .$.A....o.L.....
	0x0020 78 06 73 02 01 00 01 01                          x.s.....
aux for "".load_le32 SDWARFINFO size=95
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 6c 65 33  guments.load_le3
	0x0020 32 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  2...............
	0x0030 00 00 01 9c 02 00 00 00 01 10 62 00 00 26 00 00  ..........b..&..
	0x0040 00 00 00 00 00 00 07 00 00 00 00 00 00 00 00 02  ................
	0x0050 00 00 00 2c 13 00 00 00 00 00 00 00 00 00 00     ...,...........
	rel 0+0 t=24 type.[]uint8+0
	rel 34+8 t=1 "".load_le32+0
	rel 42+8 t=1 "".load_le32+59
	rel 62+4 t=29 go.info.[]uint8+0
	rel 66+4 t=29 +0
	rel 71+4 t=29 go.info.encoding/binary.littleEndian.Uint32$abstract+0
	rel 75+4 t=29 +0
	rel 85+4 t=29 go.info.encoding/binary.littleEndian.Uint32$abstract+39
	rel 89+4 t=29 +57
aux for "".load_le32_idx SDWARFRANGE size=64
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 32 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00  2.......@.......
	0x0020 50 00 00 00 00 00 00 00 5a 00 00 00 00 00 00 00  P.......Z.......
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 8+8 t=1 "".load_le32_idx+0
aux for "".load_le32_idx SDWARFLOC size=164
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 60 00 00 00 00 00 00 00  ........`.......
	0x0020 0b 00 9c 93 08 91 08 93 08 91 10 93 08 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 ff ff ff  ................
	0x0040 ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 60 00 00 00 00 00 00 00 02 00 91  .....`..........
	0x0060 18 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00  ................
	0x0080 00 20 00 00 00 00 00 00 00 5a 00 00 00 00 00 00  . .......Z......
	0x0090 00 01 00 52 00 00 00 00 00 00 00 00 00 00 00 00  ...R............
	0x00a0 00 00 00 00                                      ....
	rel 8+8 t=1 "".load_le32_idx+0
	rel 69+8 t=1 "".load_le32_idx+0
	rel 121+8 t=1 "".load_le32_idx+0
aux for "".load_le32_idx SDWARFLINES size=49
	0x0000 04 02 0a 03 29 14 03 01 a0 06 41 04 03 06 08 03  ....).....A.....
	0x0010 06 5a 06 37 06 24 06 41 04 02 06 03 78 29 4c 04  .Z.7.$.A....x)L.
	0x0020 03 06 03 05 78 04 02 03 79 6f 06 41 02 01 00 01  ....x...yo.A....
	0x0030 01                                               .
aux for "".load_le32_idx SDWARFINFO size=114
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 6c 65 33  guments.load_le3
	0x0020 32 5f 69 64 78 00 00 00 00 00 00 00 00 00 00 00  2_idx...........
	0x0030 00 00 00 00 00 00 01 9c 02 00 00 00 01 10 62 00  ..............b.
	0x0040 00 2f 00 00 00 00 00 00 00 00 10 69 64 78 00 00  ./.........idx..
	0x0050 2f 00 00 00 00 00 00 00 00 07 00 00 00 00 00 00  /...............
	0x0060 00 00 02 00 00 00 35 13 00 00 00 00 00 00 00 00  ......5.........
	0x0070 00 00                                            ..
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 38+8 t=1 "".load_le32_idx+0
	rel 46+8 t=1 "".load_le32_idx+96
	rel 66+4 t=29 go.info.[]uint8+0
	rel 70+4 t=29 +0
	rel 81+4 t=29 go.info.int+0
	rel 85+4 t=29 +61
	rel 90+4 t=29 go.info.encoding/binary.littleEndian.Uint32$abstract+0
	rel 94+4 t=29 +0
	rel 104+4 t=29 go.info.encoding/binary.littleEndian.Uint32$abstract+39
	rel 108+4 t=29 +113
aux for "".load_le16 SDWARFRANGE size=64
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 13 00 00 00 00 00 00 00 21 00 00 00 00 00 00 00  ........!.......
	0x0020 32 00 00 00 00 00 00 00 3d 00 00 00 00 00 00 00  2.......=.......
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 8+8 t=1 "".load_le16+0
aux for "".load_le16 SDWARFLOC size=114
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 3d 00 00 00 00 00 00 00  ........=.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 3d 00 00 00 00 00 00 00 07 00 9c 93 08 91 08  .=..............
	0x0060 93 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00                                            ..
	rel 8+8 t=1 "".load_le16+0
	rel 65+8 t=1 "".load_le16+0
aux for "".load_le16 SDWARFLINES size=38
	0x0000 04 02 0a 03 32 14 a0 04 03 03 7c 3d 06 37 06 24  ....2.....|=.7.$
	0x0010 06 41 04 02 06 03 02 32 56 04 03 06 03 7b 6f 06  .A.....2V....{o.
	0x0020 73 02 01 00 01 01                                s.....
aux for "".load_le16 SDWARFINFO size=95
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 6c 65 31  guments.load_le1
	0x0020 36 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  6...............
	0x0030 00 00 01 9c 02 00 00 00 01 10 62 00 00 38 00 00  ..........b..8..
	0x0040 00 00 00 00 00 00 07 00 00 00 00 00 00 00 00 02  ................
	0x0050 00 00 00 3d 13 00 00 00 00 00 00 00 00 00 00     ...=...........
	rel 0+0 t=24 type.[]uint8+0
	rel 34+8 t=1 "".load_le16+0
	rel 42+8 t=1 "".load_le16+61
	rel 62+4 t=29 go.info.[]uint8+0
	rel 66+4 t=29 +0
	rel 71+4 t=29 go.info.encoding/binary.littleEndian.Uint16$abstract+0
	rel 75+4 t=29 +0
	rel 85+4 t=29 go.info.encoding/binary.littleEndian.Uint16$abstract+39
	rel 89+4 t=29 +57
aux for "".load_le16_idx SDWARFRANGE size=64
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 32 00 00 00 00 00 00 00 41 00 00 00 00 00 00 00  2.......A.......
	0x0020 52 00 00 00 00 00 00 00 60 00 00 00 00 00 00 00  R.......`.......
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 8+8 t=1 "".load_le16_idx+0
aux for "".load_le16_idx SDWARFLOC size=164
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 66 00 00 00 00 00 00 00  ........f.......
	0x0020 0b 00 9c 93 08 91 08 93 08 91 10 93 08 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 ff ff ff  ................
	0x0040 ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 66 00 00 00 00 00 00 00 02 00 91  .....f..........
	0x0060 18 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00  ................
	0x0080 00 20 00 00 00 00 00 00 00 60 00 00 00 00 00 00  . .......`......
	0x0090 00 01 00 52 00 00 00 00 00 00 00 00 00 00 00 00  ...R............
	0x00a0 00 00 00 00                                      ....
	rel 8+8 t=1 "".load_le16_idx+0
	rel 69+8 t=1 "".load_le16_idx+0
	rel 121+8 t=1 "".load_le16_idx+0
aux for "".load_le16_idx SDWARFLINES size=47
	0x0000 04 02 0a 03 3a 14 a0 06 41 04 03 06 08 03 74 51  ....:...A.....tQ
	0x0010 06 37 06 24 06 41 04 02 06 03 0a 3c 56 04 03 06  .7.$.A.....<V...
	0x0020 03 73 6f 04 02 03 0b a0 06 41 02 01 00 01 01     .so......A.....
aux for "".load_le16_idx SDWARFINFO size=114
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 6c 65 31  guments.load_le1
	0x0020 36 5f 69 64 78 00 00 00 00 00 00 00 00 00 00 00  6_idx...........
	0x0030 00 00 00 00 00 00 01 9c 02 00 00 00 01 10 62 00  ..............b.
	0x0040 00 40 00 00 00 00 00 00 00 00 10 69 64 78 00 00  .@.........idx..
	0x0050 40 00 00 00 00 00 00 00 00 07 00 00 00 00 00 00  @...............
	0x0060 00 00 02 00 00 00 45 13 00 00 00 00 00 00 00 00  ......E.........
	0x0070 00 00                                            ..
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 38+8 t=1 "".load_le16_idx+0
	rel 46+8 t=1 "".load_le16_idx+102
	rel 66+4 t=29 go.info.[]uint8+0
	rel 70+4 t=29 +0
	rel 81+4 t=29 go.info.int+0
	rel 85+4 t=29 +61
	rel 90+4 t=29 go.info.encoding/binary.littleEndian.Uint16$abstract+0
	rel 94+4 t=29 +0
	rel 104+4 t=29 go.info.encoding/binary.littleEndian.Uint16$abstract+39
	rel 108+4 t=29 +113
aux for "".load_be64 SDWARFRANGE size=64
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 13 00 00 00 00 00 00 00 24 00 00 00 00 00 00 00  ........$.......
	0x0020 35 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00  5.......@.......
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 8+8 t=1 "".load_be64+0
aux for "".load_be64 SDWARFLOC size=114
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00  ........@.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 40 00 00 00 00 00 00 00 07 00 9c 93 08 91 08  .@..............
	0x0060 93 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00                                            ..
	rel 8+8 t=1 "".load_be64+0
	rel 65+8 t=1 "".load_be64+0
aux for "".load_be64 SDWARFLINES size=39
	0x0000 04 02 0a 03 c2 00 14 a0 04 03 03 2b 46 06 37 06  ...........+F.7.
	0x0010 25 06 41 04 02 06 03 52 47 56 04 03 06 03 2a 78  %.A....RGV....*x
	0x0020 06 73 02 01 00 01 01                             .s.....
aux for "".load_be64 SDWARFINFO size=95
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 62 65 36  guments.load_be6
	0x0020 34 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  4...............
	0x0030 00 00 01 9c 02 00 00 00 01 10 62 00 00 48 00 00  ..........b..H..
	0x0040 00 00 00 00 00 00 07 00 00 00 00 00 00 00 00 02  ................
	0x0050 00 00 00 4d 13 00 00 00 00 00 00 00 00 00 00     ...M...........
	rel 0+0 t=24 type.[]uint8+0
	rel 34+8 t=1 "".load_be64+0
	rel 42+8 t=1 "".load_be64+64
	rel 62+4 t=29 go.info.[]uint8+0
	rel 66+4 t=29 +0
	rel 71+4 t=29 go.info.encoding/binary.bigEndian.Uint64$abstract+0
	rel 75+4 t=29 +0
	rel 85+4 t=29 go.info.encoding/binary.bigEndian.Uint64$abstract+36
	rel 89+4 t=29 +57
aux for "".load_be64_idx SDWARFRANGE size=64
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 32 00 00 00 00 00 00 00 44 00 00 00 00 00 00 00  2.......D.......
	0x0020 55 00 00 00 00 00 00 00 60 00 00 00 00 00 00 00  U.......`.......
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 8+8 t=1 "".load_be64_idx+0
aux for "".load_be64_idx SDWARFLOC size=164
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 66 00 00 00 00 00 00 00  ........f.......
	0x0020 0b 00 9c 93 08 91 08 93 08 91 10 93 08 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 ff ff ff  ................
	0x0040 ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 66 00 00 00 00 00 00 00 02 00 91  .....f..........
	0x0060 18 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00  ................
	0x0080 00 20 00 00 00 00 00 00 00 60 00 00 00 00 00 00  . .......`......
	0x0090 00 01 00 52 00 00 00 00 00 00 00 00 00 00 00 00  ...R............
	0x00a0 00 00 00 00                                      ....
	rel 8+8 t=1 "".load_be64_idx+0
	rel 69+8 t=1 "".load_be64_idx+0
	rel 121+8 t=1 "".load_be64_idx+0
aux for "".load_be64_idx SDWARFLINES size=48
	0x0000 04 02 0a 03 ca 00 14 a0 06 41 04 03 06 08 03 23  .........A.....#
	0x0010 5a 06 37 06 25 06 41 04 02 06 03 5a 51 56 04 03  Z.7.%.A....ZQV..
	0x0020 06 03 22 78 04 02 03 5c 79 06 41 02 01 00 01 01  .."x...\y.A.....
aux for "".load_be64_idx SDWARFINFO size=114
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 62 65 36  guments.load_be6
	0x0020 34 5f 69 64 78 00 00 00 00 00 00 00 00 00 00 00  4_idx...........
	0x0030 00 00 00 00 00 00 01 9c 02 00 00 00 01 10 62 00  ..............b.
	0x0040 00 50 00 00 00 00 00 00 00 00 10 69 64 78 00 00  .P.........idx..
	0x0050 50 00 00 00 00 00 00 00 00 07 00 00 00 00 00 00  P...............
	0x0060 00 00 02 00 00 00 55 13 00 00 00 00 00 00 00 00  ......U.........
	0x0070 00 00                                            ..
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 38+8 t=1 "".load_be64_idx+0
	rel 46+8 t=1 "".load_be64_idx+102
	rel 66+4 t=29 go.info.[]uint8+0
	rel 70+4 t=29 +0
	rel 81+4 t=29 go.info.int+0
	rel 85+4 t=29 +61
	rel 90+4 t=29 go.info.encoding/binary.bigEndian.Uint64$abstract+0
	rel 94+4 t=29 +0
	rel 104+4 t=29 go.info.encoding/binary.bigEndian.Uint64$abstract+36
	rel 108+4 t=29 +113
aux for "".load_be32 SDWARFRANGE size=64
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 13 00 00 00 00 00 00 00 22 00 00 00 00 00 00 00  ........".......
	0x0020 32 00 00 00 00 00 00 00 3d 00 00 00 00 00 00 00  2.......=.......
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 8+8 t=1 "".load_be32+0
aux for "".load_be32 SDWARFLOC size=114
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 3d 00 00 00 00 00 00 00  ........=.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 3d 00 00 00 00 00 00 00 07 00 9c 93 08 91 08  .=..............
	0x0060 93 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00                                            ..
	rel 8+8 t=1 "".load_be32+0
	rel 65+8 t=1 "".load_be32+0
aux for "".load_be32 SDWARFLINES size=39
	0x0000 04 02 0a 03 d2 00 14 a0 04 03 03 0e 46 06 37 06  ............F.7.
	0x0010 24 06 41 04 02 06 03 70 33 4c 04 03 06 03 0d 78  $.A....p3L.....x
	0x0020 06 73 02 01 00 01 01                             .s.....
aux for "".load_be32 SDWARFINFO size=95
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 62 65 33  guments.load_be3
	0x0020 32 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  2...............
	0x0030 00 00 01 9c 02 00 00 00 01 10 62 00 00 58 00 00  ..........b..X..
	0x0040 00 00 00 00 00 00 07 00 00 00 00 00 00 00 00 02  ................
	0x0050 00 00 00 5d 13 00 00 00 00 00 00 00 00 00 00     ...]...........
	rel 0+0 t=24 type.[]uint8+0
	rel 34+8 t=1 "".load_be32+0
	rel 42+8 t=1 "".load_be32+61
	rel 62+4 t=29 go.info.[]uint8+0
	rel 66+4 t=29 +0
	rel 71+4 t=29 go.info.encoding/binary.bigEndian.Uint32$abstract+0
	rel 75+4 t=29 +0
	rel 85+4 t=29 go.info.encoding/binary.bigEndian.Uint32$abstract+36
	rel 89+4 t=29 +57
aux for "".load_be32_idx SDWARFRANGE size=64
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 32 00 00 00 00 00 00 00 42 00 00 00 00 00 00 00  2.......B.......
	0x0020 52 00 00 00 00 00 00 00 60 00 00 00 00 00 00 00  R.......`.......
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 8+8 t=1 "".load_be32_idx+0
aux for "".load_be32_idx SDWARFLOC size=164
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 66 00 00 00 00 00 00 00  ........f.......
	0x0020 0b 00 9c 93 08 91 08 93 08 91 10 93 08 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 ff ff ff  ................
	0x0040 ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 66 00 00 00 00 00 00 00 02 00 91  .....f..........
	0x0060 18 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00  ................
	0x0080 00 20 00 00 00 00 00 00 00 60 00 00 00 00 00 00  . .......`......
	0x0090 00 01 00 52 00 00 00 00 00 00 00 00 00 00 00 00  ...R............
	0x00a0 00 00 00 00                                      ....
	rel 8+8 t=1 "".load_be32_idx+0
	rel 69+8 t=1 "".load_be32_idx+0
	rel 121+8 t=1 "".load_be32_idx+0
aux for "".load_be32_idx SDWARFLINES size=48
	0x0000 04 02 0a 03 da 00 14 a0 06 41 04 03 06 08 03 06  .........A......
	0x0010 5a 06 37 06 24 06 41 04 02 06 03 78 3d 4c 04 03  Z.7.$.A....x=L..
	0x0020 06 03 05 78 04 02 03 79 97 06 41 02 01 00 01 01  ...x...y..A.....
aux for "".load_be32_idx SDWARFINFO size=114
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 62 65 33  guments.load_be3
	0x0020 32 5f 69 64 78 00 00 00 00 00 00 00 00 00 00 00  2_idx...........
	0x0030 00 00 00 00 00 00 01 9c 02 00 00 00 01 10 62 00  ..............b.
	0x0040 00 60 00 00 00 00 00 00 00 00 10 69 64 78 00 00  .`.........idx..
	0x0050 60 00 00 00 00 00 00 00 00 07 00 00 00 00 00 00  `...............
	0x0060 00 00 02 00 00 00 65 13 00 00 00 00 00 00 00 00  ......e.........
	0x0070 00 00                                            ..
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 38+8 t=1 "".load_be32_idx+0
	rel 46+8 t=1 "".load_be32_idx+102
	rel 66+4 t=29 go.info.[]uint8+0
	rel 70+4 t=29 +0
	rel 81+4 t=29 go.info.int+0
	rel 85+4 t=29 +61
	rel 90+4 t=29 go.info.encoding/binary.bigEndian.Uint32$abstract+0
	rel 94+4 t=29 +0
	rel 104+4 t=29 go.info.encoding/binary.bigEndian.Uint32$abstract+36
	rel 108+4 t=29 +113
aux for "".load_be16 SDWARFRANGE size=64
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 13 00 00 00 00 00 00 00 25 00 00 00 00 00 00 00  ........%.......
	0x0020 36 00 00 00 00 00 00 00 46 00 00 00 00 00 00 00  6.......F.......
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 8+8 t=1 "".load_be16+0
aux for "".load_be16 SDWARFLOC size=114
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 46 00 00 00 00 00 00 00  ........F.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 46 00 00 00 00 00 00 00 07 00 9c 93 08 91 08  .F..............
	0x0060 93 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00                                            ..
	rel 8+8 t=1 "".load_be16+0
	rel 65+8 t=1 "".load_be16+0
aux for "".load_be16 SDWARFLINES size=39
	0x0000 04 02 0a 03 e2 00 14 a0 04 03 03 7c 3d 06 37 06  ...........|=.7.
	0x0010 24 06 41 04 02 06 03 02 5a 56 04 03 06 03 7b 6f  $.A.....ZV....{o
	0x0020 06 a5 02 01 00 01 01                             .......
aux for "".load_be16 SDWARFINFO size=95
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 62 65 31  guments.load_be1
	0x0020 36 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  6...............
	0x0030 00 00 01 9c 02 00 00 00 01 10 62 00 00 68 00 00  ..........b..h..
	0x0040 00 00 00 00 00 00 07 00 00 00 00 00 00 00 00 02  ................
	0x0050 00 00 00 6d 13 00 00 00 00 00 00 00 00 00 00     ...m...........
	rel 0+0 t=24 type.[]uint8+0
	rel 34+8 t=1 "".load_be16+0
	rel 42+8 t=1 "".load_be16+70
	rel 62+4 t=29 go.info.[]uint8+0
	rel 66+4 t=29 +0
	rel 71+4 t=29 go.info.encoding/binary.bigEndian.Uint16$abstract+0
	rel 75+4 t=29 +0
	rel 85+4 t=29 go.info.encoding/binary.bigEndian.Uint16$abstract+36
	rel 89+4 t=29 +57
aux for "".load_be16_idx SDWARFRANGE size=64
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 32 00 00 00 00 00 00 00 45 00 00 00 00 00 00 00  2.......E.......
	0x0020 56 00 00 00 00 00 00 00 65 00 00 00 00 00 00 00  V.......e.......
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 8+8 t=1 "".load_be16_idx+0
aux for "".load_be16_idx SDWARFLOC size=164
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 6b 00 00 00 00 00 00 00  ........k.......
	0x0020 0b 00 9c 93 08 91 08 93 08 91 10 93 08 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 ff ff ff  ................
	0x0040 ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 6b 00 00 00 00 00 00 00 02 00 91  .....k..........
	0x0060 18 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00  ................
	0x0080 00 20 00 00 00 00 00 00 00 65 00 00 00 00 00 00  . .......e......
	0x0090 00 01 00 52 00 00 00 00 00 00 00 00 00 00 00 00  ...R............
	0x00a0 00 00 00 00                                      ....
	rel 8+8 t=1 "".load_be16_idx+0
	rel 69+8 t=1 "".load_be16_idx+0
	rel 121+8 t=1 "".load_be16_idx+0
aux for "".load_be16_idx SDWARFLINES size=48
	0x0000 04 02 0a 03 ea 00 14 a0 06 41 04 03 06 08 03 74  .........A.....t
	0x0010 51 06 37 06 24 06 41 04 02 06 03 0a 64 56 04 03  Q.7.$.A.....dV..
	0x0020 06 03 73 6f 04 02 03 0b aa 06 41 02 01 00 01 01  ..so......A.....
aux for "".load_be16_idx SDWARFINFO size=114
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 62 65 31  guments.load_be1
	0x0020 36 5f 69 64 78 00 00 00 00 00 00 00 00 00 00 00  6_idx...........
	0x0030 00 00 00 00 00 00 01 9c 02 00 00 00 01 10 62 00  ..............b.
	0x0040 00 70 00 00 00 00 00 00 00 00 10 69 64 78 00 00  .p.........idx..
	0x0050 70 00 00 00 00 00 00 00 00 07 00 00 00 00 00 00  p...............
	0x0060 00 00 02 00 00 00 75 13 00 00 00 00 00 00 00 00  ......u.........
	0x0070 00 00                                            ..
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 38+8 t=1 "".load_be16_idx+0
	rel 46+8 t=1 "".load_be16_idx+107
	rel 66+4 t=29 go.info.[]uint8+0
	rel 70+4 t=29 +0
	rel 81+4 t=29 go.info.int+0
	rel 85+4 t=29 +61
	rel 90+4 t=29 go.info.encoding/binary.bigEndian.Uint16$abstract+0
	rel 94+4 t=29 +0
	rel 104+4 t=29 go.info.encoding/binary.bigEndian.Uint16$abstract+36
	rel 108+4 t=29 +113
aux for "".load_le_byte2_uint16 SDWARFLOC size=57
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 47 00 00 00 00 00 00 00  ........G.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=1 "".load_le_byte2_uint16+0
aux for "".load_le_byte2_uint16 SDWARFLINES size=22
	0x0000 04 02 0a 03 f2 00 14 a0 06 41 06 7d 06 41 06 08  .........A.}.A..
	0x0010 7d 02 01 00 01 01                                }.....
aux for "".load_le_byte2_uint16 SDWARFINFO size=94
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 6c 65 5f  guments.load_le_
	0x0020 62 79 74 65 32 5f 75 69 6e 74 31 36 00 00 00 00  byte2_uint16....
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 01 9c 02  ................
	0x0040 00 00 00 01 10 73 00 00 78 00 00 00 00 00 00 00  .....s..x.......
	0x0050 00 0f 7e 72 31 00 01 78 00 00 00 00 00 00        ..~r1..x......
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.uint16+0
	rel 45+8 t=1 "".load_le_byte2_uint16+0
	rel 53+8 t=1 "".load_le_byte2_uint16+71
	rel 73+4 t=29 go.info.[]uint8+0
	rel 77+4 t=29 +0
	rel 88+4 t=29 go.info.uint16+0
aux for "".load_le_byte2_uint16_inv SDWARFLOC size=57
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 3b 00 00 00 00 00 00 00  ........;.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=1 "".load_le_byte2_uint16_inv+0
aux for "".load_le_byte2_uint16_inv SDWARFLINES size=22
	0x0000 04 02 0a 03 fa 00 14 a0 06 41 06 4b 06 41 06 08  .........A.K.A..
	0x0010 37 02 01 00 01 01                                7.....
aux for "".load_le_byte2_uint16_inv SDWARFINFO size=100
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 6c 65 5f  guments.load_le_
	0x0020 62 79 74 65 32 5f 75 69 6e 74 31 36 5f 69 6e 76  byte2_uint16_inv
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 01 9c 02 00 00 00 01 10 73 00 00 80 01 00 00  .........s......
	0x0050 00 00 00 00 00 00 0f 7e 72 31 00 01 80 01 00 00  .......~r1......
	0x0060 00 00 00 00                                      ....
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.uint16+0
	rel 49+8 t=1 "".load_le_byte2_uint16_inv+0
	rel 57+8 t=1 "".load_le_byte2_uint16_inv+59
	rel 78+4 t=29 go.info.[]uint8+0
	rel 82+4 t=29 +0
	rel 94+4 t=29 go.info.uint16+0
aux for "".load_le_byte4_uint32 SDWARFLOC size=57
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 67 00 00 00 00 00 00 00  ........g.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=1 "".load_le_byte4_uint32+0
aux for "".load_le_byte4_uint32 SDWARFLINES size=24
	0x0000 04 02 0a 03 82 01 14 a0 06 41 06 08 19 06 41 06  .........A....A.
	0x0010 02 1d ff 02 01 00 01 01                          ........
aux for "".load_le_byte4_uint32 SDWARFINFO size=96
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 6c 65 5f  guments.load_le_
	0x0020 62 79 74 65 34 5f 75 69 6e 74 33 32 00 00 00 00  byte4_uint32....
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 01 9c 02  ................
	0x0040 00 00 00 01 10 73 00 00 88 01 00 00 00 00 00 00  .....s..........
	0x0050 00 00 0f 7e 72 31 00 01 88 01 00 00 00 00 00 00  ...~r1..........
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.uint32+0
	rel 45+8 t=1 "".load_le_byte4_uint32+0
	rel 53+8 t=1 "".load_le_byte4_uint32+103
	rel 74+4 t=29 go.info.[]uint8+0
	rel 78+4 t=29 +0
	rel 90+4 t=29 go.info.uint32+0
aux for "".load_le_byte4_uint32_inv SDWARFLOC size=57
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 55 00 00 00 00 00 00 00  ........U.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=1 "".load_le_byte4_uint32_inv+0
aux for "".load_le_byte4_uint32_inv SDWARFLINES size=23
	0x0000 04 02 0a 03 8a 01 14 9d 06 41 06 4b 06 41 06 02  .........A.K.A..
	0x0010 1e ff 02 01 00 01 01                             .......
aux for "".load_le_byte4_uint32_inv SDWARFINFO size=100
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 6c 65 5f  guments.load_le_
	0x0020 62 79 74 65 34 5f 75 69 6e 74 33 32 5f 69 6e 76  byte4_uint32_inv
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 01 9c 02 00 00 00 01 10 73 00 00 90 01 00 00  .........s......
	0x0050 00 00 00 00 00 00 0f 7e 72 31 00 01 90 01 00 00  .......~r1......
	0x0060 00 00 00 00                                      ....
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.uint32+0
	rel 49+8 t=1 "".load_le_byte4_uint32_inv+0
	rel 57+8 t=1 "".load_le_byte4_uint32_inv+85
	rel 78+4 t=29 go.info.[]uint8+0
	rel 82+4 t=29 +0
	rel 94+4 t=29 go.info.uint32+0
aux for "".load_le_byte8_uint64 SDWARFLOC size=57
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 b7 00 00 00 00 00 00 00  ................
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=1 "".load_le_byte8_uint64+0
aux for "".load_le_byte8_uint64 SDWARFLINES size=25
	0x0000 04 02 0a 03 8f 01 14 9f 06 41 06 02 21 ff 06 41  .........A..!..A
	0x0010 06 02 4d ff 02 01 00 01 01                       ..M......
aux for "".load_le_byte8_uint64 SDWARFINFO size=96
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 6c 65 5f  guments.load_le_
	0x0020 62 79 74 65 38 5f 75 69 6e 74 36 34 00 00 00 00  byte8_uint64....
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 01 9c 02  ................
	0x0040 00 00 00 01 10 73 00 00 95 01 00 00 00 00 00 00  .....s..........
	0x0050 00 00 0f 7e 72 31 00 01 95 01 00 00 00 00 00 00  ...~r1..........
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.uint64+0
	rel 45+8 t=1 "".load_le_byte8_uint64+0
	rel 53+8 t=1 "".load_le_byte8_uint64+183
	rel 74+4 t=29 go.info.[]uint8+0
	rel 78+4 t=29 +0
	rel 90+4 t=29 go.info.uint64+0
aux for "".load_le_byte8_uint64_inv SDWARFLOC size=57
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 8a 00 00 00 00 00 00 00  ................
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=1 "".load_le_byte8_uint64_inv+0
aux for "".load_le_byte8_uint64_inv SDWARFLINES size=23
	0x0000 04 02 0a 03 96 01 14 9d 06 41 06 4b 06 41 06 02  .........A.K.A..
	0x0010 53 ff 02 01 00 01 01                             S......
aux for "".load_le_byte8_uint64_inv SDWARFINFO size=100
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 6c 65 5f  guments.load_le_
	0x0020 62 79 74 65 38 5f 75 69 6e 74 36 34 5f 69 6e 76  byte8_uint64_inv
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 01 9c 02 00 00 00 01 10 73 00 00 9c 01 00 00  .........s......
	0x0050 00 00 00 00 00 00 0f 7e 72 31 00 01 9c 01 00 00  .......~r1......
	0x0060 00 00 00 00                                      ....
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.uint64+0
	rel 49+8 t=1 "".load_le_byte8_uint64_inv+0
	rel 57+8 t=1 "".load_le_byte8_uint64_inv+138
	rel 78+4 t=29 go.info.[]uint8+0
	rel 82+4 t=29 +0
	rel 94+4 t=29 go.info.uint64+0
aux for "".load_be_byte2_uint16 SDWARFLOC size=57
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 4d 00 00 00 00 00 00 00  ........M.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=1 "".load_be_byte2_uint16+0
aux for "".load_be_byte2_uint16 SDWARFLINES size=22
	0x0000 04 02 0a 03 9b 01 14 9f 06 41 06 7d 06 41 06 08  .........A.}.A..
	0x0010 b9 02 01 00 01 01                                ......
aux for "".load_be_byte2_uint16 SDWARFINFO size=96
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 62 65 5f  guments.load_be_
	0x0020 62 79 74 65 32 5f 75 69 6e 74 31 36 00 00 00 00  byte2_uint16....
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 01 9c 02  ................
	0x0040 00 00 00 01 10 73 00 00 a1 01 00 00 00 00 00 00  .....s..........
	0x0050 00 00 0f 7e 72 31 00 01 a1 01 00 00 00 00 00 00  ...~r1..........
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.uint16+0
	rel 45+8 t=1 "".load_be_byte2_uint16+0
	rel 53+8 t=1 "".load_be_byte2_uint16+77
	rel 74+4 t=29 go.info.[]uint8+0
	rel 78+4 t=29 +0
	rel 90+4 t=29 go.info.uint16+0
aux for "".load_be_byte2_uint16_inv SDWARFLOC size=57
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 3f 00 00 00 00 00 00 00  ........?.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=1 "".load_be_byte2_uint16_inv+0
aux for "".load_be_byte2_uint16_inv SDWARFLINES size=22
	0x0000 04 02 0a 03 a2 01 14 9f 06 41 06 4b 06 41 06 08  .........A.K.A..
	0x0010 5f 02 01 00 01 01                                _.....
aux for "".load_be_byte2_uint16_inv SDWARFINFO size=100
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 62 65 5f  guments.load_be_
	0x0020 62 79 74 65 32 5f 75 69 6e 74 31 36 5f 69 6e 76  byte2_uint16_inv
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 01 9c 02 00 00 00 01 10 73 00 00 a8 01 00 00  .........s......
	0x0050 00 00 00 00 00 00 0f 7e 72 31 00 01 a8 01 00 00  .......~r1......
	0x0060 00 00 00 00                                      ....
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.uint16+0
	rel 49+8 t=1 "".load_be_byte2_uint16_inv+0
	rel 57+8 t=1 "".load_be_byte2_uint16_inv+63
	rel 78+4 t=29 go.info.[]uint8+0
	rel 82+4 t=29 +0
	rel 94+4 t=29 go.info.uint16+0
aux for "".load_be_byte4_uint32 SDWARFLOC size=57
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 86 00 00 00 00 00 00 00  ................
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=1 "".load_be_byte4_uint32+0
aux for "".load_be_byte4_uint32 SDWARFLINES size=25
	0x0000 04 02 0a 03 a9 01 14 9d 06 41 06 02 1c ff 06 37  .........A.....7
	0x0010 06 02 22 ff 02 01 00 01 01                       .."......
aux for "".load_be_byte4_uint32 SDWARFINFO size=96
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 62 65 5f  guments.load_be_
	0x0020 62 79 74 65 34 5f 75 69 6e 74 33 32 00 00 00 00  byte4_uint32....
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 01 9c 02  ................
	0x0040 00 00 00 01 10 73 00 00 af 01 00 00 00 00 00 00  .....s..........
	0x0050 00 00 0f 7e 72 31 00 01 af 01 00 00 00 00 00 00  ...~r1..........
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.uint32+0
	rel 45+8 t=1 "".load_be_byte4_uint32+0
	rel 53+8 t=1 "".load_be_byte4_uint32+134
	rel 74+4 t=29 go.info.[]uint8+0
	rel 78+4 t=29 +0
	rel 90+4 t=29 go.info.uint32+0
aux for "".load_be_byte4_uint32_inv SDWARFLOC size=57
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 3b 00 00 00 00 00 00 00  ........;.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=1 "".load_be_byte4_uint32_inv+0
aux for "".load_be_byte4_uint32_inv SDWARFLINES size=22
	0x0000 04 02 0a 03 ae 01 14 9e 06 41 06 4b 06 41 06 08  .........A.K.A..
	0x0010 37 02 01 00 01 01                                7.....
aux for "".load_be_byte4_uint32_inv SDWARFINFO size=100
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 62 65 5f  guments.load_be_
	0x0020 62 79 74 65 34 5f 75 69 6e 74 33 32 5f 69 6e 76  byte4_uint32_inv
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 01 9c 02 00 00 00 01 10 73 00 00 b4 01 00 00  .........s......
	0x0050 00 00 00 00 00 00 0f 7e 72 31 00 01 b4 01 00 00  .......~r1......
	0x0060 00 00 00 00                                      ....
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.uint32+0
	rel 49+8 t=1 "".load_be_byte4_uint32_inv+0
	rel 57+8 t=1 "".load_be_byte4_uint32_inv+59
	rel 78+4 t=29 go.info.[]uint8+0
	rel 82+4 t=29 +0
	rel 94+4 t=29 go.info.uint32+0
aux for "".load_be_byte8_uint64 SDWARFLOC size=57
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 0d 01 00 00 00 00 00 00  ................
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=1 "".load_be_byte8_uint64+0
aux for "".load_be_byte8_uint64 SDWARFLINES size=25
	0x0000 04 02 0a 03 b4 01 14 9e 06 41 06 02 7d ff 06 37  .........A..}..7
	0x0010 06 02 48 ff 02 01 00 01 01                       ..H......
aux for "".load_be_byte8_uint64 SDWARFINFO size=96
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 62 65 5f  guments.load_be_
	0x0020 62 79 74 65 38 5f 75 69 6e 74 36 34 00 00 00 00  byte8_uint64....
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 01 9c 02  ................
	0x0040 00 00 00 01 10 73 00 00 ba 01 00 00 00 00 00 00  .....s..........
	0x0050 00 00 0f 7e 72 31 00 01 ba 01 00 00 00 00 00 00  ...~r1..........
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.uint64+0
	rel 45+8 t=1 "".load_be_byte8_uint64+0
	rel 53+8 t=1 "".load_be_byte8_uint64+269
	rel 74+4 t=29 go.info.[]uint8+0
	rel 78+4 t=29 +0
	rel 90+4 t=29 go.info.uint64+0
aux for "".load_be_byte8_uint64_inv SDWARFLOC size=57
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 3e 00 00 00 00 00 00 00  ........>.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=1 "".load_be_byte8_uint64_inv+0
aux for "".load_be_byte8_uint64_inv SDWARFLINES size=22
	0x0000 04 02 0a 03 ba 01 14 9f 06 41 06 4b 06 41 06 08  .........A.K.A..
	0x0010 55 02 01 00 01 01                                U.....
aux for "".load_be_byte8_uint64_inv SDWARFINFO size=100
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 62 65 5f  guments.load_be_
	0x0020 62 79 74 65 38 5f 75 69 6e 74 36 34 5f 69 6e 76  byte8_uint64_inv
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 01 9c 02 00 00 00 01 10 73 00 00 c0 01 00 00  .........s......
	0x0050 00 00 00 00 00 00 0f 7e 72 31 00 01 c0 01 00 00  .......~r1......
	0x0060 00 00 00 00                                      ....
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.uint64+0
	rel 49+8 t=1 "".load_be_byte8_uint64_inv+0
	rel 57+8 t=1 "".load_be_byte8_uint64_inv+62
	rel 78+4 t=29 go.info.[]uint8+0
	rel 82+4 t=29 +0
	rel 94+4 t=29 go.info.uint64+0
aux for "".load_le_byte2_uint16_idx SDWARFLOC size=109
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 4c 00 00 00 00 00 00 00  ........L.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 4c 00 00 00 00 00 00 00 02 00 91 18 00 00 00  .L..............
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00           .............
	rel 8+8 t=1 "".load_le_byte2_uint16_idx+0
	rel 65+8 t=1 "".load_le_byte2_uint16_idx+0
aux for "".load_le_byte2_uint16_idx SDWARFLINES size=22
	0x0000 04 02 0a 03 c1 01 14 9f 06 41 06 cd 06 41 06 08  .........A...A..
	0x0010 5f 02 01 00 01 01                                _.....
aux for "".load_le_byte2_uint16_idx SDWARFINFO size=116
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 6c 65 5f  guments.load_le_
	0x0020 62 79 74 65 32 5f 75 69 6e 74 31 36 5f 69 64 78  byte2_uint16_idx
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 01 9c 02 00 00 00 01 10 73 00 00 c7 01 00 00  .........s......
	0x0050 00 00 00 00 00 00 10 69 64 78 00 00 c7 01 00 00  .......idx......
	0x0060 00 00 00 00 00 00 0f 7e 72 32 00 01 c7 01 00 00  .......~r2......
	0x0070 00 00 00 00                                      ....
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 0+0 t=24 type.uint16+0
	rel 49+8 t=1 "".load_le_byte2_uint16_idx+0
	rel 57+8 t=1 "".load_le_byte2_uint16_idx+76
	rel 78+4 t=29 go.info.[]uint8+0
	rel 82+4 t=29 +0
	rel 94+4 t=29 go.info.int+0
	rel 98+4 t=29 +57
	rel 110+4 t=29 go.info.uint16+0
aux for "".load_le_byte2_uint16_idx_inv SDWARFLOC size=109
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 50 00 00 00 00 00 00 00  ........P.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 50 00 00 00 00 00 00 00 02 00 91 18 00 00 00  .P..............
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00           .............
	rel 8+8 t=1 "".load_le_byte2_uint16_idx_inv+0
	rel 65+8 t=1 "".load_le_byte2_uint16_idx_inv+0
aux for "".load_le_byte2_uint16_idx_inv SDWARFLINES size=22
	0x0000 04 02 0a 03 c8 01 14 9f 06 41 06 f5 06 41 06 08  .........A...A..
	0x0010 5f 02 01 00 01 01                                _.....
aux for "".load_le_byte2_uint16_idx_inv SDWARFINFO size=120
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 6c 65 5f  guments.load_le_
	0x0020 62 79 74 65 32 5f 75 69 6e 74 31 36 5f 69 64 78  byte2_uint16_idx
	0x0030 5f 69 6e 76 00 00 00 00 00 00 00 00 00 00 00 00  _inv............
	0x0040 00 00 00 00 00 01 9c 02 00 00 00 01 10 73 00 00  .............s..
	0x0050 ce 01 00 00 00 00 00 00 00 00 10 69 64 78 00 00  ...........idx..
	0x0060 ce 01 00 00 00 00 00 00 00 00 0f 7e 72 32 00 01  ...........~r2..
	0x0070 ce 01 00 00 00 00 00 00                          ........
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 0+0 t=24 type.uint16+0
	rel 53+8 t=1 "".load_le_byte2_uint16_idx_inv+0
	rel 61+8 t=1 "".load_le_byte2_uint16_idx_inv+80
	rel 82+4 t=29 go.info.[]uint8+0
	rel 86+4 t=29 +0
	rel 98+4 t=29 go.info.int+0
	rel 102+4 t=29 +57
	rel 114+4 t=29 go.info.uint16+0
aux for "".load_le_byte4_uint32_idx SDWARFLOC size=109
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 6c 00 00 00 00 00 00 00  ........l.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 6c 00 00 00 00 00 00 00 02 00 91 18 00 00 00  .l..............
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00           .............
	rel 8+8 t=1 "".load_le_byte4_uint32_idx+0
	rel 65+8 t=1 "".load_le_byte4_uint32_idx+0
aux for "".load_le_byte4_uint32_idx SDWARFLINES size=23
	0x0000 04 02 0a 03 cf 01 14 9e 06 41 06 08 91 06 41 06  .........A....A.
	0x0010 08 eb 02 01 00 01 01                             .......
aux for "".load_le_byte4_uint32_idx SDWARFINFO size=116
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 6c 65 5f  guments.load_le_
	0x0020 62 79 74 65 34 5f 75 69 6e 74 33 32 5f 69 64 78  byte4_uint32_idx
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 01 9c 02 00 00 00 01 10 73 00 00 d5 01 00 00  .........s......
	0x0050 00 00 00 00 00 00 10 69 64 78 00 00 d5 01 00 00  .......idx......
	0x0060 00 00 00 00 00 00 0f 7e 72 32 00 01 d5 01 00 00  .......~r2......
	0x0070 00 00 00 00                                      ....
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 0+0 t=24 type.uint32+0
	rel 49+8 t=1 "".load_le_byte4_uint32_idx+0
	rel 57+8 t=1 "".load_le_byte4_uint32_idx+108
	rel 78+4 t=29 go.info.[]uint8+0
	rel 82+4 t=29 +0
	rel 94+4 t=29 go.info.int+0
	rel 98+4 t=29 +57
	rel 110+4 t=29 go.info.uint32+0
aux for "".load_le_byte4_uint32_idx_inv SDWARFLOC size=109
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 8f 00 00 00 00 00 00 00  ................
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 8f 00 00 00 00 00 00 00 02 00 91 18 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00           .............
	rel 8+8 t=1 "".load_le_byte4_uint32_idx_inv+0
	rel 65+8 t=1 "".load_le_byte4_uint32_idx_inv+0
aux for "".load_le_byte4_uint32_idx_inv SDWARFLINES size=24
	0x0000 04 02 0a 03 d5 01 14 9d 06 41 06 02 32 ff 06 37  .........A..2..7
	0x0010 06 08 e1 02 01 00 01 01                          ........
aux for "".load_le_byte4_uint32_idx_inv SDWARFINFO size=120
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 6c 65 5f  guments.load_le_
	0x0020 62 79 74 65 34 5f 75 69 6e 74 33 32 5f 69 64 78  byte4_uint32_idx
	0x0030 5f 69 6e 76 00 00 00 00 00 00 00 00 00 00 00 00  _inv............
	0x0040 00 00 00 00 00 01 9c 02 00 00 00 01 10 73 00 00  .............s..
	0x0050 db 01 00 00 00 00 00 00 00 00 10 69 64 78 00 00  ...........idx..
	0x0060 db 01 00 00 00 00 00 00 00 00 0f 7e 72 32 00 01  ...........~r2..
	0x0070 db 01 00 00 00 00 00 00                          ........
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 0+0 t=24 type.uint32+0
	rel 53+8 t=1 "".load_le_byte4_uint32_idx_inv+0
	rel 61+8 t=1 "".load_le_byte4_uint32_idx_inv+143
	rel 82+4 t=29 go.info.[]uint8+0
	rel 86+4 t=29 +0
	rel 98+4 t=29 go.info.int+0
	rel 102+4 t=29 +57
	rel 114+4 t=29 go.info.uint32+0
aux for "".load_le_byte8_uint64_idx SDWARFLOC size=109
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 c6 00 00 00 00 00 00 00  ................
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 c6 00 00 00 00 00 00 00 02 00 91 18 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00           .............
	rel 8+8 t=1 "".load_le_byte8_uint64_idx+0
	rel 65+8 t=1 "".load_le_byte8_uint64_idx+0
aux for "".load_le_byte8_uint64_idx SDWARFLINES size=25
	0x0000 04 02 0a 03 da 01 14 9e 06 41 06 02 43 ff 06 41  .........A..C..A
	0x0010 06 02 3a ff 02 01 00 01 01                       ..:......
aux for "".load_le_byte8_uint64_idx SDWARFINFO size=116
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 6c 65 5f  guments.load_le_
	0x0020 62 79 74 65 38 5f 75 69 6e 74 36 34 5f 69 64 78  byte8_uint64_idx
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 01 9c 02 00 00 00 01 10 73 00 00 e0 01 00 00  .........s......
	0x0050 00 00 00 00 00 00 10 69 64 78 00 00 e0 01 00 00  .......idx......
	0x0060 00 00 00 00 00 00 0f 7e 72 32 00 01 e0 01 00 00  .......~r2......
	0x0070 00 00 00 00                                      ....
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 0+0 t=24 type.uint64+0
	rel 49+8 t=1 "".load_le_byte8_uint64_idx+0
	rel 57+8 t=1 "".load_le_byte8_uint64_idx+198
	rel 78+4 t=29 go.info.[]uint8+0
	rel 82+4 t=29 +0
	rel 94+4 t=29 go.info.int+0
	rel 98+4 t=29 +57
	rel 110+4 t=29 go.info.uint64+0
aux for "".load_le_byte8_uint64_idx_inv SDWARFLOC size=109
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 2e 01 00 00 00 00 00 00  ................
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 2e 01 00 00 00 00 00 00 02 00 91 18 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00           .............
	rel 8+8 t=1 "".load_le_byte8_uint64_idx_inv+0
	rel 65+8 t=1 "".load_le_byte8_uint64_idx_inv+0
aux for "".load_le_byte8_uint64_idx_inv SDWARFLINES size=26
	0x0000 04 02 0a 03 e0 01 14 9d 06 41 06 02 ae 01 ff 06  .........A......
	0x0010 37 06 02 38 ff 02 01 00 01 01                    7..8......
aux for "".load_le_byte8_uint64_idx_inv SDWARFINFO size=120
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 6c 65 5f  guments.load_le_
	0x0020 62 79 74 65 38 5f 75 69 6e 74 36 34 5f 69 64 78  byte8_uint64_idx
	0x0030 5f 69 6e 76 00 00 00 00 00 00 00 00 00 00 00 00  _inv............
	0x0040 00 00 00 00 00 01 9c 02 00 00 00 01 10 73 00 00  .............s..
	0x0050 e6 01 00 00 00 00 00 00 00 00 10 69 64 78 00 00  ...........idx..
	0x0060 e6 01 00 00 00 00 00 00 00 00 0f 7e 72 32 00 01  ...........~r2..
	0x0070 e6 01 00 00 00 00 00 00                          ........
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 0+0 t=24 type.uint64+0
	rel 53+8 t=1 "".load_le_byte8_uint64_idx_inv+0
	rel 61+8 t=1 "".load_le_byte8_uint64_idx_inv+302
	rel 82+4 t=29 go.info.[]uint8+0
	rel 86+4 t=29 +0
	rel 98+4 t=29 go.info.int+0
	rel 102+4 t=29 +57
	rel 114+4 t=29 go.info.uint64+0
aux for "".load_be_byte2_uint16_idx SDWARFLOC size=109
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 50 00 00 00 00 00 00 00  ........P.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 50 00 00 00 00 00 00 00 02 00 91 18 00 00 00  .P..............
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00           .............
	rel 8+8 t=1 "".load_be_byte2_uint16_idx+0
	rel 65+8 t=1 "".load_be_byte2_uint16_idx+0
aux for "".load_be_byte2_uint16_idx SDWARFLINES size=22
	0x0000 04 02 0a 03 e5 01 14 9e 06 41 06 cd 06 41 06 08  .........A...A..
	0x0010 87 02 01 00 01 01                                ......
aux for "".load_be_byte2_uint16_idx SDWARFINFO size=116
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 62 65 5f  guments.load_be_
	0x0020 62 79 74 65 32 5f 75 69 6e 74 31 36 5f 69 64 78  byte2_uint16_idx
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 01 9c 02 00 00 00 01 10 73 00 00 eb 01 00 00  .........s......
	0x0050 00 00 00 00 00 00 10 69 64 78 00 00 eb 01 00 00  .......idx......
	0x0060 00 00 00 00 00 00 0f 7e 72 32 00 01 eb 01 00 00  .......~r2......
	0x0070 00 00 00 00                                      ....
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 0+0 t=24 type.uint16+0
	rel 49+8 t=1 "".load_be_byte2_uint16_idx+0
	rel 57+8 t=1 "".load_be_byte2_uint16_idx+80
	rel 78+4 t=29 go.info.[]uint8+0
	rel 82+4 t=29 +0
	rel 94+4 t=29 go.info.int+0
	rel 98+4 t=29 +57
	rel 110+4 t=29 go.info.uint16+0
aux for "".load_be_byte2_uint16_idx_inv SDWARFLOC size=109
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 54 00 00 00 00 00 00 00  ........T.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 54 00 00 00 00 00 00 00 02 00 91 18 00 00 00  .T..............
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00           .............
	rel 8+8 t=1 "".load_be_byte2_uint16_idx_inv+0
	rel 65+8 t=1 "".load_be_byte2_uint16_idx_inv+0
aux for "".load_be_byte2_uint16_idx_inv SDWARFLINES size=22
	0x0000 04 02 0a 03 eb 01 14 9e 06 41 06 f5 06 41 06 08  .........A...A..
	0x0010 87 02 01 00 01 01                                ......
aux for "".load_be_byte2_uint16_idx_inv SDWARFINFO size=120
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 62 65 5f  guments.load_be_
	0x0020 62 79 74 65 32 5f 75 69 6e 74 31 36 5f 69 64 78  byte2_uint16_idx
	0x0030 5f 69 6e 76 00 00 00 00 00 00 00 00 00 00 00 00  _inv............
	0x0040 00 00 00 00 00 01 9c 02 00 00 00 01 10 73 00 00  .............s..
	0x0050 f1 01 00 00 00 00 00 00 00 00 10 69 64 78 00 00  ...........idx..
	0x0060 f1 01 00 00 00 00 00 00 00 00 0f 7e 72 32 00 01  ...........~r2..
	0x0070 f1 01 00 00 00 00 00 00                          ........
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 0+0 t=24 type.uint16+0
	rel 53+8 t=1 "".load_be_byte2_uint16_idx_inv+0
	rel 61+8 t=1 "".load_be_byte2_uint16_idx_inv+84
	rel 82+4 t=29 go.info.[]uint8+0
	rel 86+4 t=29 +0
	rel 98+4 t=29 go.info.int+0
	rel 102+4 t=29 +57
	rel 114+4 t=29 go.info.uint16+0
aux for "".load_be_byte4_uint32_idx SDWARFLOC size=109
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 8b 00 00 00 00 00 00 00  ................
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 8b 00 00 00 00 00 00 00 02 00 91 18 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00           .............
	rel 8+8 t=1 "".load_be_byte4_uint32_idx+0
	rel 65+8 t=1 "".load_be_byte4_uint32_idx+0
aux for "".load_be_byte4_uint32_idx SDWARFLINES size=24
	0x0000 04 02 0a 03 f1 01 14 9d 06 41 06 02 2d ff 06 41  .........A..-..A
	0x0010 06 08 e1 02 01 00 01 01                          ........
aux for "".load_be_byte4_uint32_idx SDWARFINFO size=116
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 62 65 5f  guments.load_be_
	0x0020 62 79 74 65 34 5f 75 69 6e 74 33 32 5f 69 64 78  byte4_uint32_idx
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 01 9c 02 00 00 00 01 10 73 00 00 f7 01 00 00  .........s......
	0x0050 00 00 00 00 00 00 10 69 64 78 00 00 f7 01 00 00  .......idx......
	0x0060 00 00 00 00 00 00 0f 7e 72 32 00 01 f7 01 00 00  .......~r2......
	0x0070 00 00 00 00                                      ....
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 0+0 t=24 type.uint32+0
	rel 49+8 t=1 "".load_be_byte4_uint32_idx+0
	rel 57+8 t=1 "".load_be_byte4_uint32_idx+139
	rel 78+4 t=29 go.info.[]uint8+0
	rel 82+4 t=29 +0
	rel 94+4 t=29 go.info.int+0
	rel 98+4 t=29 +57
	rel 110+4 t=29 go.info.uint32+0
aux for "".load_be_byte8_uint64_idx SDWARFLOC size=109
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 26 01 00 00 00 00 00 00  ........&.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 26 01 00 00 00 00 00 00 02 00 91 18 00 00 00  .&..............
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00           .............
	rel 8+8 t=1 "".load_be_byte8_uint64_idx+0
	rel 65+8 t=1 "".load_be_byte8_uint64_idx+0
aux for "".load_be_byte8_uint64_idx SDWARFLINES size=26
	0x0000 04 02 0a 03 f6 01 14 9d 06 41 06 02 9e 01 ff 06  .........A......
	0x0010 41 06 02 3f ff 02 01 00 01 01                    A..?......
aux for "".load_be_byte8_uint64_idx SDWARFINFO size=116
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 62 65 5f  guments.load_be_
	0x0020 62 79 74 65 38 5f 75 69 6e 74 36 34 5f 69 64 78  byte8_uint64_idx
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 01 9c 02 00 00 00 01 10 73 00 00 fc 01 00 00  .........s......
	0x0050 00 00 00 00 00 00 10 69 64 78 00 00 fc 01 00 00  .......idx......
	0x0060 00 00 00 00 00 00 0f 7e 72 32 00 01 fc 01 00 00  .......~r2......
	0x0070 00 00 00 00                                      ....
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 0+0 t=24 type.uint64+0
	rel 49+8 t=1 "".load_be_byte8_uint64_idx+0
	rel 57+8 t=1 "".load_be_byte8_uint64_idx+294
	rel 78+4 t=29 go.info.[]uint8+0
	rel 82+4 t=29 +0
	rel 94+4 t=29 go.info.int+0
	rel 98+4 t=29 +57
	rel 110+4 t=29 go.info.uint64+0
aux for "".load_le_byte2_uint16_idx2 SDWARFLOC size=109
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 6b 00 00 00 00 00 00 00  ........k.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 6b 00 00 00 00 00 00 00 02 00 91 18 00 00 00  .k..............
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00           .............
	rel 8+8 t=1 "".load_le_byte2_uint16_idx2+0
	rel 65+8 t=1 "".load_le_byte2_uint16_idx2+0
aux for "".load_le_byte2_uint16_idx2 SDWARFLINES size=23
	0x0000 04 02 0a 03 fb 01 14 9d 06 41 06 08 cd 06 37 06  .........A....7.
	0x0010 08 af 02 01 00 01 01                             .......
aux for "".load_le_byte2_uint16_idx2 SDWARFINFO size=117
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 6c 65 5f  guments.load_le_
	0x0020 62 79 74 65 32 5f 75 69 6e 74 31 36 5f 69 64 78  byte2_uint16_idx
	0x0030 32 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  2...............
	0x0040 00 00 01 9c 02 00 00 00 01 10 73 00 00 81 02 00  ..........s.....
	0x0050 00 00 00 00 00 00 00 10 69 64 78 00 00 81 02 00  ........idx.....
	0x0060 00 00 00 00 00 00 00 0f 7e 72 32 00 01 81 02 00  ........~r2.....
	0x0070 00 00 00 00 00                                   .....
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 0+0 t=24 type.uint16+0
	rel 50+8 t=1 "".load_le_byte2_uint16_idx2+0
	rel 58+8 t=1 "".load_le_byte2_uint16_idx2+107
	rel 79+4 t=29 go.info.[]uint8+0
	rel 83+4 t=29 +0
	rel 95+4 t=29 go.info.int+0
	rel 99+4 t=29 +57
	rel 111+4 t=29 go.info.uint16+0
aux for "".load_le_byte2_uint16_idx2_inv SDWARFLOC size=109
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 6f 00 00 00 00 00 00 00  ........o.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 6f 00 00 00 00 00 00 00 02 00 91 18 00 00 00  .o..............
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00           .............
	rel 8+8 t=1 "".load_le_byte2_uint16_idx2_inv+0
	rel 65+8 t=1 "".load_le_byte2_uint16_idx2_inv+0
aux for "".load_le_byte2_uint16_idx2_inv SDWARFLINES size=27
	0x0000 04 02 0a 03 80 02 14 9d 06 41 06 c3 06 41 06 08  .........A...A..
	0x0010 2d 06 37 06 08 91 02 01 00 01 01                 -.7........
aux for "".load_le_byte2_uint16_idx2_inv SDWARFINFO size=121
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 6c 65 5f  guments.load_le_
	0x0020 62 79 74 65 32 5f 75 69 6e 74 31 36 5f 69 64 78  byte2_uint16_idx
	0x0030 32 5f 69 6e 76 00 00 00 00 00 00 00 00 00 00 00  2_inv...........
	0x0040 00 00 00 00 00 00 01 9c 02 00 00 00 01 10 73 00  ..............s.
	0x0050 00 86 02 00 00 00 00 00 00 00 00 10 69 64 78 00  ............idx.
	0x0060 00 86 02 00 00 00 00 00 00 00 00 0f 7e 72 32 00  ............~r2.
	0x0070 01 86 02 00 00 00 00 00 00                       .........
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 0+0 t=24 type.uint16+0
	rel 54+8 t=1 "".load_le_byte2_uint16_idx2_inv+0
	rel 62+8 t=1 "".load_le_byte2_uint16_idx2_inv+111
	rel 83+4 t=29 go.info.[]uint8+0
	rel 87+4 t=29 +0
	rel 99+4 t=29 go.info.int+0
	rel 103+4 t=29 +57
	rel 115+4 t=29 go.info.uint16+0
aux for "".load_le_byte4_uint32_idx4 SDWARFLOC size=109
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 a6 00 00 00 00 00 00 00  ................
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 a6 00 00 00 00 00 00 00 02 00 91 18 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00           .............
	rel 8+8 t=1 "".load_le_byte4_uint32_idx4+0
	rel 65+8 t=1 "".load_le_byte4_uint32_idx4+0
aux for "".load_le_byte4_uint32_idx4 SDWARFLINES size=25
	0x0000 04 02 0a 03 85 02 14 9d 06 41 06 02 41 ff 06 37  .........A..A..7
	0x0010 06 02 1d ff 02 01 00 01 01                       .........
aux for "".load_le_byte4_uint32_idx4 SDWARFINFO size=117
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 6c 65 5f  guments.load_le_
	0x0020 62 79 74 65 34 5f 75 69 6e 74 33 32 5f 69 64 78  byte4_uint32_idx
	0x0030 34 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  4...............
	0x0040 00 00 01 9c 02 00 00 00 01 10 73 00 00 8b 02 00  ..........s.....
	0x0050 00 00 00 00 00 00 00 10 69 64 78 00 00 8b 02 00  ........idx.....
	0x0060 00 00 00 00 00 00 00 0f 7e 72 32 00 01 8b 02 00  ........~r2.....
	0x0070 00 00 00 00 00                                   .....
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 0+0 t=24 type.uint32+0
	rel 50+8 t=1 "".load_le_byte4_uint32_idx4+0
	rel 58+8 t=1 "".load_le_byte4_uint32_idx4+166
	rel 79+4 t=29 go.info.[]uint8+0
	rel 83+4 t=29 +0
	rel 95+4 t=29 go.info.int+0
	rel 99+4 t=29 +57
	rel 111+4 t=29 go.info.uint32+0
aux for "".load_le_byte4_uint32_idx4_inv SDWARFLOC size=109
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 af 00 00 00 00 00 00 00  ................
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 af 00 00 00 00 00 00 00 02 00 91 18 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00           .............
	rel 8+8 t=1 "".load_le_byte4_uint32_idx4_inv+0
	rel 65+8 t=1 "".load_le_byte4_uint32_idx4_inv+0
aux for "".load_le_byte4_uint32_idx4_inv SDWARFLINES size=24
	0x0000 04 02 0a 03 8a 02 14 9d 06 41 06 02 4f ff 06 37  .........A..O..7
	0x0010 06 08 ff 02 01 00 01 01                          ........
aux for "".load_le_byte4_uint32_idx4_inv SDWARFINFO size=121
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 6c 65 5f  guments.load_le_
	0x0020 62 79 74 65 34 5f 75 69 6e 74 33 32 5f 69 64 78  byte4_uint32_idx
	0x0030 34 5f 69 6e 76 00 00 00 00 00 00 00 00 00 00 00  4_inv...........
	0x0040 00 00 00 00 00 00 01 9c 02 00 00 00 01 10 73 00  ..............s.
	0x0050 00 90 02 00 00 00 00 00 00 00 00 10 69 64 78 00  ............idx.
	0x0060 00 90 02 00 00 00 00 00 00 00 00 0f 7e 72 32 00  ............~r2.
	0x0070 01 90 02 00 00 00 00 00 00                       .........
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 0+0 t=24 type.uint32+0
	rel 54+8 t=1 "".load_le_byte4_uint32_idx4_inv+0
	rel 62+8 t=1 "".load_le_byte4_uint32_idx4_inv+175
	rel 83+4 t=29 go.info.[]uint8+0
	rel 87+4 t=29 +0
	rel 99+4 t=29 go.info.int+0
	rel 103+4 t=29 +57
	rel 115+4 t=29 go.info.uint32+0
aux for "".load_le_byte8_uint64_idx8 SDWARFLOC size=109
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 66 01 00 00 00 00 00 00  ........f.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 66 01 00 00 00 00 00 00 02 00 91 18 00 00 00  .f..............
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00           .............
	rel 8+8 t=1 "".load_le_byte8_uint64_idx8+0
	rel 65+8 t=1 "".load_le_byte8_uint64_idx8+0
aux for "".load_le_byte8_uint64_idx8 SDWARFLINES size=26
	0x0000 04 02 0a 03 8f 02 14 9d 06 41 06 02 da 01 ff 06  .........A......
	0x0010 37 06 02 44 ff 02 01 00 01 01                    7..D......
aux for "".load_le_byte8_uint64_idx8 SDWARFINFO size=117
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 6c 65 5f  guments.load_le_
	0x0020 62 79 74 65 38 5f 75 69 6e 74 36 34 5f 69 64 78  byte8_uint64_idx
	0x0030 38 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  8...............
	0x0040 00 00 01 9c 02 00 00 00 01 10 73 00 00 95 02 00  ..........s.....
	0x0050 00 00 00 00 00 00 00 10 69 64 78 00 00 95 02 00  ........idx.....
	0x0060 00 00 00 00 00 00 00 0f 7e 72 32 00 01 95 02 00  ........~r2.....
	0x0070 00 00 00 00 00                                   .....
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 0+0 t=24 type.uint64+0
	rel 50+8 t=1 "".load_le_byte8_uint64_idx8+0
	rel 58+8 t=1 "".load_le_byte8_uint64_idx8+358
	rel 79+4 t=29 go.info.[]uint8+0
	rel 83+4 t=29 +0
	rel 95+4 t=29 go.info.int+0
	rel 99+4 t=29 +57
	rel 111+4 t=29 go.info.uint64+0
aux for "".load_le_byte8_uint64_idx8_inv SDWARFLOC size=109
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 56 01 00 00 00 00 00 00  ........V.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 56 01 00 00 00 00 00 00 02 00 91 18 00 00 00  .V..............
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00           .............
	rel 8+8 t=1 "".load_le_byte8_uint64_idx8_inv+0
	rel 65+8 t=1 "".load_le_byte8_uint64_idx8_inv+0
aux for "".load_le_byte8_uint64_idx8_inv SDWARFLINES size=26
	0x0000 04 02 0a 03 94 02 14 9d 06 41 06 02 d1 01 ff 06  .........A......
	0x0010 37 06 02 3d ff 02 01 00 01 01                    7..=......
aux for "".load_le_byte8_uint64_idx8_inv SDWARFINFO size=121
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 6c 65 5f  guments.load_le_
	0x0020 62 79 74 65 38 5f 75 69 6e 74 36 34 5f 69 64 78  byte8_uint64_idx
	0x0030 38 5f 69 6e 76 00 00 00 00 00 00 00 00 00 00 00  8_inv...........
	0x0040 00 00 00 00 00 00 01 9c 02 00 00 00 01 10 73 00  ..............s.
	0x0050 00 9a 02 00 00 00 00 00 00 00 00 10 69 64 78 00  ............idx.
	0x0060 00 9a 02 00 00 00 00 00 00 00 00 0f 7e 72 32 00  ............~r2.
	0x0070 01 9a 02 00 00 00 00 00 00                       .........
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 0+0 t=24 type.uint64+0
	rel 54+8 t=1 "".load_le_byte8_uint64_idx8_inv+0
	rel 62+8 t=1 "".load_le_byte8_uint64_idx8_inv+342
	rel 83+4 t=29 go.info.[]uint8+0
	rel 87+4 t=29 +0
	rel 99+4 t=29 go.info.int+0
	rel 103+4 t=29 +57
	rel 115+4 t=29 go.info.uint64+0
aux for "".load_be_byte2_uint16_idx2 SDWARFLOC size=109
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 6b 00 00 00 00 00 00 00  ........k.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 6b 00 00 00 00 00 00 00 02 00 91 18 00 00 00  .k..............
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00           .............
	rel 8+8 t=1 "".load_be_byte2_uint16_idx2+0
	rel 65+8 t=1 "".load_be_byte2_uint16_idx2+0
aux for "".load_be_byte2_uint16_idx2 SDWARFLINES size=23
	0x0000 04 02 0a 03 99 02 14 9d 06 41 06 08 cd 06 37 06  .........A....7.
	0x0010 08 af 02 01 00 01 01                             .......
aux for "".load_be_byte2_uint16_idx2 SDWARFINFO size=117
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 62 65 5f  guments.load_be_
	0x0020 62 79 74 65 32 5f 75 69 6e 74 31 36 5f 69 64 78  byte2_uint16_idx
	0x0030 32 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  2...............
	0x0040 00 00 01 9c 02 00 00 00 01 10 73 00 00 9f 02 00  ..........s.....
	0x0050 00 00 00 00 00 00 00 10 69 64 78 00 00 9f 02 00  ........idx.....
	0x0060 00 00 00 00 00 00 00 0f 7e 72 32 00 01 9f 02 00  ........~r2.....
	0x0070 00 00 00 00 00                                   .....
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 0+0 t=24 type.uint16+0
	rel 50+8 t=1 "".load_be_byte2_uint16_idx2+0
	rel 58+8 t=1 "".load_be_byte2_uint16_idx2+107
	rel 79+4 t=29 go.info.[]uint8+0
	rel 83+4 t=29 +0
	rel 95+4 t=29 go.info.int+0
	rel 99+4 t=29 +57
	rel 111+4 t=29 go.info.uint16+0
aux for "".load_be_byte2_uint16_idx2_inv SDWARFLOC size=109
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 6f 00 00 00 00 00 00 00  ........o.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 6f 00 00 00 00 00 00 00 02 00 91 18 00 00 00  .o..............
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00           .............
	rel 8+8 t=1 "".load_be_byte2_uint16_idx2_inv+0
	rel 65+8 t=1 "".load_be_byte2_uint16_idx2_inv+0
aux for "".load_be_byte2_uint16_idx2_inv SDWARFLINES size=27
	0x0000 04 02 0a 03 9e 02 14 9d 06 41 06 c3 06 41 06 08  .........A...A..
	0x0010 2d 06 37 06 08 91 02 01 00 01 01                 -.7........
aux for "".load_be_byte2_uint16_idx2_inv SDWARFINFO size=121
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 62 65 5f  guments.load_be_
	0x0020 62 79 74 65 32 5f 75 69 6e 74 31 36 5f 69 64 78  byte2_uint16_idx
	0x0030 32 5f 69 6e 76 00 00 00 00 00 00 00 00 00 00 00  2_inv...........
	0x0040 00 00 00 00 00 00 01 9c 02 00 00 00 01 10 73 00  ..............s.
	0x0050 00 a4 02 00 00 00 00 00 00 00 00 10 69 64 78 00  ............idx.
	0x0060 00 a4 02 00 00 00 00 00 00 00 00 0f 7e 72 32 00  ............~r2.
	0x0070 01 a4 02 00 00 00 00 00 00                       .........
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 0+0 t=24 type.uint16+0
	rel 54+8 t=1 "".load_be_byte2_uint16_idx2_inv+0
	rel 62+8 t=1 "".load_be_byte2_uint16_idx2_inv+111
	rel 83+4 t=29 go.info.[]uint8+0
	rel 87+4 t=29 +0
	rel 99+4 t=29 go.info.int+0
	rel 103+4 t=29 +57
	rel 115+4 t=29 go.info.uint16+0
aux for "".load_be_byte4_uint32_idx4 SDWARFLOC size=109
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 a6 00 00 00 00 00 00 00  ................
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 a6 00 00 00 00 00 00 00 02 00 91 18 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00           .............
	rel 8+8 t=1 "".load_be_byte4_uint32_idx4+0
	rel 65+8 t=1 "".load_be_byte4_uint32_idx4+0
aux for "".load_be_byte4_uint32_idx4 SDWARFLINES size=25
	0x0000 04 02 0a 03 a3 02 14 9d 06 41 06 02 44 ff 06 37  .........A..D..7
	0x0010 06 02 1a ff 02 01 00 01 01                       .........
aux for "".load_be_byte4_uint32_idx4 SDWARFINFO size=117
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 62 65 5f  guments.load_be_
	0x0020 62 79 74 65 34 5f 75 69 6e 74 33 32 5f 69 64 78  byte4_uint32_idx
	0x0030 34 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  4...............
	0x0040 00 00 01 9c 02 00 00 00 01 10 73 00 00 a9 02 00  ..........s.....
	0x0050 00 00 00 00 00 00 00 10 69 64 78 00 00 a9 02 00  ........idx.....
	0x0060 00 00 00 00 00 00 00 0f 7e 72 32 00 01 a9 02 00  ........~r2.....
	0x0070 00 00 00 00 00                                   .....
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 0+0 t=24 type.uint32+0
	rel 50+8 t=1 "".load_be_byte4_uint32_idx4+0
	rel 58+8 t=1 "".load_be_byte4_uint32_idx4+166
	rel 79+4 t=29 go.info.[]uint8+0
	rel 83+4 t=29 +0
	rel 95+4 t=29 go.info.int+0
	rel 99+4 t=29 +57
	rel 111+4 t=29 go.info.uint32+0
aux for "".load_be_byte8_uint64_idx8 SDWARFLOC size=109
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 5d 01 00 00 00 00 00 00  ........].......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 5d 01 00 00 00 00 00 00 02 00 91 18 00 00 00  .]..............
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00           .............
	rel 8+8 t=1 "".load_be_byte8_uint64_idx8+0
	rel 65+8 t=1 "".load_be_byte8_uint64_idx8+0
aux for "".load_be_byte8_uint64_idx8 SDWARFLINES size=26
	0x0000 04 02 0a 03 a8 02 14 9d 06 41 06 02 da 01 ff 06  .........A......
	0x0010 37 06 02 3b ff 02 01 00 01 01                    7..;......
aux for "".load_be_byte8_uint64_idx8 SDWARFINFO size=117
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 62 65 5f  guments.load_be_
	0x0020 62 79 74 65 38 5f 75 69 6e 74 36 34 5f 69 64 78  byte8_uint64_idx
	0x0030 38 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  8...............
	0x0040 00 00 01 9c 02 00 00 00 01 10 73 00 00 ae 02 00  ..........s.....
	0x0050 00 00 00 00 00 00 00 10 69 64 78 00 00 ae 02 00  ........idx.....
	0x0060 00 00 00 00 00 00 00 0f 7e 72 32 00 01 ae 02 00  ........~r2.....
	0x0070 00 00 00 00 00                                   .....
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 0+0 t=24 type.uint64+0
	rel 50+8 t=1 "".load_be_byte8_uint64_idx8+0
	rel 58+8 t=1 "".load_be_byte8_uint64_idx8+349
	rel 79+4 t=29 go.info.[]uint8+0
	rel 83+4 t=29 +0
	rel 95+4 t=29 go.info.int+0
	rel 99+4 t=29 +57
	rel 111+4 t=29 go.info.uint64+0
aux for "".fcall_byte SDWARFLOC size=103
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 68 00 00 00 00 00 00 00  ........h.......
	0x0020 01 00 9c 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 68 00 00 00 00  ...........h....
	0x0050 00 00 00 02 00 91 01 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00                             .......
	rel 8+8 t=1 "".fcall_byte+0
	rel 59+8 t=1 "".fcall_byte+0
aux for "".fcall_byte SDWARFLINES size=20
	0x0000 04 02 03 af 02 14 0a a5 9c 06 41 06 02 27 fe 02  ..........A..'..
	0x0010 07 00 01 01                                      ....
aux for "".fcall_byte SDWARFINFO size=113
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 66 63 61 6c 6c 5f 62 79  guments.fcall_by
	0x0020 74 65 00 00 00 00 00 00 00 00 00 00 00 00 00 00  te..............
	0x0030 00 00 00 01 9c 02 00 00 00 01 10 61 00 00 b5 02  ...........a....
	0x0040 00 00 00 00 00 00 00 00 10 62 00 00 b5 02 00 00  .........b......
	0x0050 00 00 00 00 00 00 0f 7e 72 32 00 01 b5 02 00 00  .......~r2......
	0x0060 00 00 00 0f 7e 72 33 00 01 b5 02 00 00 00 00 00  ....~r3.........
	0x0070 00                                               .
	rel 0+0 t=24 type.uint8+0
	rel 35+8 t=1 "".fcall_byte+0
	rel 43+8 t=1 "".fcall_byte+104
	rel 64+4 t=29 go.info.uint8+0
	rel 68+4 t=29 +0
	rel 78+4 t=29 go.info.uint8+0
	rel 82+4 t=29 +51
	rel 94+4 t=29 go.info.uint8+0
	rel 107+4 t=29 go.info.uint8+0
aux for "".fcall_uint16 SDWARFLOC size=103
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 6a 00 00 00 00 00 00 00  ........j.......
	0x0020 01 00 9c 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 6a 00 00 00 00  ...........j....
	0x0050 00 00 00 02 00 91 02 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00                             .......
	rel 8+8 t=1 "".fcall_uint16+0
	rel 59+8 t=1 "".fcall_uint16+0
aux for "".fcall_uint16 SDWARFLINES size=20
	0x0000 04 02 03 b3 02 14 0a a5 9c 06 41 06 02 29 fe 02  ..........A..)..
	0x0010 07 00 01 01                                      ....
aux for "".fcall_uint16 SDWARFINFO size=115
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 66 63 61 6c 6c 5f 75 69  guments.fcall_ui
	0x0020 6e 74 31 36 00 00 00 00 00 00 00 00 00 00 00 00  nt16............
	0x0030 00 00 00 00 00 01 9c 02 00 00 00 01 10 61 00 00  .............a..
	0x0040 b9 02 00 00 00 00 00 00 00 00 10 62 00 00 b9 02  ...........b....
	0x0050 00 00 00 00 00 00 00 00 0f 7e 72 32 00 01 b9 02  .........~r2....
	0x0060 00 00 00 00 00 0f 7e 72 33 00 01 b9 02 00 00 00  ......~r3.......
	0x0070 00 00 00                                         ...
	rel 0+0 t=24 type.uint16+0
	rel 37+8 t=1 "".fcall_uint16+0
	rel 45+8 t=1 "".fcall_uint16+106
	rel 66+4 t=29 go.info.uint16+0
	rel 70+4 t=29 +0
	rel 80+4 t=29 go.info.uint16+0
	rel 84+4 t=29 +51
	rel 96+4 t=29 go.info.uint16+0
	rel 109+4 t=29 go.info.uint16+0
aux for "".fcall_uint32 SDWARFLOC size=103
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 62 00 00 00 00 00 00 00  ........b.......
	0x0020 01 00 9c 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 62 00 00 00 00  ...........b....
	0x0050 00 00 00 02 00 91 04 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00                             .......
	rel 8+8 t=1 "".fcall_uint32+0
	rel 59+8 t=1 "".fcall_uint32+0
aux for "".fcall_uint32 SDWARFLINES size=24
	0x0000 04 02 03 b7 02 14 0a a5 9c 06 37 06 02 20 fe 06  ..........7.. ..
	0x0010 41 06 23 02 02 00 01 01                          A.#.....
aux for "".fcall_uint32 SDWARFINFO size=115
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 66 63 61 6c 6c 5f 75 69  guments.fcall_ui
	0x0020 6e 74 33 32 00 00 00 00 00 00 00 00 00 00 00 00  nt32............
	0x0030 00 00 00 00 00 01 9c 02 00 00 00 01 10 61 00 00  .............a..
	0x0040 bd 02 00 00 00 00 00 00 00 00 10 62 00 00 bd 02  ...........b....
	0x0050 00 00 00 00 00 00 00 00 0f 7e 72 32 00 01 bd 02  .........~r2....
	0x0060 00 00 00 00 00 0f 7e 72 33 00 01 bd 02 00 00 00  ......~r3.......
	0x0070 00 00 00                                         ...
	rel 0+0 t=24 type.uint32+0
	rel 37+8 t=1 "".fcall_uint32+0
	rel 45+8 t=1 "".fcall_uint32+98
	rel 66+4 t=29 go.info.uint32+0
	rel 70+4 t=29 +0
	rel 80+4 t=29 go.info.uint32+0
	rel 84+4 t=29 +51
	rel 96+4 t=29 go.info.uint32+0
	rel 109+4 t=29 go.info.uint32+0
aux for "".load_op_merge SDWARFLOC size=103
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 14 00 00 00 00 00 00 00  ................
	0x0020 01 00 9c 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 14 00 00 00 00  ................
	0x0050 00 00 00 02 00 91 08 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00                             .......
	rel 8+8 t=1 "".load_op_merge+0
	rel 59+8 t=1 "".load_op_merge+0
aux for "".load_op_merge SDWARFLINES size=20
	0x0000 04 02 03 bf 02 14 06 41 06 2c 06 41 2e 06 2e 02  .......A.,.A....
	0x0010 01 00 01 01                                      ....
aux for "".load_op_merge SDWARFINFO size=90
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 6f 70 5f  guments.load_op_
	0x0020 6d 65 72 67 65 00 00 00 00 00 00 00 00 00 00 00  merge...........
	0x0030 00 00 00 00 00 00 01 9c 02 00 00 00 01 10 70 00  ..............p.
	0x0040 00 c3 02 00 00 00 00 00 00 00 00 10 71 00 00 c3  ............q...
	0x0050 02 00 00 00 00 00 00 00 00 00                    ..........
	rel 0+0 t=24 type.*int+0
	rel 38+8 t=1 "".load_op_merge+0
	rel 46+8 t=1 "".load_op_merge+20
	rel 67+4 t=29 go.info.*int+0
	rel 71+4 t=29 +0
	rel 81+4 t=29 go.info.*int+0
	rel 85+4 t=29 +51
aux for "".load_op_no_merge SDWARFLOC size=205
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 08 00 00 00 00 00 00 00 1e 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 1e 00 00 00 00  ................
	0x0050 00 00 00 01 00 9c 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 1e 00  ................
	0x0080 00 00 00 00 00 00 02 00 91 08 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff  ................
	0x00a0 ff ff 00 00 00 00 00 00 00 00 17 00 00 00 00 00  ................
	0x00b0 00 00 1e 00 00 00 00 00 00 00 01 00 51 00 00 00  ............Q...
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 00           .............
	rel 8+8 t=1 "".load_op_no_merge+0
	rel 59+8 t=1 "".load_op_no_merge+0
	rel 110+8 t=1 "".load_op_no_merge+0
	rel 162+8 t=1 "".load_op_no_merge+0
aux for "".load_op_no_merge SDWARFLINES size=24
	0x0000 04 02 03 c2 02 14 06 41 06 2e 06 41 06 38 2c 06  .......A...A.8,.
	0x0010 55 06 23 02 01 00 01 01                          U.#.....
aux for "".load_op_no_merge SDWARFINFO size=137
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 6f 61 64 5f 6f 70 5f  guments.load_op_
	0x0020 6e 6f 5f 6d 65 72 67 65 00 00 00 00 00 00 00 00  no_merge........
	0x0030 00 00 00 00 00 00 00 00 00 01 9c 02 00 00 00 01  ................
	0x0040 0b 78 00 c8 02 00 00 00 00 00 00 00 00 10 70 00  .x............p.
	0x0050 00 c7 02 00 00 00 00 00 00 00 00 10 71 00 00 c7  ............q...
	0x0060 02 00 00 00 00 00 00 00 00 15 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 0b 69 00 c9 02 00  ...........i....
	0x0080 00 00 00 00 00 00 00 00 00                       .........
	rel 0+0 t=24 type.*int+0
	rel 41+8 t=1 "".load_op_no_merge+0
	rel 49+8 t=1 "".load_op_no_merge+30
	rel 69+4 t=29 go.info.int+0
	rel 73+4 t=29 +0
	rel 83+4 t=29 go.info.*int+0
	rel 87+4 t=29 +51
	rel 97+4 t=29 go.info.*int+0
	rel 101+4 t=29 +102
	rel 106+8 t=1 "".load_op_no_merge+8
	rel 114+8 t=1 "".load_op_no_merge+30
	rel 127+4 t=29 go.info.int+0
	rel 131+4 t=29 +154
aux for "".offsets_fold SDWARFLOC size=52
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 09 00 00 00 00 00 00 00 26 00 00 00 00 00 00 00  ........&.......
	0x0020 02 00 91 28 00 00 00 00 00 00 00 00 00 00 00 00  ...(............
	0x0030 00 00 00 00                                      ....
	rel 8+8 t=1 "".offsets_fold+0
aux for "".offsets_fold SDWARFLINES size=19
	0x0000 04 02 03 c9 02 14 06 69 06 61 06 41 06 a6 02 01  .......i.a.A....
	0x0010 00 01 01                                         ...
aux for "".offsets_fold SDWARFINFO size=88
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6f 66 66 73 65 74 73 5f  guments.offsets_
	0x0020 66 6f 6c 64 00 00 00 00 00 00 00 00 00 00 00 00  fold............
	0x0030 00 00 00 00 00 01 9c 02 00 00 00 01 0f 61 00 00  .............a..
	0x0040 cf 02 00 00 00 00 02 91 14 10 62 00 01 cf 02 00  ..........b.....
	0x0050 00 00 00 00 00 00 00 00                          ........
	rel 0+0 t=24 type.[20]uint8+0
	rel 37+8 t=1 "".offsets_fold+0
	rel 45+8 t=1 "".offsets_fold+38
	rel 66+4 t=29 go.info.[20]uint8+0
	rel 79+4 t=29 go.info.[20]uint8+0
	rel 83+4 t=29 +0
aux for "".safe_point SDWARFLOC size=245
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 2e 00 00 00 00 00 00 00 37 00 00 00 00 00 00 00  ........7.......
	0x0020 01 00 50 37 00 00 00 00 00 00 00 85 00 00 00 00  ..P7............
	0x0030 00 00 00 02 00 91 60 00 00 00 00 00 00 00 00 00  ......`.........
	0x0040 00 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00  ................
	0x0050 00 00 00 00 00 00 00 25 00 00 00 00 00 00 00 37  .......%.......7
	0x0060 00 00 00 00 00 00 00 01 00 52 37 00 00 00 00 00  .........R7.....
	0x0070 00 00 85 00 00 00 00 00 00 00 02 00 91 68 00 00  .............h..
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ff ff  ................
	0x0090 ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 85 00 00 00 00 00 00 00 01 00  ................
	0x00b0 9c 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00c0 00 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00  ................
	0x00d0 00 00 00 00 00 00 00 00 00 85 00 00 00 00 00 00  ................
	0x00e0 00 02 00 91 08 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00f0 00 00 00 00 00                                   .....
	rel 8+8 t=1 "".safe_point+0
	rel 79+8 t=1 "".safe_point+0
	rel 150+8 t=1 "".safe_point+0
	rel 201+8 t=1 "".safe_point+0
aux for "".safe_point SDWARFLINES size=33
	0x0000 04 02 03 d2 02 14 0a a5 9c 06 41 06 b0 42 06 41  ..........A..B.A
	0x0010 06 08 2e 06 72 06 08 16 06 41 06 19 02 05 00 01  ....r....A......
	0x0020 01                                               .
aux for "".safe_point SDWARFINFO size=113
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 73 61 66 65 5f 70 6f 69  guments.safe_poi
	0x0020 6e 74 00 00 00 00 00 00 00 00 00 00 00 00 00 00  nt..............
	0x0030 00 00 00 01 9c 02 00 00 00 01 0b 62 00 d9 02 00  ...........b....
	0x0040 00 00 00 00 00 00 00 0b 61 00 d9 02 00 00 00 00  ........a.......
	0x0050 00 00 00 00 10 70 00 00 d8 02 00 00 00 00 00 00  .....p..........
	0x0060 00 00 10 71 00 00 d8 02 00 00 00 00 00 00 00 00  ...q............
	0x0070 00                                               .
	rel 0+0 t=24 type.*[2]*int+0
	rel 0+0 t=24 type.*int+0
	rel 35+8 t=1 "".safe_point+0
	rel 43+8 t=1 "".safe_point+133
	rel 63+4 t=29 go.info.*int+0
	rel 67+4 t=29 +0
	rel 76+4 t=29 go.info.*int+0
	rel 80+4 t=29 +71
	rel 90+4 t=29 go.info.*[2]*int+0
	rel 94+4 t=29 +142
	rel 104+4 t=29 go.info.*[2]*int+0
	rel 108+4 t=29 +193
aux for "".store_le64 SDWARFRANGE size=64
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 15 00 00 00 00 00 00 00 2e 00 00 00 00 00 00 00  ................
	0x0020 38 00 00 00 00 00 00 00 46 00 00 00 00 00 00 00  8.......F.......
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 8+8 t=1 "".store_le64+0
aux for "".store_le64 SDWARFLOC size=165
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 46 00 00 00 00 00 00 00  ........F.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 46 00 00 00 00 00 00 00 07 00 9c 93 08 91 08  .F..............
	0x0060 93 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 46 00 00 00 00 00  ..........F.....
	0x0090 00 00 01 00 51 00 00 00 00 00 00 00 00 00 00 00  ....Q...........
	0x00a0 00 00 00 00 00                                   .....
	rel 8+8 t=1 "".store_le64+0
	rel 65+8 t=1 "".store_le64+0
	rel 122+8 t=1 "".store_le64+0
aux for "".store_le64 SDWARFLINES size=43
	0x0000 04 02 0a 03 dc 02 14 a0 04 03 03 f0 7d 51 06 41  ............}Q.A
	0x0010 06 03 03 8c 06 41 04 02 06 03 87 02 32 04 03 06  .....A......2...
	0x0020 03 f0 7d 6f 06 91 02 01 00 01 01                 ..}o.......
aux for "".store_le64 SDWARFINFO size=107
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 73 74 6f 72 65 5f 6c 65  guments.store_le
	0x0020 36 34 00 00 00 00 00 00 00 00 00 00 00 00 00 00  64..............
	0x0030 00 00 00 01 9c 02 00 00 00 01 10 62 00 00 e2 02  ...........b....
	0x0040 00 00 00 00 00 00 00 00 07 00 00 00 00 00 00 00  ................
	0x0050 00 02 00 00 00 e7 02 13 00 00 00 00 00 00 00 00  ................
	0x0060 13 00 00 00 00 00 00 00 00 00 00                 ...........
	rel 0+0 t=24 type.[]uint8+0
	rel 35+8 t=1 "".store_le64+0
	rel 43+8 t=1 "".store_le64+70
	rel 64+4 t=29 go.info.[]uint8+0
	rel 68+4 t=29 +0
	rel 73+4 t=29 go.info.encoding/binary.littleEndian.PutUint64$abstract+0
	rel 77+4 t=29 +0
	rel 88+4 t=29 go.info.encoding/binary.littleEndian.PutUint64$abstract+42
	rel 92+4 t=29 +57
	rel 97+4 t=29 go.info.encoding/binary.littleEndian.PutUint64$abstract+50
	rel 101+4 t=29 +114
aux for "".store_le64_idx SDWARFRANGE size=64
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 39 00 00 00 00 00 00 00 48 00 00 00 00 00 00 00  9.......H.......
	0x0020 52 00 00 00 00 00 00 00 60 00 00 00 00 00 00 00  R.......`.......
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 8+8 t=1 "".store_le64_idx+0
aux for "".store_le64_idx SDWARFLOC size=215
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 66 00 00 00 00 00 00 00  ........f.......
	0x0020 0b 00 9c 93 08 91 08 93 08 91 10 93 08 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 ff ff ff  ................
	0x0040 ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 66 00 00 00 00 00 00 00 02 00 91  .....f..........
	0x0060 18 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00  ................
	0x0080 00 27 00 00 00 00 00 00 00 60 00 00 00 00 00 00  .'.......`......
	0x0090 00 01 00 52 00 00 00 00 00 00 00 00 00 00 00 00  ...R............
	0x00a0 00 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00  ................
	0x00b0 00 00 00 00 24 00 00 00 00 00 00 00 60 00 00 00  ....$.......`...
	0x00c0 00 00 00 00 01 00 51 00 00 00 00 00 00 00 00 00  ......Q.........
	0x00d0 00 00 00 00 00 00 00                             .......
	rel 8+8 t=1 "".store_le64_idx+0
	rel 69+8 t=1 "".store_le64_idx+0
	rel 121+8 t=1 "".store_le64_idx+0
	rel 172+8 t=1 "".store_le64_idx+0
aux for "".store_le64_idx SDWARFLINES size=53
	0x0000 04 02 0a 03 e4 02 14 a0 06 41 04 03 06 08 03 e8  .........A......
	0x0010 7d 97 06 37 06 03 03 28 06 41 04 02 06 03 8f 02  }..7...(.A......
	0x0020 3c 04 03 06 03 e8 7d 6f 04 02 03 97 02 a0 06 41  <.....}o.......A
	0x0030 02 01 00 01 01                                   .....
aux for "".store_le64_idx SDWARFINFO size=127
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 73 74 6f 72 65 5f 6c 65  guments.store_le
	0x0020 36 34 5f 69 64 78 00 00 00 00 00 00 00 00 00 00  64_idx..........
	0x0030 00 00 00 00 00 00 00 01 9c 02 00 00 00 01 10 62  ...............b
	0x0040 00 00 ea 02 00 00 00 00 00 00 00 00 10 69 64 78  .............idx
	0x0050 00 00 ea 02 00 00 00 00 00 00 00 00 07 00 00 00  ................
	0x0060 00 00 00 00 00 02 00 00 00 ef 02 13 00 00 00 00  ................
	0x0070 00 00 00 00 13 00 00 00 00 00 00 00 00 00 00     ...............
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 39+8 t=1 "".store_le64_idx+0
	rel 47+8 t=1 "".store_le64_idx+102
	rel 68+4 t=29 go.info.[]uint8+0
	rel 72+4 t=29 +0
	rel 84+4 t=29 go.info.int+0
	rel 88+4 t=29 +61
	rel 93+4 t=29 go.info.encoding/binary.littleEndian.PutUint64$abstract+0
	rel 97+4 t=29 +0
	rel 108+4 t=29 go.info.encoding/binary.littleEndian.PutUint64$abstract+42
	rel 112+4 t=29 +113
	rel 117+4 t=29 go.info.encoding/binary.littleEndian.PutUint64$abstract+50
	rel 121+4 t=29 +164
aux for "".store_le32 SDWARFRANGE size=64
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 14 00 00 00 00 00 00 00 26 00 00 00 00 00 00 00  ........&.......
	0x0020 30 00 00 00 00 00 00 00 3b 00 00 00 00 00 00 00  0.......;.......
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 8+8 t=1 "".store_le32+0
aux for "".store_le32 SDWARFLOC size=165
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 3b 00 00 00 00 00 00 00  ........;.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 3b 00 00 00 00 00 00 00 07 00 9c 93 08 91 08  .;..............
	0x0060 93 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 3b 00 00 00 00 00  ..........;.....
	0x0090 00 00 01 00 51 00 00 00 00 00 00 00 00 00 00 00  ....Q...........
	0x00a0 00 00 00 00 00                                   .....
	rel 8+8 t=1 "".store_le32+0
	rel 65+8 t=1 "".store_le32+0
	rel 122+8 t=1 "".store_le32+0
aux for "".store_le32 SDWARFLINES size=41
	0x0000 04 02 0a 03 ec 02 14 a0 04 03 03 d2 7d 47 06 41  ............}G.A
	0x0010 06 4f 06 41 04 02 06 03 a9 02 28 04 03 06 03 d2  .O.A......(.....
	0x0020 7d 6f 06 73 02 01 00 01 01                       }o.s.....
aux for "".store_le32 SDWARFINFO size=107
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 73 74 6f 72 65 5f 6c 65  guments.store_le
	0x0020 33 32 00 00 00 00 00 00 00 00 00 00 00 00 00 00  32..............
	0x0030 00 00 00 01 9c 02 00 00 00 01 10 62 00 00 f2 02  ...........b....
	0x0040 00 00 00 00 00 00 00 00 07 00 00 00 00 00 00 00  ................
	0x0050 00 02 00 00 00 f7 02 13 00 00 00 00 00 00 00 00  ................
	0x0060 13 00 00 00 00 00 00 00 00 00 00                 ...........
	rel 0+0 t=24 type.[]uint8+0
	rel 35+8 t=1 "".store_le32+0
	rel 43+8 t=1 "".store_le32+59
	rel 64+4 t=29 go.info.[]uint8+0
	rel 68+4 t=29 +0
	rel 73+4 t=29 go.info.encoding/binary.littleEndian.PutUint32$abstract+0
	rel 77+4 t=29 +0
	rel 88+4 t=29 go.info.encoding/binary.littleEndian.PutUint32$abstract+42
	rel 92+4 t=29 +57
	rel 97+4 t=29 go.info.encoding/binary.littleEndian.PutUint32$abstract+50
	rel 101+4 t=29 +114
aux for "".store_le32_idx SDWARFRANGE size=64
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 38 00 00 00 00 00 00 00 46 00 00 00 00 00 00 00  8.......F.......
	0x0020 50 00 00 00 00 00 00 00 5a 00 00 00 00 00 00 00  P.......Z.......
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 8+8 t=1 "".store_le32_idx+0
aux for "".store_le32_idx SDWARFLOC size=215
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 60 00 00 00 00 00 00 00  ........`.......
	0x0020 0b 00 9c 93 08 91 08 93 08 91 10 93 08 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 ff ff ff  ................
	0x0040 ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 60 00 00 00 00 00 00 00 02 00 91  .....`..........
	0x0060 18 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00  ................
	0x0080 00 26 00 00 00 00 00 00 00 5a 00 00 00 00 00 00  .&.......Z......
	0x0090 00 01 00 52 00 00 00 00 00 00 00 00 00 00 00 00  ...R............
	0x00a0 00 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00  ................
	0x00b0 00 00 00 00 23 00 00 00 00 00 00 00 5a 00 00 00  ....#.......Z...
	0x00c0 00 00 00 00 01 00 51 00 00 00 00 00 00 00 00 00  ......Q.........
	0x00d0 00 00 00 00 00 00 00                             .......
	rel 8+8 t=1 "".store_le32_idx+0
	rel 69+8 t=1 "".store_le32_idx+0
	rel 121+8 t=1 "".store_le32_idx+0
	rel 172+8 t=1 "".store_le32_idx+0
aux for "".store_le32_idx SDWARFLINES size=51
	0x0000 04 02 0a 03 f4 02 14 a0 06 41 04 03 06 08 03 ca  .........A......
	0x0010 7d 8d 06 37 06 27 06 41 04 02 06 03 b1 02 32 04  }..7.'.A......2.
	0x0020 03 06 03 ca 7d 6f 04 02 03 b5 02 78 06 41 02 01  ....}o.....x.A..
	0x0030 00 01 01                                         ...
aux for "".store_le32_idx SDWARFINFO size=127
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 73 74 6f 72 65 5f 6c 65  guments.store_le
	0x0020 33 32 5f 69 64 78 00 00 00 00 00 00 00 00 00 00  32_idx..........
	0x0030 00 00 00 00 00 00 00 01 9c 02 00 00 00 01 10 62  ...............b
	0x0040 00 00 fa 02 00 00 00 00 00 00 00 00 10 69 64 78  .............idx
	0x0050 00 00 fa 02 00 00 00 00 00 00 00 00 07 00 00 00  ................
	0x0060 00 00 00 00 00 02 00 00 00 ff 02 13 00 00 00 00  ................
	0x0070 00 00 00 00 13 00 00 00 00 00 00 00 00 00 00     ...............
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 39+8 t=1 "".store_le32_idx+0
	rel 47+8 t=1 "".store_le32_idx+96
	rel 68+4 t=29 go.info.[]uint8+0
	rel 72+4 t=29 +0
	rel 84+4 t=29 go.info.int+0
	rel 88+4 t=29 +61
	rel 93+4 t=29 go.info.encoding/binary.littleEndian.PutUint32$abstract+0
	rel 97+4 t=29 +0
	rel 108+4 t=29 go.info.encoding/binary.littleEndian.PutUint32$abstract+42
	rel 112+4 t=29 +113
	rel 117+4 t=29 go.info.encoding/binary.littleEndian.PutUint32$abstract+50
	rel 121+4 t=29 +164
aux for "".store_le16 SDWARFRANGE size=64
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 15 00 00 00 00 00 00 00 2e 00 00 00 00 00 00 00  ................
	0x0020 38 00 00 00 00 00 00 00 46 00 00 00 00 00 00 00  8.......F.......
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 8+8 t=1 "".store_le16+0
aux for "".store_le16 SDWARFLOC size=165
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 46 00 00 00 00 00 00 00  ........F.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 46 00 00 00 00 00 00 00 07 00 9c 93 08 91 08  .F..............
	0x0060 93 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 46 00 00 00 00 00  ..........F.....
	0x0090 00 00 01 00 51 00 00 00 00 00 00 00 00 00 00 00  ....Q...........
	0x00a0 00 00 00 00 00                                   .....
	rel 8+8 t=1 "".store_le16+0
	rel 65+8 t=1 "".store_le16+0
	rel 122+8 t=1 "".store_le16+0
aux for "".store_le16 SDWARFLINES size=41
	0x0000 04 02 0a 03 fc 02 14 a0 04 03 03 b7 7d 51 06 41  ............}Q.A
	0x0010 06 89 06 41 04 02 06 03 c6 02 32 04 03 06 03 b7  ...A......2.....
	0x0020 7d 6f 06 91 02 01 00 01 01                       }o.......
aux for "".store_le16 SDWARFINFO size=107
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 73 74 6f 72 65 5f 6c 65  guments.store_le
	0x0020 31 36 00 00 00 00 00 00 00 00 00 00 00 00 00 00  16..............
	0x0030 00 00 00 01 9c 02 00 00 00 01 10 62 00 00 82 03  ...........b....
	0x0040 00 00 00 00 00 00 00 00 07 00 00 00 00 00 00 00  ................
	0x0050 00 02 00 00 00 87 03 13 00 00 00 00 00 00 00 00  ................
	0x0060 13 00 00 00 00 00 00 00 00 00 00                 ...........
	rel 0+0 t=24 type.[]uint8+0
	rel 35+8 t=1 "".store_le16+0
	rel 43+8 t=1 "".store_le16+70
	rel 64+4 t=29 go.info.[]uint8+0
	rel 68+4 t=29 +0
	rel 73+4 t=29 go.info.encoding/binary.littleEndian.PutUint16$abstract+0
	rel 77+4 t=29 +0
	rel 88+4 t=29 go.info.encoding/binary.littleEndian.PutUint16$abstract+42
	rel 92+4 t=29 +57
	rel 97+4 t=29 go.info.encoding/binary.littleEndian.PutUint16$abstract+50
	rel 101+4 t=29 +114
aux for "".store_le16_idx SDWARFRANGE size=64
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 39 00 00 00 00 00 00 00 48 00 00 00 00 00 00 00  9.......H.......
	0x0020 52 00 00 00 00 00 00 00 60 00 00 00 00 00 00 00  R.......`.......
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 8+8 t=1 "".store_le16_idx+0
aux for "".store_le16_idx SDWARFLOC size=215
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 66 00 00 00 00 00 00 00  ........f.......
	0x0020 0b 00 9c 93 08 91 08 93 08 91 10 93 08 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 ff ff ff  ................
	0x0040 ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 66 00 00 00 00 00 00 00 02 00 91  .....f..........
	0x0060 18 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00  ................
	0x0080 00 27 00 00 00 00 00 00 00 60 00 00 00 00 00 00  .'.......`......
	0x0090 00 01 00 52 00 00 00 00 00 00 00 00 00 00 00 00  ...R............
	0x00a0 00 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00  ................
	0x00b0 00 00 00 00 24 00 00 00 00 00 00 00 60 00 00 00  ....$.......`...
	0x00c0 00 00 00 00 01 00 51 00 00 00 00 00 00 00 00 00  ......Q.........
	0x00d0 00 00 00 00 00 00 00                             .......
	rel 8+8 t=1 "".store_le16_idx+0
	rel 69+8 t=1 "".store_le16_idx+0
	rel 121+8 t=1 "".store_le16_idx+0
	rel 172+8 t=1 "".store_le16_idx+0
aux for "".store_le16_idx SDWARFLINES size=51
	0x0000 04 02 0a 03 84 03 14 a0 06 41 04 03 06 08 03 af  .........A......
	0x0010 7d 97 06 37 06 25 06 41 04 02 06 03 ce 02 3c 04  }..7.%.A......<.
	0x0020 03 06 03 af 7d 6f 04 02 03 d0 02 a0 06 41 02 01  ....}o.......A..
	0x0030 00 01 01                                         ...
aux for "".store_le16_idx SDWARFINFO size=127
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 73 74 6f 72 65 5f 6c 65  guments.store_le
	0x0020 31 36 5f 69 64 78 00 00 00 00 00 00 00 00 00 00  16_idx..........
	0x0030 00 00 00 00 00 00 00 01 9c 02 00 00 00 01 10 62  ...............b
	0x0040 00 00 8a 03 00 00 00 00 00 00 00 00 10 69 64 78  .............idx
	0x0050 00 00 8a 03 00 00 00 00 00 00 00 00 07 00 00 00  ................
	0x0060 00 00 00 00 00 02 00 00 00 8f 03 13 00 00 00 00  ................
	0x0070 00 00 00 00 13 00 00 00 00 00 00 00 00 00 00     ...............
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 39+8 t=1 "".store_le16_idx+0
	rel 47+8 t=1 "".store_le16_idx+102
	rel 68+4 t=29 go.info.[]uint8+0
	rel 72+4 t=29 +0
	rel 84+4 t=29 go.info.int+0
	rel 88+4 t=29 +61
	rel 93+4 t=29 go.info.encoding/binary.littleEndian.PutUint16$abstract+0
	rel 97+4 t=29 +0
	rel 108+4 t=29 go.info.encoding/binary.littleEndian.PutUint16$abstract+42
	rel 112+4 t=29 +113
	rel 117+4 t=29 go.info.encoding/binary.littleEndian.PutUint16$abstract+50
	rel 121+4 t=29 +164
aux for "".store_be64 SDWARFRANGE size=64
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 15 00 00 00 00 00 00 00 31 00 00 00 00 00 00 00  ........1.......
	0x0020 3b 00 00 00 00 00 00 00 46 00 00 00 00 00 00 00  ;.......F.......
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 8+8 t=1 "".store_be64+0
aux for "".store_be64 SDWARFLOC size=165
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 46 00 00 00 00 00 00 00  ........F.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 46 00 00 00 00 00 00 00 07 00 9c 93 08 91 08  .F..............
	0x0060 93 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 29 00 00 00 00 00  ..........).....
	0x0090 00 00 01 00 51 00 00 00 00 00 00 00 00 00 00 00  ....Q...........
	0x00a0 00 00 00 00 00                                   .....
	rel 8+8 t=1 "".store_be64+0
	rel 65+8 t=1 "".store_be64+0
	rel 122+8 t=1 "".store_be64+0
aux for "".store_be64 SDWARFLINES size=44
	0x0000 04 02 0a 03 8c 03 14 a0 04 03 03 f0 7d 51 06 41  ............}Q.A
	0x0010 06 88 03 02 32 06 41 04 02 06 03 87 02 32 04 03  ....2.A......2..
	0x0020 06 03 f0 7d 6f 06 73 02 01 00 01 01              ...}o.s.....
aux for "".store_be64 SDWARFINFO size=107
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 73 74 6f 72 65 5f 62 65  guments.store_be
	0x0020 36 34 00 00 00 00 00 00 00 00 00 00 00 00 00 00  64..............
	0x0030 00 00 00 01 9c 02 00 00 00 01 10 62 00 00 92 03  ...........b....
	0x0040 00 00 00 00 00 00 00 00 07 00 00 00 00 00 00 00  ................
	0x0050 00 02 00 00 00 97 03 13 00 00 00 00 00 00 00 00  ................
	0x0060 13 00 00 00 00 00 00 00 00 00 00                 ...........
	rel 0+0 t=24 type.[]uint8+0
	rel 35+8 t=1 "".store_be64+0
	rel 43+8 t=1 "".store_be64+70
	rel 64+4 t=29 go.info.[]uint8+0
	rel 68+4 t=29 +0
	rel 73+4 t=29 go.info.encoding/binary.bigEndian.PutUint64$abstract+0
	rel 77+4 t=29 +0
	rel 88+4 t=29 go.info.encoding/binary.bigEndian.PutUint64$abstract+39
	rel 92+4 t=29 +57
	rel 97+4 t=29 go.info.encoding/binary.bigEndian.PutUint64$abstract+47
	rel 101+4 t=29 +114
aux for "".store_be64_idx SDWARFRANGE size=64
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 39 00 00 00 00 00 00 00 4b 00 00 00 00 00 00 00  9.......K.......
	0x0020 55 00 00 00 00 00 00 00 60 00 00 00 00 00 00 00  U.......`.......
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 8+8 t=1 "".store_be64_idx+0
aux for "".store_be64_idx SDWARFLOC size=215
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 66 00 00 00 00 00 00 00  ........f.......
	0x0020 0b 00 9c 93 08 91 08 93 08 91 10 93 08 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 ff ff ff  ................
	0x0040 ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 66 00 00 00 00 00 00 00 02 00 91  .....f..........
	0x0060 18 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00  ................
	0x0080 00 27 00 00 00 00 00 00 00 60 00 00 00 00 00 00  .'.......`......
	0x0090 00 01 00 52 00 00 00 00 00 00 00 00 00 00 00 00  ...R............
	0x00a0 00 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00  ................
	0x00b0 00 00 00 00 24 00 00 00 00 00 00 00 42 00 00 00  ....$.......B...
	0x00c0 00 00 00 00 01 00 51 00 00 00 00 00 00 00 00 00  ......Q.........
	0x00d0 00 00 00 00 00 00 00                             .......
	rel 8+8 t=1 "".store_be64_idx+0
	rel 69+8 t=1 "".store_be64_idx+0
	rel 121+8 t=1 "".store_be64_idx+0
	rel 172+8 t=1 "".store_be64_idx+0
aux for "".store_be64_idx SDWARFLINES size=54
	0x0000 04 02 0a 03 94 03 14 a0 06 41 04 03 06 08 03 e8  .........A......
	0x0010 7d 97 06 37 06 24 03 02 32 06 41 04 02 06 03 8f  }..7.$..2.A.....
	0x0020 02 3c 04 03 06 03 e8 7d 6f 04 02 03 97 02 82 06  .<.....}o.......
	0x0030 41 02 01 00 01 01                                A.....
aux for "".store_be64_idx SDWARFINFO size=127
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 73 74 6f 72 65 5f 62 65  guments.store_be
	0x0020 36 34 5f 69 64 78 00 00 00 00 00 00 00 00 00 00  64_idx..........
	0x0030 00 00 00 00 00 00 00 01 9c 02 00 00 00 01 10 62  ...............b
	0x0040 00 00 9a 03 00 00 00 00 00 00 00 00 10 69 64 78  .............idx
	0x0050 00 00 9a 03 00 00 00 00 00 00 00 00 07 00 00 00  ................
	0x0060 00 00 00 00 00 02 00 00 00 9f 03 13 00 00 00 00  ................
	0x0070 00 00 00 00 13 00 00 00 00 00 00 00 00 00 00     ...............
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 39+8 t=1 "".store_be64_idx+0
	rel 47+8 t=1 "".store_be64_idx+102
	rel 68+4 t=29 go.info.[]uint8+0
	rel 72+4 t=29 +0
	rel 84+4 t=29 go.info.int+0
	rel 88+4 t=29 +61
	rel 93+4 t=29 go.info.encoding/binary.bigEndian.PutUint64$abstract+0
	rel 97+4 t=29 +0
	rel 108+4 t=29 go.info.encoding/binary.bigEndian.PutUint64$abstract+39
	rel 112+4 t=29 +113
	rel 117+4 t=29 go.info.encoding/binary.bigEndian.PutUint64$abstract+47
	rel 121+4 t=29 +164
aux for "".store_be32 SDWARFRANGE size=64
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 14 00 00 00 00 00 00 00 28 00 00 00 00 00 00 00  ........(.......
	0x0020 32 00 00 00 00 00 00 00 3d 00 00 00 00 00 00 00  2.......=.......
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 8+8 t=1 "".store_be32+0
aux for "".store_be32 SDWARFLOC size=165
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 3d 00 00 00 00 00 00 00  ........=.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 3d 00 00 00 00 00 00 00 07 00 9c 93 08 91 08  .=..............
	0x0060 93 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 21 00 00 00 00 00  ..........!.....
	0x0090 00 00 01 00 51 00 00 00 00 00 00 00 00 00 00 00  ....Q...........
	0x00a0 00 00 00 00 00                                   .....
	rel 8+8 t=1 "".store_be32+0
	rel 65+8 t=1 "".store_be32+0
	rel 122+8 t=1 "".store_be32+0
aux for "".store_be32 SDWARFLINES size=42
	0x0000 04 02 0a 03 9c 03 14 a0 04 03 03 d2 7d 47 06 41  ............}G.A
	0x0010 06 4c 26 06 41 04 02 06 03 a9 02 28 04 03 06 03  .L&.A......(....
	0x0020 d2 7d 6f 06 73 02 01 00 01 01                    .}o.s.....
aux for "".store_be32 SDWARFINFO size=107
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 73 74 6f 72 65 5f 62 65  guments.store_be
	0x0020 33 32 00 00 00 00 00 00 00 00 00 00 00 00 00 00  32..............
	0x0030 00 00 00 01 9c 02 00 00 00 01 10 62 00 00 a2 03  ...........b....
	0x0040 00 00 00 00 00 00 00 00 07 00 00 00 00 00 00 00  ................
	0x0050 00 02 00 00 00 a7 03 13 00 00 00 00 00 00 00 00  ................
	0x0060 13 00 00 00 00 00 00 00 00 00 00                 ...........
	rel 0+0 t=24 type.[]uint8+0
	rel 35+8 t=1 "".store_be32+0
	rel 43+8 t=1 "".store_be32+61
	rel 64+4 t=29 go.info.[]uint8+0
	rel 68+4 t=29 +0
	rel 73+4 t=29 go.info.encoding/binary.bigEndian.PutUint32$abstract+0
	rel 77+4 t=29 +0
	rel 88+4 t=29 go.info.encoding/binary.bigEndian.PutUint32$abstract+39
	rel 92+4 t=29 +57
	rel 97+4 t=29 go.info.encoding/binary.bigEndian.PutUint32$abstract+47
	rel 101+4 t=29 +114
aux for "".store_be32_idx SDWARFRANGE size=64
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 38 00 00 00 00 00 00 00 48 00 00 00 00 00 00 00  8.......H.......
	0x0020 52 00 00 00 00 00 00 00 60 00 00 00 00 00 00 00  R.......`.......
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 8+8 t=1 "".store_be32_idx+0
aux for "".store_be32_idx SDWARFLOC size=215
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 66 00 00 00 00 00 00 00  ........f.......
	0x0020 0b 00 9c 93 08 91 08 93 08 91 10 93 08 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 ff ff ff  ................
	0x0040 ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 66 00 00 00 00 00 00 00 02 00 91  .....f..........
	0x0060 18 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00  ................
	0x0080 00 26 00 00 00 00 00 00 00 60 00 00 00 00 00 00  .&.......`......
	0x0090 00 01 00 52 00 00 00 00 00 00 00 00 00 00 00 00  ...R............
	0x00a0 00 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00  ................
	0x00b0 00 00 00 00 23 00 00 00 00 00 00 00 40 00 00 00  ....#.......@...
	0x00c0 00 00 00 00 01 00 51 00 00 00 00 00 00 00 00 00  ......Q.........
	0x00d0 00 00 00 00 00 00 00                             .......
	rel 8+8 t=1 "".store_be32_idx+0
	rel 69+8 t=1 "".store_be32_idx+0
	rel 121+8 t=1 "".store_be32_idx+0
	rel 172+8 t=1 "".store_be32_idx+0
aux for "".store_be32_idx SDWARFLINES size=52
	0x0000 04 02 0a 03 a4 03 14 a0 06 41 04 03 06 08 03 ca  .........A......
	0x0010 7d 8d 06 37 06 24 26 06 41 04 02 06 03 b1 02 32  }..7.$&.A......2
	0x0020 04 03 06 03 ca 7d 6f 04 02 03 b5 02 a0 06 41 02  .....}o.......A.
	0x0030 01 00 01 01                                      ....
aux for "".store_be32_idx SDWARFINFO size=127
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 73 74 6f 72 65 5f 62 65  guments.store_be
	0x0020 33 32 5f 69 64 78 00 00 00 00 00 00 00 00 00 00  32_idx..........
	0x0030 00 00 00 00 00 00 00 01 9c 02 00 00 00 01 10 62  ...............b
	0x0040 00 00 aa 03 00 00 00 00 00 00 00 00 10 69 64 78  .............idx
	0x0050 00 00 aa 03 00 00 00 00 00 00 00 00 07 00 00 00  ................
	0x0060 00 00 00 00 00 02 00 00 00 af 03 13 00 00 00 00  ................
	0x0070 00 00 00 00 13 00 00 00 00 00 00 00 00 00 00     ...............
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 39+8 t=1 "".store_be32_idx+0
	rel 47+8 t=1 "".store_be32_idx+102
	rel 68+4 t=29 go.info.[]uint8+0
	rel 72+4 t=29 +0
	rel 84+4 t=29 go.info.int+0
	rel 88+4 t=29 +61
	rel 93+4 t=29 go.info.encoding/binary.bigEndian.PutUint32$abstract+0
	rel 97+4 t=29 +0
	rel 108+4 t=29 go.info.encoding/binary.bigEndian.PutUint32$abstract+39
	rel 112+4 t=29 +113
	rel 117+4 t=29 go.info.encoding/binary.bigEndian.PutUint32$abstract+47
	rel 121+4 t=29 +164
aux for "".store_be16 SDWARFRANGE size=64
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 15 00 00 00 00 00 00 00 32 00 00 00 00 00 00 00  ........2.......
	0x0020 3c 00 00 00 00 00 00 00 47 00 00 00 00 00 00 00  <.......G.......
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 8+8 t=1 "".store_be16+0
aux for "".store_be16 SDWARFLOC size=165
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 47 00 00 00 00 00 00 00  ........G.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 47 00 00 00 00 00 00 00 07 00 9c 93 08 91 08  .G..............
	0x0060 93 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 2a 00 00 00 00 00  ..........*.....
	0x0090 00 00 01 00 51 00 00 00 00 00 00 00 00 00 00 00  ....Q...........
	0x00a0 00 00 00 00 00                                   .....
	rel 8+8 t=1 "".store_be16+0
	rel 65+8 t=1 "".store_be16+0
	rel 122+8 t=1 "".store_be16+0
aux for "".store_be16 SDWARFLINES size=42
	0x0000 04 02 0a 03 ac 03 14 a0 04 03 03 b7 7d 51 06 41  ............}Q.A
	0x0010 06 88 38 06 41 04 02 06 03 c6 02 32 04 03 06 03  ..8.A......2....
	0x0020 b7 7d 6f 06 73 02 01 00 01 01                    .}o.s.....
aux for "".store_be16 SDWARFINFO size=107
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 73 74 6f 72 65 5f 62 65  guments.store_be
	0x0020 31 36 00 00 00 00 00 00 00 00 00 00 00 00 00 00  16..............
	0x0030 00 00 00 01 9c 02 00 00 00 01 10 62 00 00 b2 03  ...........b....
	0x0040 00 00 00 00 00 00 00 00 07 00 00 00 00 00 00 00  ................
	0x0050 00 02 00 00 00 b7 03 13 00 00 00 00 00 00 00 00  ................
	0x0060 13 00 00 00 00 00 00 00 00 00 00                 ...........
	rel 0+0 t=24 type.[]uint8+0
	rel 35+8 t=1 "".store_be16+0
	rel 43+8 t=1 "".store_be16+71
	rel 64+4 t=29 go.info.[]uint8+0
	rel 68+4 t=29 +0
	rel 73+4 t=29 go.info.encoding/binary.bigEndian.PutUint16$abstract+0
	rel 77+4 t=29 +0
	rel 88+4 t=29 go.info.encoding/binary.bigEndian.PutUint16$abstract+39
	rel 92+4 t=29 +57
	rel 97+4 t=29 go.info.encoding/binary.bigEndian.PutUint16$abstract+47
	rel 101+4 t=29 +114
aux for "".store_be16_idx SDWARFRANGE size=64
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 39 00 00 00 00 00 00 00 4c 00 00 00 00 00 00 00  9.......L.......
	0x0020 56 00 00 00 00 00 00 00 65 00 00 00 00 00 00 00  V.......e.......
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 8+8 t=1 "".store_be16_idx+0
aux for "".store_be16_idx SDWARFLOC size=215
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 6b 00 00 00 00 00 00 00  ........k.......
	0x0020 0b 00 9c 93 08 91 08 93 08 91 10 93 08 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 ff ff ff  ................
	0x0040 ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 6b 00 00 00 00 00 00 00 02 00 91  .....k..........
	0x0060 18 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00  ................
	0x0080 00 27 00 00 00 00 00 00 00 65 00 00 00 00 00 00  .'.......e......
	0x0090 00 01 00 52 00 00 00 00 00 00 00 00 00 00 00 00  ...R............
	0x00a0 00 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00  ................
	0x00b0 00 00 00 00 24 00 00 00 00 00 00 00 43 00 00 00  ....$.......C...
	0x00c0 00 00 00 00 01 00 51 00 00 00 00 00 00 00 00 00  ......Q.........
	0x00d0 00 00 00 00 00 00 00                             .......
	rel 8+8 t=1 "".store_be16_idx+0
	rel 69+8 t=1 "".store_be16_idx+0
	rel 121+8 t=1 "".store_be16_idx+0
	rel 172+8 t=1 "".store_be16_idx+0
aux for "".store_be16_idx SDWARFLINES size=52
	0x0000 04 02 0a 03 b4 03 14 a0 06 41 04 03 06 08 03 af  .........A......
	0x0010 7d 97 06 37 06 24 38 06 41 04 02 06 03 ce 02 3c  }..7.$8.A......<
	0x0020 04 03 06 03 af 7d 6f 04 02 03 d0 02 aa 06 41 02  .....}o.......A.
	0x0030 01 00 01 01                                      ....
aux for "".store_be16_idx SDWARFINFO size=127
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 73 74 6f 72 65 5f 62 65  guments.store_be
	0x0020 31 36 5f 69 64 78 00 00 00 00 00 00 00 00 00 00  16_idx..........
	0x0030 00 00 00 00 00 00 00 01 9c 02 00 00 00 01 10 62  ...............b
	0x0040 00 00 ba 03 00 00 00 00 00 00 00 00 10 69 64 78  .............idx
	0x0050 00 00 ba 03 00 00 00 00 00 00 00 00 07 00 00 00  ................
	0x0060 00 00 00 00 00 02 00 00 00 bf 03 13 00 00 00 00  ................
	0x0070 00 00 00 00 13 00 00 00 00 00 00 00 00 00 00     ...............
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 39+8 t=1 "".store_be16_idx+0
	rel 47+8 t=1 "".store_be16_idx+107
	rel 68+4 t=29 go.info.[]uint8+0
	rel 72+4 t=29 +0
	rel 84+4 t=29 go.info.int+0
	rel 88+4 t=29 +61
	rel 93+4 t=29 go.info.encoding/binary.bigEndian.PutUint16$abstract+0
	rel 97+4 t=29 +0
	rel 108+4 t=29 go.info.encoding/binary.bigEndian.PutUint16$abstract+39
	rel 112+4 t=29 +113
	rel 117+4 t=29 go.info.encoding/binary.bigEndian.PutUint16$abstract+47
	rel 121+4 t=29 +164
aux for "".store_le_byte_2 SDWARFLOC size=109
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 3c 00 00 00 00 00 00 00  ........<.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 3c 00 00 00 00 00 00 00 02 00 91 18 00 00 00  .<..............
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00           .............
	rel 8+8 t=1 "".store_le_byte_2+0
	rel 65+8 t=1 "".store_le_byte_2+0
aux for "".store_le_byte_2 SDWARFLINES size=27
	0x0000 04 02 0a 03 bc 03 14 9c 06 41 06 4f 06 41 06 6a  .........A.O.A.j
	0x0010 06 03 7f 6f 06 73 02 01 00 01 01                 ...o.s.....
aux for "".store_le_byte_2 SDWARFINFO size=94
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 73 74 6f 72 65 5f 6c 65  guments.store_le
	0x0020 5f 62 79 74 65 5f 32 00 00 00 00 00 00 00 00 00  _byte_2.........
	0x0030 00 00 00 00 00 00 00 00 01 9c 02 00 00 00 01 10  ................
	0x0040 62 00 00 c2 03 00 00 00 00 00 00 00 00 10 76 61  b.............va
	0x0050 6c 00 00 c2 03 00 00 00 00 00 00 00 00 00        l.............
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.uint16+0
	rel 40+8 t=1 "".store_le_byte_2+0
	rel 48+8 t=1 "".store_le_byte_2+60
	rel 69+4 t=29 go.info.[]uint8+0
	rel 73+4 t=29 +0
	rel 85+4 t=29 go.info.uint16+0
	rel 89+4 t=29 +57
aux for "".store_le_byte_2_inv SDWARFLOC size=109
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 3c 00 00 00 00 00 00 00  ........<.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 3c 00 00 00 00 00 00 00 02 00 91 18 00 00 00  .<..............
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00           .............
	rel 8+8 t=1 "".store_le_byte_2_inv+0
	rel 65+8 t=1 "".store_le_byte_2_inv+0
aux for "".store_le_byte_2_inv SDWARFLINES size=25
	0x0000 04 02 0a 03 c4 03 14 9c 06 41 06 4e 06 41 06 6a  .........A.N.A.j
	0x0010 06 6f 06 73 02 01 00 01 01                       .o.s.....
aux for "".store_le_byte_2_inv SDWARFINFO size=98
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 73 74 6f 72 65 5f 6c 65  guments.store_le
	0x0020 5f 62 79 74 65 5f 32 5f 69 6e 76 00 00 00 00 00  _byte_2_inv.....
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 01 9c 02 00  ................
	0x0040 00 00 01 10 62 00 00 ca 03 00 00 00 00 00 00 00  ....b...........
	0x0050 00 10 76 61 6c 00 00 ca 03 00 00 00 00 00 00 00  ..val...........
	0x0060 00 00                                            ..
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.uint16+0
	rel 44+8 t=1 "".store_le_byte_2_inv+0
	rel 52+8 t=1 "".store_le_byte_2_inv+60
	rel 73+4 t=29 go.info.[]uint8+0
	rel 77+4 t=29 +0
	rel 89+4 t=29 go.info.uint16+0
	rel 93+4 t=29 +57
aux for "".store_le_byte_4 SDWARFLOC size=109
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 3a 00 00 00 00 00 00 00  ........:.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 3a 00 00 00 00 00 00 00 02 00 91 18 00 00 00  .:..............
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00           .............
	rel 8+8 t=1 "".store_le_byte_4+0
	rel 65+8 t=1 "".store_le_byte_4+0
aux for "".store_le_byte_4 SDWARFLINES size=27
	0x0000 04 02 0a 03 cb 03 14 9c 06 41 06 4f 06 37 06 60  .........A.O.7.`
	0x0010 06 03 7f 6f 06 73 02 01 00 01 01                 ...o.s.....
aux for "".store_le_byte_4 SDWARFINFO size=94
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 73 74 6f 72 65 5f 6c 65  guments.store_le
	0x0020 5f 62 79 74 65 5f 34 00 00 00 00 00 00 00 00 00  _byte_4.........
	0x0030 00 00 00 00 00 00 00 00 01 9c 02 00 00 00 01 10  ................
	0x0040 62 00 00 d1 03 00 00 00 00 00 00 00 00 10 76 61  b.............va
	0x0050 6c 00 00 d1 03 00 00 00 00 00 00 00 00 00        l.............
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.uint32+0
	rel 40+8 t=1 "".store_le_byte_4+0
	rel 48+8 t=1 "".store_le_byte_4+58
	rel 69+4 t=29 go.info.[]uint8+0
	rel 73+4 t=29 +0
	rel 85+4 t=29 go.info.uint32+0
	rel 89+4 t=29 +57
aux for "".store_le_byte_8 SDWARFLOC size=109
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 3c 00 00 00 00 00 00 00  ........<.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 3c 00 00 00 00 00 00 00 02 00 91 18 00 00 00  .<..............
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00           .............
	rel 8+8 t=1 "".store_le_byte_8+0
	rel 65+8 t=1 "".store_le_byte_8+0
aux for "".store_le_byte_8 SDWARFLINES size=25
	0x0000 04 02 0a 03 d3 03 14 9c 06 41 06 4e 06 41 06 6a  .........A.N.A.j
	0x0010 06 6f 06 73 02 01 00 01 01                       .o.s.....
aux for "".store_le_byte_8 SDWARFINFO size=94
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 73 74 6f 72 65 5f 6c 65  guments.store_le
	0x0020 5f 62 79 74 65 5f 38 00 00 00 00 00 00 00 00 00  _byte_8.........
	0x0030 00 00 00 00 00 00 00 00 01 9c 02 00 00 00 01 10  ................
	0x0040 62 00 00 d9 03 00 00 00 00 00 00 00 00 10 76 61  b.............va
	0x0050 6c 00 00 d9 03 00 00 00 00 00 00 00 00 00        l.............
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.uint64+0
	rel 40+8 t=1 "".store_le_byte_8+0
	rel 48+8 t=1 "".store_le_byte_8+60
	rel 69+4 t=29 go.info.[]uint8+0
	rel 73+4 t=29 +0
	rel 85+4 t=29 go.info.uint64+0
	rel 89+4 t=29 +57
aux for "".store_be_byte_2 SDWARFLOC size=109
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00  ........@.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 40 00 00 00 00 00 00 00 02 00 91 18 00 00 00  .@..............
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00           .............
	rel 8+8 t=1 "".store_be_byte_2+0
	rel 65+8 t=1 "".store_be_byte_2+0
aux for "".store_be_byte_2 SDWARFLINES size=25
	0x0000 04 02 0a 03 da 03 14 9c 06 41 06 4e 06 41 06 92  .........A.N.A..
	0x0010 06 6f 06 73 02 01 00 01 01                       .o.s.....
aux for "".store_be_byte_2 SDWARFINFO size=94
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 73 74 6f 72 65 5f 62 65  guments.store_be
	0x0020 5f 62 79 74 65 5f 32 00 00 00 00 00 00 00 00 00  _byte_2.........
	0x0030 00 00 00 00 00 00 00 00 01 9c 02 00 00 00 01 10  ................
	0x0040 62 00 00 e0 03 00 00 00 00 00 00 00 00 10 76 61  b.............va
	0x0050 6c 00 00 e0 03 00 00 00 00 00 00 00 00 00        l.............
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.uint16+0
	rel 40+8 t=1 "".store_be_byte_2+0
	rel 48+8 t=1 "".store_be_byte_2+64
	rel 69+4 t=29 go.info.[]uint8+0
	rel 73+4 t=29 +0
	rel 85+4 t=29 go.info.uint16+0
	rel 89+4 t=29 +57
aux for "".store_be_byte_4 SDWARFLOC size=109
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 3c 00 00 00 00 00 00 00  ........<.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 3c 00 00 00 00 00 00 00 02 00 91 18 00 00 00  .<..............
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00           .............
	rel 8+8 t=1 "".store_be_byte_4+0
	rel 65+8 t=1 "".store_be_byte_4+0
aux for "".store_be_byte_4 SDWARFLINES size=25
	0x0000 04 02 0a 03 e1 03 14 9c 06 41 06 4e 06 37 06 74  .........A.N.7.t
	0x0010 06 6f 06 73 02 01 00 01 01                       .o.s.....
aux for "".store_be_byte_4 SDWARFINFO size=94
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 73 74 6f 72 65 5f 62 65  guments.store_be
	0x0020 5f 62 79 74 65 5f 34 00 00 00 00 00 00 00 00 00  _byte_4.........
	0x0030 00 00 00 00 00 00 00 00 01 9c 02 00 00 00 01 10  ................
	0x0040 62 00 00 e7 03 00 00 00 00 00 00 00 00 10 76 61  b.............va
	0x0050 6c 00 00 e7 03 00 00 00 00 00 00 00 00 00        l.............
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.uint32+0
	rel 40+8 t=1 "".store_be_byte_4+0
	rel 48+8 t=1 "".store_be_byte_4+60
	rel 69+4 t=29 go.info.[]uint8+0
	rel 73+4 t=29 +0
	rel 85+4 t=29 go.info.uint32+0
	rel 89+4 t=29 +57
aux for "".store_be_byte_8 SDWARFLOC size=109
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 3f 00 00 00 00 00 00 00  ........?.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 3f 00 00 00 00 00 00 00 02 00 91 18 00 00 00  .?..............
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00           .............
	rel 8+8 t=1 "".store_be_byte_8+0
	rel 65+8 t=1 "".store_be_byte_8+0
aux for "".store_be_byte_8 SDWARFLINES size=25
	0x0000 04 02 0a 03 e8 03 14 9c 06 41 06 4e 06 41 06 88  .........A.N.A..
	0x0010 06 6f 06 73 02 01 00 01 01                       .o.s.....
aux for "".store_be_byte_8 SDWARFINFO size=94
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 73 74 6f 72 65 5f 62 65  guments.store_be
	0x0020 5f 62 79 74 65 5f 38 00 00 00 00 00 00 00 00 00  _byte_8.........
	0x0030 00 00 00 00 00 00 00 00 01 9c 02 00 00 00 01 10  ................
	0x0040 62 00 00 ee 03 00 00 00 00 00 00 00 00 10 76 61  b.............va
	0x0050 6c 00 00 ee 03 00 00 00 00 00 00 00 00 00        l.............
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.uint64+0
	rel 40+8 t=1 "".store_be_byte_8+0
	rel 48+8 t=1 "".store_be_byte_8+63
	rel 69+4 t=29 go.info.[]uint8+0
	rel 73+4 t=29 +0
	rel 85+4 t=29 go.info.uint64+0
	rel 89+4 t=29 +57
aux for "".store_le_byte_2_idx SDWARFLOC size=161
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 50 00 00 00 00 00 00 00  ........P.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 50 00 00 00 00 00 00 00 02 00 91 18 00 00 00  .P..............
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 ff ff ff  ................
	0x0070 ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 50 00 00 00 00 00 00 00 02 00 91  .....P..........
	0x0090 20 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x00a0 00                                               .
	rel 8+8 t=1 "".store_le_byte_2_idx+0
	rel 65+8 t=1 "".store_le_byte_2_idx+0
	rel 117+8 t=1 "".store_le_byte_2_idx+0
aux for "".store_le_byte_2_idx SDWARFLINES size=25
	0x0000 04 02 0a 03 ef 03 14 9c 06 41 06 f8 06 41 06 6a  .........A...A.j
	0x0010 06 6f 06 91 02 01 00 01 01                       .o.......
aux for "".store_le_byte_2_idx SDWARFINFO size=114
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 73 74 6f 72 65 5f 6c 65  guments.store_le
	0x0020 5f 62 79 74 65 5f 32 5f 69 64 78 00 00 00 00 00  _byte_2_idx.....
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 01 9c 02 00  ................
	0x0040 00 00 01 10 62 00 00 f5 03 00 00 00 00 00 00 00  ....b...........
	0x0050 00 10 69 64 78 00 00 f5 03 00 00 00 00 00 00 00  ..idx...........
	0x0060 00 10 76 61 6c 00 00 f5 03 00 00 00 00 00 00 00  ..val...........
	0x0070 00 00                                            ..
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 0+0 t=24 type.uint16+0
	rel 44+8 t=1 "".store_le_byte_2_idx+0
	rel 52+8 t=1 "".store_le_byte_2_idx+80
	rel 73+4 t=29 go.info.[]uint8+0
	rel 77+4 t=29 +0
	rel 89+4 t=29 go.info.int+0
	rel 93+4 t=29 +57
	rel 105+4 t=29 go.info.uint16+0
	rel 109+4 t=29 +109
aux for "".store_le_byte_2_idx_inv SDWARFLOC size=161
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 50 00 00 00 00 00 00 00  ........P.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 50 00 00 00 00 00 00 00 02 00 91 18 00 00 00  .P..............
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 ff ff ff  ................
	0x0070 ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 50 00 00 00 00 00 00 00 02 00 91  .....P..........
	0x0090 20 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x00a0 00                                               .
	rel 8+8 t=1 "".store_le_byte_2_idx_inv+0
	rel 65+8 t=1 "".store_le_byte_2_idx_inv+0
	rel 117+8 t=1 "".store_le_byte_2_idx_inv+0
aux for "".store_le_byte_2_idx_inv SDWARFLINES size=25
	0x0000 04 02 0a 03 f6 03 14 9c 06 41 06 f7 06 41 06 6a  .........A...A.j
	0x0010 06 70 06 91 02 01 00 01 01                       .p.......
aux for "".store_le_byte_2_idx_inv SDWARFINFO size=118
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 73 74 6f 72 65 5f 6c 65  guments.store_le
	0x0020 5f 62 79 74 65 5f 32 5f 69 64 78 5f 69 6e 76 00  _byte_2_idx_inv.
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 01 9c 02 00 00 00 01 10 62 00 00 fc 03 00 00 00  ........b.......
	0x0050 00 00 00 00 00 10 69 64 78 00 00 fc 03 00 00 00  ......idx.......
	0x0060 00 00 00 00 00 10 76 61 6c 00 00 fc 03 00 00 00  ......val.......
	0x0070 00 00 00 00 00 00                                ......
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 0+0 t=24 type.uint16+0
	rel 48+8 t=1 "".store_le_byte_2_idx_inv+0
	rel 56+8 t=1 "".store_le_byte_2_idx_inv+80
	rel 77+4 t=29 go.info.[]uint8+0
	rel 81+4 t=29 +0
	rel 93+4 t=29 go.info.int+0
	rel 97+4 t=29 +57
	rel 109+4 t=29 go.info.uint16+0
	rel 113+4 t=29 +109
aux for "".store_le_byte_4_idx SDWARFLOC size=161
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 86 00 00 00 00 00 00 00  ................
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 86 00 00 00 00 00 00 00 02 00 91 18 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 ff ff ff  ................
	0x0070 ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 86 00 00 00 00 00 00 00 02 00 91  ................
	0x0090 20 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x00a0 00                                               .
	rel 8+8 t=1 "".store_le_byte_4_idx+0
	rel 65+8 t=1 "".store_le_byte_4_idx+0
	rel 117+8 t=1 "".store_le_byte_4_idx+0
aux for "".store_le_byte_4_idx SDWARFLINES size=28
	0x0000 04 02 0a 03 fc 03 14 9c 06 41 06 08 bb 06 37 06  .........A....7.
	0x0010 08 2e 06 70 06 08 5f 02 01 00 01 01              ...p.._.....
aux for "".store_le_byte_4_idx SDWARFINFO size=114
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 73 74 6f 72 65 5f 6c 65  guments.store_le
	0x0020 5f 62 79 74 65 5f 34 5f 69 64 78 00 00 00 00 00  _byte_4_idx.....
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 01 9c 02 00  ................
	0x0040 00 00 01 10 62 00 00 82 04 00 00 00 00 00 00 00  ....b...........
	0x0050 00 10 69 64 78 00 00 82 04 00 00 00 00 00 00 00  ..idx...........
	0x0060 00 10 76 61 6c 00 00 82 04 00 00 00 00 00 00 00  ..val...........
	0x0070 00 00                                            ..
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 0+0 t=24 type.uint32+0
	rel 44+8 t=1 "".store_le_byte_4_idx+0
	rel 52+8 t=1 "".store_le_byte_4_idx+134
	rel 73+4 t=29 go.info.[]uint8+0
	rel 77+4 t=29 +0
	rel 89+4 t=29 go.info.int+0
	rel 93+4 t=29 +57
	rel 105+4 t=29 go.info.uint32+0
	rel 109+4 t=29 +109
aux for "".store_be_byte_2_idx SDWARFLOC size=161
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 54 00 00 00 00 00 00 00  ........T.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 54 00 00 00 00 00 00 00 02 00 91 18 00 00 00  .T..............
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 ff ff ff  ................
	0x0070 ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 54 00 00 00 00 00 00 00 02 00 91  .....T..........
	0x0090 20 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x00a0 00                                               .
	rel 8+8 t=1 "".store_be_byte_2_idx+0
	rel 65+8 t=1 "".store_be_byte_2_idx+0
	rel 117+8 t=1 "".store_be_byte_2_idx+0
aux for "".store_be_byte_2_idx SDWARFLINES size=25
	0x0000 04 02 0a 03 82 04 14 9c 06 41 06 f7 06 41 06 92  .........A...A..
	0x0010 06 70 06 91 02 01 00 01 01                       .p.......
aux for "".store_be_byte_2_idx SDWARFINFO size=114
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 73 74 6f 72 65 5f 62 65  guments.store_be
	0x0020 5f 62 79 74 65 5f 32 5f 69 64 78 00 00 00 00 00  _byte_2_idx.....
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 01 9c 02 00  ................
	0x0040 00 00 01 10 62 00 00 88 04 00 00 00 00 00 00 00  ....b...........
	0x0050 00 10 69 64 78 00 00 88 04 00 00 00 00 00 00 00  ..idx...........
	0x0060 00 10 76 61 6c 00 00 88 04 00 00 00 00 00 00 00  ..val...........
	0x0070 00 00                                            ..
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 0+0 t=24 type.uint16+0
	rel 44+8 t=1 "".store_be_byte_2_idx+0
	rel 52+8 t=1 "".store_be_byte_2_idx+84
	rel 73+4 t=29 go.info.[]uint8+0
	rel 77+4 t=29 +0
	rel 89+4 t=29 go.info.int+0
	rel 93+4 t=29 +57
	rel 105+4 t=29 go.info.uint16+0
	rel 109+4 t=29 +109
aux for "".store_be_byte_4_idx SDWARFLOC size=161
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 76 00 00 00 00 00 00 00  ........v.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 76 00 00 00 00 00 00 00 02 00 91 18 00 00 00  .v..............
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 ff ff ff  ................
	0x0070 ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 76 00 00 00 00 00 00 00 02 00 91  .....v..........
	0x0090 20 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x00a0 00                                               .
	rel 8+8 t=1 "".store_be_byte_4_idx+0
	rel 65+8 t=1 "".store_be_byte_4_idx+0
	rel 117+8 t=1 "".store_be_byte_4_idx+0
aux for "".store_be_byte_4_idx SDWARFLINES size=27
	0x0000 04 02 0a 03 88 04 14 9c 06 41 06 08 bb 06 37 06  .........A....7.
	0x0010 74 06 70 06 08 69 02 01 00 01 01                 t.p..i.....
aux for "".store_be_byte_4_idx SDWARFINFO size=114
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 73 74 6f 72 65 5f 62 65  guments.store_be
	0x0020 5f 62 79 74 65 5f 34 5f 69 64 78 00 00 00 00 00  _byte_4_idx.....
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 01 9c 02 00  ................
	0x0040 00 00 01 10 62 00 00 8e 04 00 00 00 00 00 00 00  ....b...........
	0x0050 00 10 69 64 78 00 00 8e 04 00 00 00 00 00 00 00  ..idx...........
	0x0060 00 10 76 61 6c 00 00 8e 04 00 00 00 00 00 00 00  ..val...........
	0x0070 00 00                                            ..
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 0+0 t=24 type.uint32+0
	rel 44+8 t=1 "".store_be_byte_4_idx+0
	rel 52+8 t=1 "".store_be_byte_4_idx+118
	rel 73+4 t=29 go.info.[]uint8+0
	rel 77+4 t=29 +0
	rel 89+4 t=29 go.info.int+0
	rel 93+4 t=29 +57
	rel 105+4 t=29 go.info.uint32+0
	rel 109+4 t=29 +109
aux for "".store_be_byte_2_idx2 SDWARFLOC size=161
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 6e 00 00 00 00 00 00 00  ........n.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 6e 00 00 00 00 00 00 00 02 00 91 18 00 00 00  .n..............
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 ff ff ff  ................
	0x0070 ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 6e 00 00 00 00 00 00 00 02 00 91  .....n..........
	0x0090 20 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x00a0 00                                               .
	rel 8+8 t=1 "".store_be_byte_2_idx2+0
	rel 65+8 t=1 "".store_be_byte_2_idx2+0
	rel 117+8 t=1 "".store_be_byte_2_idx2+0
aux for "".store_be_byte_2_idx2 SDWARFLINES size=30
	0x0000 04 02 0a 03 8e 04 14 9c 06 41 06 c3 06 2d 06 61  .........A...-.a
	0x0010 06 41 06 08 38 06 70 06 c3 02 01 00 01 01        .A..8.p.......
aux for "".store_be_byte_2_idx2 SDWARFINFO size=115
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 73 74 6f 72 65 5f 62 65  guments.store_be
	0x0020 5f 62 79 74 65 5f 32 5f 69 64 78 32 00 00 00 00  _byte_2_idx2....
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 01 9c 02  ................
	0x0040 00 00 00 01 10 62 00 00 94 04 00 00 00 00 00 00  .....b..........
	0x0050 00 00 10 69 64 78 00 00 94 04 00 00 00 00 00 00  ...idx..........
	0x0060 00 00 10 76 61 6c 00 00 94 04 00 00 00 00 00 00  ...val..........
	0x0070 00 00 00                                         ...
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 0+0 t=24 type.uint16+0
	rel 45+8 t=1 "".store_be_byte_2_idx2+0
	rel 53+8 t=1 "".store_be_byte_2_idx2+110
	rel 74+4 t=29 go.info.[]uint8+0
	rel 78+4 t=29 +0
	rel 90+4 t=29 go.info.int+0
	rel 94+4 t=29 +57
	rel 106+4 t=29 go.info.uint16+0
	rel 110+4 t=29 +109
aux for "".store_le_byte_2_idx2 SDWARFLOC size=161
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 6e 00 00 00 00 00 00 00  ........n.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 6e 00 00 00 00 00 00 00 02 00 91 18 00 00 00  .n..............
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 ff ff ff  ................
	0x0070 ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 6e 00 00 00 00 00 00 00 02 00 91  .....n..........
	0x0090 20 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x00a0 00                                               .
	rel 8+8 t=1 "".store_le_byte_2_idx2+0
	rel 65+8 t=1 "".store_le_byte_2_idx2+0
	rel 117+8 t=1 "".store_le_byte_2_idx2+0
aux for "".store_le_byte_2_idx2 SDWARFLINES size=30
	0x0000 04 02 0a 03 94 04 14 9c 06 41 06 c3 06 2d 06 61  .........A...-.a
	0x0010 06 41 06 08 38 06 70 06 c3 02 01 00 01 01        .A..8.p.......
aux for "".store_le_byte_2_idx2 SDWARFINFO size=115
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 73 74 6f 72 65 5f 6c 65  guments.store_le
	0x0020 5f 62 79 74 65 5f 32 5f 69 64 78 32 00 00 00 00  _byte_2_idx2....
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 01 9c 02  ................
	0x0040 00 00 00 01 10 62 00 00 9a 04 00 00 00 00 00 00  .....b..........
	0x0050 00 00 10 69 64 78 00 00 9a 04 00 00 00 00 00 00  ...idx..........
	0x0060 00 00 10 76 61 6c 00 00 9a 04 00 00 00 00 00 00  ...val..........
	0x0070 00 00 00                                         ...
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 0+0 t=24 type.uint16+0
	rel 45+8 t=1 "".store_le_byte_2_idx2+0
	rel 53+8 t=1 "".store_le_byte_2_idx2+110
	rel 74+4 t=29 go.info.[]uint8+0
	rel 78+4 t=29 +0
	rel 90+4 t=29 go.info.int+0
	rel 94+4 t=29 +57
	rel 106+4 t=29 go.info.uint16+0
	rel 110+4 t=29 +109
aux for "".store_be_byte_4_idx4 SDWARFLOC size=161
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 a6 00 00 00 00 00 00 00  ................
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 a6 00 00 00 00 00 00 00 02 00 91 18 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 ff ff ff  ................
	0x0070 ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 a6 00 00 00 00 00 00 00 02 00 91  ................
	0x0090 20 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x00a0 00                                               .
	rel 8+8 t=1 "".store_be_byte_4_idx4+0
	rel 65+8 t=1 "".store_be_byte_4_idx4+0
	rel 117+8 t=1 "".store_be_byte_4_idx4+0
aux for "".store_be_byte_4_idx4 SDWARFLINES size=29
	0x0000 04 02 0a 03 9a 04 14 9c 06 41 06 08 d9 06 41 06  .........A....A.
	0x0010 02 22 f6 06 70 06 08 4b 02 01 00 01 01           ."..p..K.....
aux for "".store_be_byte_4_idx4 SDWARFINFO size=115
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 73 74 6f 72 65 5f 62 65  guments.store_be
	0x0020 5f 62 79 74 65 5f 34 5f 69 64 78 34 00 00 00 00  _byte_4_idx4....
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 01 9c 02  ................
	0x0040 00 00 00 01 10 62 00 00 a0 04 00 00 00 00 00 00  .....b..........
	0x0050 00 00 10 69 64 78 00 00 a0 04 00 00 00 00 00 00  ...idx..........
	0x0060 00 00 10 76 61 6c 00 00 a0 04 00 00 00 00 00 00  ...val..........
	0x0070 00 00 00                                         ...
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 0+0 t=24 type.uint32+0
	rel 45+8 t=1 "".store_be_byte_4_idx4+0
	rel 53+8 t=1 "".store_be_byte_4_idx4+166
	rel 74+4 t=29 go.info.[]uint8+0
	rel 78+4 t=29 +0
	rel 90+4 t=29 go.info.int+0
	rel 94+4 t=29 +57
	rel 106+4 t=29 go.info.uint32+0
	rel 110+4 t=29 +109
aux for "".store_le_byte_4_idx4_inv SDWARFLOC size=161
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 a6 00 00 00 00 00 00 00  ................
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 a6 00 00 00 00 00 00 00 02 00 91 18 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 ff ff ff  ................
	0x0070 ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 a6 00 00 00 00 00 00 00 02 00 91  ................
	0x0090 20 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x00a0 00                                               .
	rel 8+8 t=1 "".store_le_byte_4_idx4_inv+0
	rel 65+8 t=1 "".store_le_byte_4_idx4_inv+0
	rel 117+8 t=1 "".store_le_byte_4_idx4_inv+0
aux for "".store_le_byte_4_idx4_inv SDWARFLINES size=29
	0x0000 04 02 0a 03 a0 04 14 9c 06 41 06 08 d9 06 41 06  .........A....A.
	0x0010 02 22 f6 06 70 06 08 4b 02 01 00 01 01           ."..p..K.....
aux for "".store_le_byte_4_idx4_inv SDWARFINFO size=119
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 73 74 6f 72 65 5f 6c 65  guments.store_le
	0x0020 5f 62 79 74 65 5f 34 5f 69 64 78 34 5f 69 6e 76  _byte_4_idx4_inv
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 01 9c 02 00 00 00 01 10 62 00 00 a6 04 00 00  .........b......
	0x0050 00 00 00 00 00 00 10 69 64 78 00 00 a6 04 00 00  .......idx......
	0x0060 00 00 00 00 00 00 10 76 61 6c 00 00 a6 04 00 00  .......val......
	0x0070 00 00 00 00 00 00 00                             .......
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 0+0 t=24 type.uint32+0
	rel 49+8 t=1 "".store_le_byte_4_idx4_inv+0
	rel 57+8 t=1 "".store_le_byte_4_idx4_inv+166
	rel 78+4 t=29 go.info.[]uint8+0
	rel 82+4 t=29 +0
	rel 94+4 t=29 go.info.int+0
	rel 98+4 t=29 +57
	rel 110+4 t=29 go.info.uint32+0
	rel 114+4 t=29 +109
aux for "".zero_byte_2 SDWARFLOC size=115
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 59 00 00 00 00 00 00 00  ........Y.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 59 00 00 00 00 00 00 00 08 00 91 18 93 08 91  .Y..............
	0x0060 20 93 08 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x0070 00 00 00                                         ...
	rel 8+8 t=1 "".zero_byte_2+0
	rel 65+8 t=1 "".zero_byte_2+0
aux for "".zero_byte_2 SDWARFLINES size=31
	0x0000 04 02 0a 03 ac 04 14 9d 06 41 06 d1 06 41 06 45  .........A...A.E
	0x0010 06 41 06 42 06 03 7b 6f 06 d7 02 01 00 01 01     .A.B..{o.......
aux for "".zero_byte_2 SDWARFINFO size=90
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 7a 65 72 6f 5f 62 79 74  guments.zero_byt
	0x0020 65 5f 32 00 00 00 00 00 00 00 00 00 00 00 00 00  e_2.............
	0x0030 00 00 00 00 01 9c 02 00 00 00 01 10 62 31 00 00  ............b1..
	0x0040 b2 04 00 00 00 00 00 00 00 00 10 62 32 00 00 b2  ...........b2...
	0x0050 04 00 00 00 00 00 00 00 00 00                    ..........
	rel 0+0 t=24 type.[]uint8+0
	rel 36+8 t=1 "".zero_byte_2+0
	rel 44+8 t=1 "".zero_byte_2+89
	rel 66+4 t=29 go.info.[]uint8+0
	rel 70+4 t=29 +0
	rel 81+4 t=29 go.info.[]uint8+0
	rel 85+4 t=29 +57
aux for "".zero_byte_4 SDWARFLOC size=115
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 5b 00 00 00 00 00 00 00  ........[.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 5b 00 00 00 00 00 00 00 08 00 91 18 93 08 91  .[..............
	0x0060 20 93 08 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x0070 00 00 00                                         ...
	rel 8+8 t=1 "".zero_byte_4+0
	rel 65+8 t=1 "".zero_byte_4+0
aux for "".zero_byte_4 SDWARFLINES size=31
	0x0000 04 02 0a 03 b9 04 14 9c 06 41 06 d1 06 41 06 4d  .........A...A.M
	0x0010 06 41 06 4c 06 03 7d 6f 06 d7 02 01 00 01 01     .A.L..}o.......
aux for "".zero_byte_4 SDWARFINFO size=90
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 7a 65 72 6f 5f 62 79 74  guments.zero_byt
	0x0020 65 5f 34 00 00 00 00 00 00 00 00 00 00 00 00 00  e_4.............
	0x0030 00 00 00 00 01 9c 02 00 00 00 01 10 62 31 00 00  ............b1..
	0x0040 bf 04 00 00 00 00 00 00 00 00 10 62 32 00 00 bf  ...........b2...
	0x0050 04 00 00 00 00 00 00 00 00 00                    ..........
	rel 0+0 t=24 type.[]uint8+0
	rel 36+8 t=1 "".zero_byte_4+0
	rel 44+8 t=1 "".zero_byte_4+91
	rel 66+4 t=29 go.info.[]uint8+0
	rel 70+4 t=29 +0
	rel 81+4 t=29 go.info.[]uint8+0
	rel 85+4 t=29 +57
aux for "".zero_byte_8 SDWARFLOC size=57
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 3a 00 00 00 00 00 00 00  ........:.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=1 "".zero_byte_8+0
aux for "".zero_byte_8 SDWARFLINES size=25
	0x0000 04 02 0a 03 c3 04 14 9c 06 41 06 4d 06 41 06 56  .........A.M.A.V
	0x0010 06 70 06 73 02 01 00 01 01                       .p.s.....
aux for "".zero_byte_8 SDWARFINFO size=74
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 7a 65 72 6f 5f 62 79 74  guments.zero_byt
	0x0020 65 5f 38 00 00 00 00 00 00 00 00 00 00 00 00 00  e_8.............
	0x0030 00 00 00 00 01 9c 02 00 00 00 01 10 62 00 00 c9  ............b...
	0x0040 04 00 00 00 00 00 00 00 00 00                    ..........
	rel 0+0 t=24 type.[]uint8+0
	rel 36+8 t=1 "".zero_byte_8+0
	rel 44+8 t=1 "".zero_byte_8+58
	rel 65+4 t=29 go.info.[]uint8+0
	rel 69+4 t=29 +0
aux for "".zero_byte_16 SDWARFLOC size=57
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 39 00 00 00 00 00 00 00  ........9.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=1 "".zero_byte_16+0
aux for "".zero_byte_16 SDWARFLINES size=27
	0x0000 04 02 0a 03 c9 04 14 9c 06 41 06 4f 06 2d 06 60  .........A.O.-.`
	0x0010 06 03 7f 6f 06 73 02 01 00 01 01                 ...o.s.....
aux for "".zero_byte_16 SDWARFINFO size=75
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 7a 65 72 6f 5f 62 79 74  guments.zero_byt
	0x0020 65 5f 31 36 00 00 00 00 00 00 00 00 00 00 00 00  e_16............
	0x0030 00 00 00 00 00 01 9c 02 00 00 00 01 10 62 00 00  .............b..
	0x0040 cf 04 00 00 00 00 00 00 00 00 00                 ...........
	rel 0+0 t=24 type.[]uint8+0
	rel 37+8 t=1 "".zero_byte_16+0
	rel 45+8 t=1 "".zero_byte_16+57
	rel 66+4 t=29 go.info.[]uint8+0
	rel 70+4 t=29 +0
aux for "".zero_byte_30 SDWARFLOC size=51
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x0020 01 00 9c 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00                                         ...
	rel 8+8 t=1 "".zero_byte_30+0
aux for "".zero_byte_30 SDWARFLINES size=15
	0x0000 04 02 03 d2 04 14 06 2d 06 88 02 01 00 01 01     .......-.......
aux for "".zero_byte_30 SDWARFINFO size=75
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 7a 65 72 6f 5f 62 79 74  guments.zero_byt
	0x0020 65 5f 33 30 00 00 00 00 00 00 00 00 00 00 00 00  e_30............
	0x0030 00 00 00 00 00 01 9c 02 00 00 00 01 10 61 00 00  .............a..
	0x0040 d7 04 00 00 00 00 00 00 00 00 00                 ...........
	rel 0+0 t=24 type.*[30]uint8+0
	rel 37+8 t=1 "".zero_byte_30+0
	rel 45+8 t=1 "".zero_byte_30+16
	rel 66+4 t=29 go.info.*[30]uint8+0
	rel 70+4 t=29 +0
aux for "".zero_byte_39 SDWARFLOC size=51
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 18 00 00 00 00 00 00 00  ................
	0x0020 01 00 9c 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00                                         ...
	rel 8+8 t=1 "".zero_byte_39+0
aux for "".zero_byte_39 SDWARFLINES size=15
	0x0000 04 02 03 d6 04 14 06 41 06 c4 02 01 00 01 01     .......A.......
aux for "".zero_byte_39 SDWARFINFO size=75
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 7a 65 72 6f 5f 62 79 74  guments.zero_byt
	0x0020 65 5f 33 39 00 00 00 00 00 00 00 00 00 00 00 00  e_39............
	0x0030 00 00 00 00 00 01 9c 02 00 00 00 01 10 61 00 00  .............a..
	0x0040 db 04 00 00 00 00 00 00 00 00 00                 ...........
	rel 0+0 t=24 type.*[39]uint8+0
	rel 37+8 t=1 "".zero_byte_39+0
	rel 45+8 t=1 "".zero_byte_39+24
	rel 66+4 t=29 go.info.*[39]uint8+0
	rel 70+4 t=29 +0
aux for "".zero_byte_2_idx SDWARFLOC size=109
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 50 00 00 00 00 00 00 00  ........P.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 50 00 00 00 00 00 00 00 02 00 91 18 00 00 00  .P..............
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00           .............
	rel 8+8 t=1 "".zero_byte_2_idx+0
	rel 65+8 t=1 "".zero_byte_2_idx+0
aux for "".zero_byte_2_idx SDWARFLINES size=25
	0x0000 04 02 0a 03 d9 04 14 9c 06 41 06 f7 06 41 06 6a  .........A...A.j
	0x0010 06 70 06 91 02 01 00 01 01                       .p.......
aux for "".zero_byte_2_idx SDWARFINFO size=94
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 7a 65 72 6f 5f 62 79 74  guments.zero_byt
	0x0020 65 5f 32 5f 69 64 78 00 00 00 00 00 00 00 00 00  e_2_idx.........
	0x0030 00 00 00 00 00 00 00 00 01 9c 02 00 00 00 01 10  ................
	0x0040 62 00 00 df 04 00 00 00 00 00 00 00 00 10 69 64  b.............id
	0x0050 78 00 00 df 04 00 00 00 00 00 00 00 00 00        x.............
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 40+8 t=1 "".zero_byte_2_idx+0
	rel 48+8 t=1 "".zero_byte_2_idx+80
	rel 69+4 t=29 go.info.[]uint8+0
	rel 73+4 t=29 +0
	rel 85+4 t=29 go.info.int+0
	rel 89+4 t=29 +57
aux for "".zero_byte_2_idx2 SDWARFLOC size=109
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 5f 00 00 00 00 00 00 00  ........_.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 5f 00 00 00 00 00 00 00 02 00 91 18 00 00 00  ._..............
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00           .............
	rel 8+8 t=1 "".zero_byte_2_idx2+0
	rel 65+8 t=1 "".zero_byte_2_idx2+0
aux for "".zero_byte_2_idx2 SDWARFLINES size=29
	0x0000 04 02 0a 03 df 04 14 9c 06 41 06 c3 06 2d 06 61  .........A...-.a
	0x0010 06 41 06 c4 06 70 06 91 02 01 00 01 01           .A...p.......
aux for "".zero_byte_2_idx2 SDWARFINFO size=95
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 7a 65 72 6f 5f 62 79 74  guments.zero_byt
	0x0020 65 5f 32 5f 69 64 78 32 00 00 00 00 00 00 00 00  e_2_idx2........
	0x0030 00 00 00 00 00 00 00 00 00 01 9c 02 00 00 00 01  ................
	0x0040 10 62 00 00 e5 04 00 00 00 00 00 00 00 00 10 69  .b.............i
	0x0050 64 78 00 00 e5 04 00 00 00 00 00 00 00 00 00     dx.............
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 41+8 t=1 "".zero_byte_2_idx2+0
	rel 49+8 t=1 "".zero_byte_2_idx2+95
	rel 70+4 t=29 go.info.[]uint8+0
	rel 74+4 t=29 +0
	rel 86+4 t=29 go.info.int+0
	rel 90+4 t=29 +57
aux for "".zero_uint16_2 SDWARFLOC size=115
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 5b 00 00 00 00 00 00 00  ........[.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 5b 00 00 00 00 00 00 00 08 00 91 18 93 08 91  .[..............
	0x0060 20 93 08 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x0070 00 00 00                                         ...
	rel 8+8 t=1 "".zero_uint16_2+0
	rel 65+8 t=1 "".zero_uint16_2+0
aux for "".zero_uint16_2 SDWARFLINES size=31
	0x0000 04 02 0a 03 e5 04 14 9c 06 41 06 d1 06 41 06 4f  .........A...A.O
	0x0010 06 41 06 4c 06 03 7b 6f 06 d7 02 01 00 01 01     .A.L..{o.......
aux for "".zero_uint16_2 SDWARFINFO size=92
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 7a 65 72 6f 5f 75 69 6e  guments.zero_uin
	0x0020 74 31 36 5f 32 00 00 00 00 00 00 00 00 00 00 00  t16_2...........
	0x0030 00 00 00 00 00 00 01 9c 02 00 00 00 01 10 68 31  ..............h1
	0x0040 00 00 eb 04 00 00 00 00 00 00 00 00 10 68 32 00  .............h2.
	0x0050 00 eb 04 00 00 00 00 00 00 00 00 00              ............
	rel 0+0 t=24 type.[]uint16+0
	rel 38+8 t=1 "".zero_uint16_2+0
	rel 46+8 t=1 "".zero_uint16_2+91
	rel 68+4 t=29 go.info.[]uint16+0
	rel 72+4 t=29 +0
	rel 83+4 t=29 go.info.[]uint16+0
	rel 87+4 t=29 +57
aux for "".zero_uint16_4 SDWARFLOC size=115
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 5d 00 00 00 00 00 00 00  ........].......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 5d 00 00 00 00 00 00 00 08 00 91 18 93 08 91  .]..............
	0x0060 20 93 08 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x0070 00 00 00                                         ...
	rel 8+8 t=1 "".zero_uint16_4+0
	rel 65+8 t=1 "".zero_uint16_4+0
aux for "".zero_uint16_4 SDWARFLINES size=31
	0x0000 04 02 0a 03 f1 04 14 9c 06 41 06 d0 06 41 06 57  .........A...A.W
	0x0010 06 41 06 56 06 03 7e 6f 06 d7 02 01 00 01 01     .A.V..~o.......
aux for "".zero_uint16_4 SDWARFINFO size=92
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 7a 65 72 6f 5f 75 69 6e  guments.zero_uin
	0x0020 74 31 36 5f 34 00 00 00 00 00 00 00 00 00 00 00  t16_4...........
	0x0030 00 00 00 00 00 00 01 9c 02 00 00 00 01 10 68 31  ..............h1
	0x0040 00 00 f7 04 00 00 00 00 00 00 00 00 10 68 32 00  .............h2.
	0x0050 00 f7 04 00 00 00 00 00 00 00 00 00              ............
	rel 0+0 t=24 type.[]uint16+0
	rel 38+8 t=1 "".zero_uint16_4+0
	rel 46+8 t=1 "".zero_uint16_4+93
	rel 68+4 t=29 go.info.[]uint16+0
	rel 72+4 t=29 +0
	rel 83+4 t=29 go.info.[]uint16+0
	rel 87+4 t=29 +57
aux for "".zero_uint16_8 SDWARFLOC size=57
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 39 00 00 00 00 00 00 00  ........9.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=1 "".zero_uint16_8+0
aux for "".zero_uint16_8 SDWARFLINES size=25
	0x0000 04 02 0a 03 fa 04 14 9c 06 41 06 4d 06 2d 06 60  .........A.M.-.`
	0x0010 06 70 06 73 02 01 00 01 01                       .p.s.....
aux for "".zero_uint16_8 SDWARFINFO size=76
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 7a 65 72 6f 5f 75 69 6e  guments.zero_uin
	0x0020 74 31 36 5f 38 00 00 00 00 00 00 00 00 00 00 00  t16_8...........
	0x0030 00 00 00 00 00 00 01 9c 02 00 00 00 01 10 68 00  ..............h.
	0x0040 00 80 05 00 00 00 00 00 00 00 00 00              ............
	rel 0+0 t=24 type.[]uint16+0
	rel 38+8 t=1 "".zero_uint16_8+0
	rel 46+8 t=1 "".zero_uint16_8+57
	rel 67+4 t=29 go.info.[]uint16+0
	rel 71+4 t=29 +0
aux for "".zero_uint32_2 SDWARFLOC size=115
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 5d 00 00 00 00 00 00 00  ........].......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 5d 00 00 00 00 00 00 00 08 00 91 18 93 08 91  .]..............
	0x0060 20 93 08 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x0070 00 00 00                                         ...
	rel 8+8 t=1 "".zero_uint32_2+0
	rel 65+8 t=1 "".zero_uint32_2+0
aux for "".zero_uint32_2 SDWARFLINES size=31
	0x0000 04 02 0a 03 80 05 14 9c 06 41 06 d0 06 41 06 58  .........A...A.X
	0x0010 06 41 06 56 06 03 7d 6f 06 d7 02 01 00 01 01     .A.V..}o.......
aux for "".zero_uint32_2 SDWARFINFO size=92
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 7a 65 72 6f 5f 75 69 6e  guments.zero_uin
	0x0020 74 33 32 5f 32 00 00 00 00 00 00 00 00 00 00 00  t32_2...........
	0x0030 00 00 00 00 00 00 01 9c 02 00 00 00 01 10 77 31  ..............w1
	0x0040 00 00 86 05 00 00 00 00 00 00 00 00 10 77 32 00  .............w2.
	0x0050 00 86 05 00 00 00 00 00 00 00 00 00              ............
	rel 0+0 t=24 type.[]uint32+0
	rel 38+8 t=1 "".zero_uint32_2+0
	rel 46+8 t=1 "".zero_uint32_2+93
	rel 68+4 t=29 go.info.[]uint32+0
	rel 72+4 t=29 +0
	rel 83+4 t=29 go.info.[]uint32+0
	rel 87+4 t=29 +57
aux for "".zero_uint32_4 SDWARFLOC size=115
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 66 00 00 00 00 00 00 00  ........f.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 66 00 00 00 00 00 00 00 08 00 91 18 93 08 91  .f..............
	0x0060 20 93 08 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x0070 00 00 00                                         ...
	rel 8+8 t=1 "".zero_uint32_4+0
	rel 65+8 t=1 "".zero_uint32_4+0
aux for "".zero_uint32_4 SDWARFLINES size=29
	0x0000 04 02 0a 03 8a 05 14 9c 06 41 06 ce 06 2d 06 60  .........A...-.`
	0x0010 06 41 06 a6 06 70 06 eb 02 01 00 01 01           .A...p.......
aux for "".zero_uint32_4 SDWARFINFO size=92
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 7a 65 72 6f 5f 75 69 6e  guments.zero_uin
	0x0020 74 33 32 5f 34 00 00 00 00 00 00 00 00 00 00 00  t32_4...........
	0x0030 00 00 00 00 00 00 01 9c 02 00 00 00 01 10 77 31  ..............w1
	0x0040 00 00 90 05 00 00 00 00 00 00 00 00 10 77 32 00  .............w2.
	0x0050 00 90 05 00 00 00 00 00 00 00 00 00              ............
	rel 0+0 t=24 type.[]uint32+0
	rel 38+8 t=1 "".zero_uint32_4+0
	rel 46+8 t=1 "".zero_uint32_4+102
	rel 68+4 t=29 go.info.[]uint32+0
	rel 72+4 t=29 +0
	rel 83+4 t=29 go.info.[]uint32+0
	rel 87+4 t=29 +57
aux for "".zero_uint64_2 SDWARFLOC size=115
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 66 00 00 00 00 00 00 00  ........f.......
	0x0020 07 00 9c 93 08 91 08 93 08 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0040 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 66 00 00 00 00 00 00 00 08 00 91 18 93 08 91  .f..............
	0x0060 20 93 08 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x0070 00 00 00                                         ...
	rel 8+8 t=1 "".zero_uint64_2+0
	rel 65+8 t=1 "".zero_uint64_2+0
aux for "".zero_uint64_2 SDWARFLINES size=29
	0x0000 04 02 0a 03 90 05 14 9c 06 41 06 ce 06 2d 06 60  .........A...-.`
	0x0010 06 41 06 a6 06 70 06 eb 02 01 00 01 01           .A...p.......
aux for "".zero_uint64_2 SDWARFINFO size=92
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 7a 65 72 6f 5f 75 69 6e  guments.zero_uin
	0x0020 74 36 34 5f 32 00 00 00 00 00 00 00 00 00 00 00  t64_2...........
	0x0030 00 00 00 00 00 00 01 9c 02 00 00 00 01 10 64 31  ..............d1
	0x0040 00 00 96 05 00 00 00 00 00 00 00 00 10 64 32 00  .............d2.
	0x0050 00 96 05 00 00 00 00 00 00 00 00 00              ............
	rel 0+0 t=24 type.[]uint64+0
	rel 38+8 t=1 "".zero_uint64_2+0
	rel 46+8 t=1 "".zero_uint64_2+102
	rel 68+4 t=29 go.info.[]uint64+0
	rel 72+4 t=29 +0
	rel 83+4 t=29 go.info.[]uint64+0
	rel 87+4 t=29 +57
