# command-line-arguments
"".AccessInt1 STEXT size=103 args=0x10 locals=0x28
	0x0000 00000 (/usr/local/go/test/codegen/maps.go:18)	TEXT	"".AccessInt1(SB), ABIInternal, $40-16
	0x0000 00000 (/usr/local/go/test/codegen/maps.go:18)	MOVQ	(TLS), CX
	0x0009 00009 (/usr/local/go/test/codegen/maps.go:18)	CMPQ	SP, 16(CX)
	0x000d 00013 (/usr/local/go/test/codegen/maps.go:18)	PCDATA	$0, $-2
	0x000d 00013 (/usr/local/go/test/codegen/maps.go:18)	JLS	96
	0x000f 00015 (/usr/local/go/test/codegen/maps.go:18)	PCDATA	$0, $-1
	0x000f 00015 (/usr/local/go/test/codegen/maps.go:18)	SUBQ	$40, SP
	0x0013 00019 (/usr/local/go/test/codegen/maps.go:18)	MOVQ	BP, 32(SP)
	0x0018 00024 (/usr/local/go/test/codegen/maps.go:18)	LEAQ	32(SP), BP
	0x001d 00029 (/usr/local/go/test/codegen/maps.go:18)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x001d 00029 (/usr/local/go/test/codegen/maps.go:18)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x001d 00029 (/usr/local/go/test/codegen/maps.go:20)	LEAQ	type.map[int]int(SB), AX
	0x0024 00036 (/usr/local/go/test/codegen/maps.go:20)	MOVQ	AX, (SP)
	0x0028 00040 (/usr/local/go/test/codegen/maps.go:20)	MOVQ	"".m+48(SP), AX
	0x002d 00045 (/usr/local/go/test/codegen/maps.go:20)	MOVQ	AX, 8(SP)
	0x0032 00050 (/usr/local/go/test/codegen/maps.go:20)	MOVQ	$5, 16(SP)
	0x003b 00059 (/usr/local/go/test/codegen/maps.go:20)	PCDATA	$1, $1
	0x003b 00059 (/usr/local/go/test/codegen/maps.go:20)	NOP
	0x0040 00064 (/usr/local/go/test/codegen/maps.go:20)	CALL	runtime.mapaccess1_fast64(SB)
	0x0045 00069 (/usr/local/go/test/codegen/maps.go:20)	MOVQ	24(SP), AX
	0x004a 00074 (/usr/local/go/test/codegen/maps.go:20)	MOVQ	(AX), AX
	0x004d 00077 (/usr/local/go/test/codegen/maps.go:20)	MOVQ	AX, "".~r1+56(SP)
	0x0052 00082 (/usr/local/go/test/codegen/maps.go:20)	MOVQ	32(SP), BP
	0x0057 00087 (/usr/local/go/test/codegen/maps.go:20)	ADDQ	$40, SP
	0x005b 00091 (/usr/local/go/test/codegen/maps.go:20)	RET
	0x005c 00092 (/usr/local/go/test/codegen/maps.go:20)	NOP
	0x005c 00092 (/usr/local/go/test/codegen/maps.go:18)	PCDATA	$1, $-1
	0x005c 00092 (/usr/local/go/test/codegen/maps.go:18)	PCDATA	$0, $-2
	0x005c 00092 (/usr/local/go/test/codegen/maps.go:18)	NOP
	0x0060 00096 (/usr/local/go/test/codegen/maps.go:18)	CALL	runtime.morestack_noctxt(SB)
	0x0065 00101 (/usr/local/go/test/codegen/maps.go:18)	PCDATA	$0, $-1
	0x0065 00101 (/usr/local/go/test/codegen/maps.go:18)	JMP	0
	0x0000 64 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 51 48  dH..%....H;a.vQH
	0x0010 83 ec 28 48 89 6c 24 20 48 8d 6c 24 20 48 8d 05  ..(H.l$ H.l$ H..
	0x0020 00 00 00 00 48 89 04 24 48 8b 44 24 30 48 89 44  ....H..$H.D$0H.D
	0x0030 24 08 48 c7 44 24 10 05 00 00 00 0f 1f 44 00 00  $.H.D$.......D..
	0x0040 e8 00 00 00 00 48 8b 44 24 18 48 8b 00 48 89 44  .....H.D$.H..H.D
	0x0050 24 38 48 8b 6c 24 20 48 83 c4 28 c3 0f 1f 40 00  $8H.l$ H..(...@.
	0x0060 e8 00 00 00 00 eb 99                             .......
	rel 5+4 t=17 TLS+0
	rel 32+4 t=16 type.map[int]int+0
	rel 65+4 t=8 runtime.mapaccess1_fast64+0
	rel 97+4 t=8 runtime.morestack_noctxt+0
"".AccessInt2 STEXT size=95 args=0x10 locals=0x30
	0x0000 00000 (/usr/local/go/test/codegen/maps.go:23)	TEXT	"".AccessInt2(SB), ABIInternal, $48-16
	0x0000 00000 (/usr/local/go/test/codegen/maps.go:23)	MOVQ	(TLS), CX
	0x0009 00009 (/usr/local/go/test/codegen/maps.go:23)	CMPQ	SP, 16(CX)
	0x000d 00013 (/usr/local/go/test/codegen/maps.go:23)	PCDATA	$0, $-2
	0x000d 00013 (/usr/local/go/test/codegen/maps.go:23)	JLS	88
	0x000f 00015 (/usr/local/go/test/codegen/maps.go:23)	PCDATA	$0, $-1
	0x000f 00015 (/usr/local/go/test/codegen/maps.go:23)	SUBQ	$48, SP
	0x0013 00019 (/usr/local/go/test/codegen/maps.go:23)	MOVQ	BP, 40(SP)
	0x0018 00024 (/usr/local/go/test/codegen/maps.go:23)	LEAQ	40(SP), BP
	0x001d 00029 (/usr/local/go/test/codegen/maps.go:23)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x001d 00029 (/usr/local/go/test/codegen/maps.go:23)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x001d 00029 (/usr/local/go/test/codegen/maps.go:25)	LEAQ	type.map[int]int(SB), AX
	0x0024 00036 (/usr/local/go/test/codegen/maps.go:25)	MOVQ	AX, (SP)
	0x0028 00040 (/usr/local/go/test/codegen/maps.go:25)	MOVQ	"".m+56(SP), AX
	0x002d 00045 (/usr/local/go/test/codegen/maps.go:25)	MOVQ	AX, 8(SP)
	0x0032 00050 (/usr/local/go/test/codegen/maps.go:25)	MOVQ	$5, 16(SP)
	0x003b 00059 (/usr/local/go/test/codegen/maps.go:25)	PCDATA	$1, $1
	0x003b 00059 (/usr/local/go/test/codegen/maps.go:25)	NOP
	0x0040 00064 (/usr/local/go/test/codegen/maps.go:25)	CALL	runtime.mapaccess2_fast64(SB)
	0x0045 00069 (/usr/local/go/test/codegen/maps.go:25)	MOVBLZX	32(SP), AX
	0x004a 00074 (/usr/local/go/test/codegen/maps.go:26)	MOVB	AL, "".~r1+64(SP)
	0x004e 00078 (/usr/local/go/test/codegen/maps.go:26)	MOVQ	40(SP), BP
	0x0053 00083 (/usr/local/go/test/codegen/maps.go:26)	ADDQ	$48, SP
	0x0057 00087 (/usr/local/go/test/codegen/maps.go:26)	RET
	0x0058 00088 (/usr/local/go/test/codegen/maps.go:26)	NOP
	0x0058 00088 (/usr/local/go/test/codegen/maps.go:23)	PCDATA	$1, $-1
	0x0058 00088 (/usr/local/go/test/codegen/maps.go:23)	PCDATA	$0, $-2
	0x0058 00088 (/usr/local/go/test/codegen/maps.go:23)	CALL	runtime.morestack_noctxt(SB)
	0x005d 00093 (/usr/local/go/test/codegen/maps.go:23)	PCDATA	$0, $-1
	0x005d 00093 (/usr/local/go/test/codegen/maps.go:23)	JMP	0
	0x0000 64 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 49 48  dH..%....H;a.vIH
	0x0010 83 ec 30 48 89 6c 24 28 48 8d 6c 24 28 48 8d 05  ..0H.l$(H.l$(H..
	0x0020 00 00 00 00 48 89 04 24 48 8b 44 24 38 48 89 44  ....H..$H.D$8H.D
	0x0030 24 08 48 c7 44 24 10 05 00 00 00 0f 1f 44 00 00  $.H.D$.......D..
	0x0040 e8 00 00 00 00 0f b6 44 24 20 88 44 24 40 48 8b  .......D$ .D$@H.
	0x0050 6c 24 28 48 83 c4 30 c3 e8 00 00 00 00 eb a1     l$(H..0........
	rel 5+4 t=17 TLS+0
	rel 32+4 t=16 type.map[int]int+0
	rel 65+4 t=8 runtime.mapaccess2_fast64+0
	rel 89+4 t=8 runtime.morestack_noctxt+0
"".AccessString1 STEXT size=106 args=0x10 locals=0x30
	0x0000 00000 (/usr/local/go/test/codegen/maps.go:29)	TEXT	"".AccessString1(SB), ABIInternal, $48-16
	0x0000 00000 (/usr/local/go/test/codegen/maps.go:29)	MOVQ	(TLS), CX
	0x0009 00009 (/usr/local/go/test/codegen/maps.go:29)	CMPQ	SP, 16(CX)
	0x000d 00013 (/usr/local/go/test/codegen/maps.go:29)	PCDATA	$0, $-2
	0x000d 00013 (/usr/local/go/test/codegen/maps.go:29)	JLS	99
	0x000f 00015 (/usr/local/go/test/codegen/maps.go:29)	PCDATA	$0, $-1
	0x000f 00015 (/usr/local/go/test/codegen/maps.go:29)	SUBQ	$48, SP
	0x0013 00019 (/usr/local/go/test/codegen/maps.go:29)	MOVQ	BP, 40(SP)
	0x0018 00024 (/usr/local/go/test/codegen/maps.go:29)	LEAQ	40(SP), BP
	0x001d 00029 (/usr/local/go/test/codegen/maps.go:29)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x001d 00029 (/usr/local/go/test/codegen/maps.go:29)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x001d 00029 (/usr/local/go/test/codegen/maps.go:31)	LEAQ	type.map[string]int(SB), AX
	0x0024 00036 (/usr/local/go/test/codegen/maps.go:31)	MOVQ	AX, (SP)
	0x0028 00040 (/usr/local/go/test/codegen/maps.go:31)	MOVQ	"".m+56(SP), AX
	0x002d 00045 (/usr/local/go/test/codegen/maps.go:31)	MOVQ	AX, 8(SP)
	0x0032 00050 (/usr/local/go/test/codegen/maps.go:31)	LEAQ	go.string."abc"(SB), AX
	0x0039 00057 (/usr/local/go/test/codegen/maps.go:31)	MOVQ	AX, 16(SP)
	0x003e 00062 (/usr/local/go/test/codegen/maps.go:31)	MOVQ	$3, 24(SP)
	0x0047 00071 (/usr/local/go/test/codegen/maps.go:31)	PCDATA	$1, $1
	0x0047 00071 (/usr/local/go/test/codegen/maps.go:31)	CALL	runtime.mapaccess1_faststr(SB)
	0x004c 00076 (/usr/local/go/test/codegen/maps.go:31)	MOVQ	32(SP), AX
	0x0051 00081 (/usr/local/go/test/codegen/maps.go:31)	MOVQ	(AX), AX
	0x0054 00084 (/usr/local/go/test/codegen/maps.go:31)	MOVQ	AX, "".~r1+64(SP)
	0x0059 00089 (/usr/local/go/test/codegen/maps.go:31)	MOVQ	40(SP), BP
	0x005e 00094 (/usr/local/go/test/codegen/maps.go:31)	ADDQ	$48, SP
	0x0062 00098 (/usr/local/go/test/codegen/maps.go:31)	RET
	0x0063 00099 (/usr/local/go/test/codegen/maps.go:31)	NOP
	0x0063 00099 (/usr/local/go/test/codegen/maps.go:29)	PCDATA	$1, $-1
	0x0063 00099 (/usr/local/go/test/codegen/maps.go:29)	PCDATA	$0, $-2
	0x0063 00099 (/usr/local/go/test/codegen/maps.go:29)	CALL	runtime.morestack_noctxt(SB)
	0x0068 00104 (/usr/local/go/test/codegen/maps.go:29)	PCDATA	$0, $-1
	0x0068 00104 (/usr/local/go/test/codegen/maps.go:29)	JMP	0
	0x0000 64 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 54 48  dH..%....H;a.vTH
	0x0010 83 ec 30 48 89 6c 24 28 48 8d 6c 24 28 48 8d 05  ..0H.l$(H.l$(H..
	0x0020 00 00 00 00 48 89 04 24 48 8b 44 24 38 48 89 44  ....H..$H.D$8H.D
	0x0030 24 08 48 8d 05 00 00 00 00 48 89 44 24 10 48 c7  $.H......H.D$.H.
	0x0040 44 24 18 03 00 00 00 e8 00 00 00 00 48 8b 44 24  D$..........H.D$
	0x0050 20 48 8b 00 48 89 44 24 40 48 8b 6c 24 28 48 83   H..H.D$@H.l$(H.
	0x0060 c4 30 c3 e8 00 00 00 00 eb 96                    .0........
	rel 5+4 t=17 TLS+0
	rel 32+4 t=16 type.map[string]int+0
	rel 53+4 t=16 go.string."abc"+0
	rel 72+4 t=8 runtime.mapaccess1_faststr+0
	rel 100+4 t=8 runtime.morestack_noctxt+0
"".AccessString2 STEXT size=103 args=0x10 locals=0x38
	0x0000 00000 (/usr/local/go/test/codegen/maps.go:34)	TEXT	"".AccessString2(SB), ABIInternal, $56-16
	0x0000 00000 (/usr/local/go/test/codegen/maps.go:34)	MOVQ	(TLS), CX
	0x0009 00009 (/usr/local/go/test/codegen/maps.go:34)	CMPQ	SP, 16(CX)
	0x000d 00013 (/usr/local/go/test/codegen/maps.go:34)	PCDATA	$0, $-2
	0x000d 00013 (/usr/local/go/test/codegen/maps.go:34)	JLS	96
	0x000f 00015 (/usr/local/go/test/codegen/maps.go:34)	PCDATA	$0, $-1
	0x000f 00015 (/usr/local/go/test/codegen/maps.go:34)	SUBQ	$56, SP
	0x0013 00019 (/usr/local/go/test/codegen/maps.go:34)	MOVQ	BP, 48(SP)
	0x0018 00024 (/usr/local/go/test/codegen/maps.go:34)	LEAQ	48(SP), BP
	0x001d 00029 (/usr/local/go/test/codegen/maps.go:34)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x001d 00029 (/usr/local/go/test/codegen/maps.go:34)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x001d 00029 (/usr/local/go/test/codegen/maps.go:36)	LEAQ	type.map[string]int(SB), AX
	0x0024 00036 (/usr/local/go/test/codegen/maps.go:36)	MOVQ	AX, (SP)
	0x0028 00040 (/usr/local/go/test/codegen/maps.go:36)	MOVQ	"".m+64(SP), AX
	0x002d 00045 (/usr/local/go/test/codegen/maps.go:36)	MOVQ	AX, 8(SP)
	0x0032 00050 (/usr/local/go/test/codegen/maps.go:36)	LEAQ	go.string."abc"(SB), AX
	0x0039 00057 (/usr/local/go/test/codegen/maps.go:36)	MOVQ	AX, 16(SP)
	0x003e 00062 (/usr/local/go/test/codegen/maps.go:36)	MOVQ	$3, 24(SP)
	0x0047 00071 (/usr/local/go/test/codegen/maps.go:36)	PCDATA	$1, $1
	0x0047 00071 (/usr/local/go/test/codegen/maps.go:36)	CALL	runtime.mapaccess2_faststr(SB)
	0x004c 00076 (/usr/local/go/test/codegen/maps.go:36)	MOVBLZX	40(SP), AX
	0x0051 00081 (/usr/local/go/test/codegen/maps.go:37)	MOVB	AL, "".~r1+72(SP)
	0x0055 00085 (/usr/local/go/test/codegen/maps.go:37)	MOVQ	48(SP), BP
	0x005a 00090 (/usr/local/go/test/codegen/maps.go:37)	ADDQ	$56, SP
	0x005e 00094 (/usr/local/go/test/codegen/maps.go:37)	RET
	0x005f 00095 (/usr/local/go/test/codegen/maps.go:37)	NOP
	0x005f 00095 (/usr/local/go/test/codegen/maps.go:34)	PCDATA	$1, $-1
	0x005f 00095 (/usr/local/go/test/codegen/maps.go:34)	PCDATA	$0, $-2
	0x005f 00095 (/usr/local/go/test/codegen/maps.go:34)	NOP
	0x0060 00096 (/usr/local/go/test/codegen/maps.go:34)	CALL	runtime.morestack_noctxt(SB)
	0x0065 00101 (/usr/local/go/test/codegen/maps.go:34)	PCDATA	$0, $-1
	0x0065 00101 (/usr/local/go/test/codegen/maps.go:34)	JMP	0
	0x0000 64 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 51 48  dH..%....H;a.vQH
	0x0010 83 ec 38 48 89 6c 24 30 48 8d 6c 24 30 48 8d 05  ..8H.l$0H.l$0H..
	0x0020 00 00 00 00 48 89 04 24 48 8b 44 24 40 48 89 44  ....H..$H.D$@H.D
	0x0030 24 08 48 8d 05 00 00 00 00 48 89 44 24 10 48 c7  $.H......H.D$.H.
	0x0040 44 24 18 03 00 00 00 e8 00 00 00 00 0f b6 44 24  D$............D$
	0x0050 28 88 44 24 48 48 8b 6c 24 30 48 83 c4 38 c3 90  (.D$HH.l$0H..8..
	0x0060 e8 00 00 00 00 eb 99                             .......
	rel 5+4 t=17 TLS+0
	rel 32+4 t=16 type.map[string]int+0
	rel 53+4 t=16 go.string."abc"+0
	rel 72+4 t=8 runtime.mapaccess2_faststr+0
	rel 97+4 t=8 runtime.morestack_noctxt+0
"".LookupStringConversionSimple STEXT size=105 args=0x28 locals=0x30
	0x0000 00000 (/usr/local/go/test/codegen/maps.go:44)	TEXT	"".LookupStringConversionSimple(SB), ABIInternal, $48-40
	0x0000 00000 (/usr/local/go/test/codegen/maps.go:44)	MOVQ	(TLS), CX
	0x0009 00009 (/usr/local/go/test/codegen/maps.go:44)	CMPQ	SP, 16(CX)
	0x000d 00013 (/usr/local/go/test/codegen/maps.go:44)	PCDATA	$0, $-2
	0x000d 00013 (/usr/local/go/test/codegen/maps.go:44)	JLS	98
	0x000f 00015 (/usr/local/go/test/codegen/maps.go:44)	PCDATA	$0, $-1
	0x000f 00015 (/usr/local/go/test/codegen/maps.go:44)	SUBQ	$48, SP
	0x0013 00019 (/usr/local/go/test/codegen/maps.go:44)	MOVQ	BP, 40(SP)
	0x0018 00024 (/usr/local/go/test/codegen/maps.go:44)	LEAQ	40(SP), BP
	0x001d 00029 (/usr/local/go/test/codegen/maps.go:44)	FUNCDATA	$0, gclocals·dc9b0298814590ca3ffc3a889546fc8b(SB)
	0x001d 00029 (/usr/local/go/test/codegen/maps.go:44)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x001d 00029 (/usr/local/go/test/codegen/maps.go:46)	LEAQ	type.map[string]int(SB), AX
	0x0024 00036 (/usr/local/go/test/codegen/maps.go:46)	MOVQ	AX, (SP)
	0x0028 00040 (/usr/local/go/test/codegen/maps.go:46)	MOVQ	"".m+56(SP), AX
	0x002d 00045 (/usr/local/go/test/codegen/maps.go:46)	MOVQ	AX, 8(SP)
	0x0032 00050 (/usr/local/go/test/codegen/maps.go:46)	MOVQ	"".bytes+64(SP), AX
	0x0037 00055 (/usr/local/go/test/codegen/maps.go:46)	MOVQ	AX, 16(SP)
	0x003c 00060 (/usr/local/go/test/codegen/maps.go:46)	MOVQ	"".bytes+72(SP), AX
	0x0041 00065 (/usr/local/go/test/codegen/maps.go:46)	MOVQ	AX, 24(SP)
	0x0046 00070 (/usr/local/go/test/codegen/maps.go:46)	PCDATA	$1, $1
	0x0046 00070 (/usr/local/go/test/codegen/maps.go:46)	CALL	runtime.mapaccess1_faststr(SB)
	0x004b 00075 (/usr/local/go/test/codegen/maps.go:46)	MOVQ	32(SP), AX
	0x0050 00080 (/usr/local/go/test/codegen/maps.go:46)	MOVQ	(AX), AX
	0x0053 00083 (/usr/local/go/test/codegen/maps.go:46)	MOVQ	AX, "".~r2+88(SP)
	0x0058 00088 (/usr/local/go/test/codegen/maps.go:46)	MOVQ	40(SP), BP
	0x005d 00093 (/usr/local/go/test/codegen/maps.go:46)	ADDQ	$48, SP
	0x0061 00097 (/usr/local/go/test/codegen/maps.go:46)	RET
	0x0062 00098 (/usr/local/go/test/codegen/maps.go:46)	NOP
	0x0062 00098 (/usr/local/go/test/codegen/maps.go:44)	PCDATA	$1, $-1
	0x0062 00098 (/usr/local/go/test/codegen/maps.go:44)	PCDATA	$0, $-2
	0x0062 00098 (/usr/local/go/test/codegen/maps.go:44)	CALL	runtime.morestack_noctxt(SB)
	0x0067 00103 (/usr/local/go/test/codegen/maps.go:44)	PCDATA	$0, $-1
	0x0067 00103 (/usr/local/go/test/codegen/maps.go:44)	JMP	0
	0x0000 64 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 53 48  dH..%....H;a.vSH
	0x0010 83 ec 30 48 89 6c 24 28 48 8d 6c 24 28 48 8d 05  ..0H.l$(H.l$(H..
	0x0020 00 00 00 00 48 89 04 24 48 8b 44 24 38 48 89 44  ....H..$H.D$8H.D
	0x0030 24 08 48 8b 44 24 40 48 89 44 24 10 48 8b 44 24  $.H.D$@H.D$.H.D$
	0x0040 48 48 89 44 24 18 e8 00 00 00 00 48 8b 44 24 20  HH.D$......H.D$ 
	0x0050 48 8b 00 48 89 44 24 58 48 8b 6c 24 28 48 83 c4  H..H.D$XH.l$(H..
	0x0060 30 c3 e8 00 00 00 00 eb 97                       0........
	rel 5+4 t=17 TLS+0
	rel 32+4 t=16 type.map[string]int+0
	rel 71+4 t=8 runtime.mapaccess1_faststr+0
	rel 99+4 t=8 runtime.morestack_noctxt+0
"".LookupStringConversionStructLit STEXT size=105 args=0x28 locals=0x30
	0x0000 00000 (/usr/local/go/test/codegen/maps.go:49)	TEXT	"".LookupStringConversionStructLit(SB), ABIInternal, $48-40
	0x0000 00000 (/usr/local/go/test/codegen/maps.go:49)	MOVQ	(TLS), CX
	0x0009 00009 (/usr/local/go/test/codegen/maps.go:49)	CMPQ	SP, 16(CX)
	0x000d 00013 (/usr/local/go/test/codegen/maps.go:49)	PCDATA	$0, $-2
	0x000d 00013 (/usr/local/go/test/codegen/maps.go:49)	JLS	98
	0x000f 00015 (/usr/local/go/test/codegen/maps.go:49)	PCDATA	$0, $-1
	0x000f 00015 (/usr/local/go/test/codegen/maps.go:49)	SUBQ	$48, SP
	0x0013 00019 (/usr/local/go/test/codegen/maps.go:49)	MOVQ	BP, 40(SP)
	0x0018 00024 (/usr/local/go/test/codegen/maps.go:49)	LEAQ	40(SP), BP
	0x001d 00029 (/usr/local/go/test/codegen/maps.go:49)	FUNCDATA	$0, gclocals·dc9b0298814590ca3ffc3a889546fc8b(SB)
	0x001d 00029 (/usr/local/go/test/codegen/maps.go:49)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x001d 00029 (/usr/local/go/test/codegen/maps.go:51)	LEAQ	type.map[struct { string }]int(SB), AX
	0x0024 00036 (/usr/local/go/test/codegen/maps.go:51)	MOVQ	AX, (SP)
	0x0028 00040 (/usr/local/go/test/codegen/maps.go:51)	MOVQ	"".m+56(SP), AX
	0x002d 00045 (/usr/local/go/test/codegen/maps.go:51)	MOVQ	AX, 8(SP)
	0x0032 00050 (/usr/local/go/test/codegen/maps.go:51)	MOVQ	"".bytes+64(SP), AX
	0x0037 00055 (/usr/local/go/test/codegen/maps.go:51)	MOVQ	AX, 16(SP)
	0x003c 00060 (/usr/local/go/test/codegen/maps.go:51)	MOVQ	"".bytes+72(SP), AX
	0x0041 00065 (/usr/local/go/test/codegen/maps.go:51)	MOVQ	AX, 24(SP)
	0x0046 00070 (/usr/local/go/test/codegen/maps.go:51)	PCDATA	$1, $1
	0x0046 00070 (/usr/local/go/test/codegen/maps.go:51)	CALL	runtime.mapaccess1_faststr(SB)
	0x004b 00075 (/usr/local/go/test/codegen/maps.go:51)	MOVQ	32(SP), AX
	0x0050 00080 (/usr/local/go/test/codegen/maps.go:51)	MOVQ	(AX), AX
	0x0053 00083 (/usr/local/go/test/codegen/maps.go:51)	MOVQ	AX, "".~r2+88(SP)
	0x0058 00088 (/usr/local/go/test/codegen/maps.go:51)	MOVQ	40(SP), BP
	0x005d 00093 (/usr/local/go/test/codegen/maps.go:51)	ADDQ	$48, SP
	0x0061 00097 (/usr/local/go/test/codegen/maps.go:51)	RET
	0x0062 00098 (/usr/local/go/test/codegen/maps.go:51)	NOP
	0x0062 00098 (/usr/local/go/test/codegen/maps.go:49)	PCDATA	$1, $-1
	0x0062 00098 (/usr/local/go/test/codegen/maps.go:49)	PCDATA	$0, $-2
	0x0062 00098 (/usr/local/go/test/codegen/maps.go:49)	CALL	runtime.morestack_noctxt(SB)
	0x0067 00103 (/usr/local/go/test/codegen/maps.go:49)	PCDATA	$0, $-1
	0x0067 00103 (/usr/local/go/test/codegen/maps.go:49)	JMP	0
	0x0000 64 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 53 48  dH..%....H;a.vSH
	0x0010 83 ec 30 48 89 6c 24 28 48 8d 6c 24 28 48 8d 05  ..0H.l$(H.l$(H..
	0x0020 00 00 00 00 48 89 04 24 48 8b 44 24 38 48 89 44  ....H..$H.D$8H.D
	0x0030 24 08 48 8b 44 24 40 48 89 44 24 10 48 8b 44 24  $.H.D$@H.D$.H.D$
	0x0040 48 48 89 44 24 18 e8 00 00 00 00 48 8b 44 24 20  HH.D$......H.D$ 
	0x0050 48 8b 00 48 89 44 24 58 48 8b 6c 24 28 48 83 c4  H..H.D$XH.l$(H..
	0x0060 30 c3 e8 00 00 00 00 eb 97                       0........
	rel 5+4 t=17 TLS+0
	rel 32+4 t=16 type.map[struct { string }]int+0
	rel 71+4 t=8 runtime.mapaccess1_faststr+0
	rel 99+4 t=8 runtime.morestack_noctxt+0
"".LookupStringConversionArrayLit STEXT size=141 args=0x28 locals=0x48
	0x0000 00000 (/usr/local/go/test/codegen/maps.go:54)	TEXT	"".LookupStringConversionArrayLit(SB), ABIInternal, $72-40
	0x0000 00000 (/usr/local/go/test/codegen/maps.go:54)	MOVQ	(TLS), CX
	0x0009 00009 (/usr/local/go/test/codegen/maps.go:54)	CMPQ	SP, 16(CX)
	0x000d 00013 (/usr/local/go/test/codegen/maps.go:54)	PCDATA	$0, $-2
	0x000d 00013 (/usr/local/go/test/codegen/maps.go:54)	JLS	131
	0x000f 00015 (/usr/local/go/test/codegen/maps.go:54)	PCDATA	$0, $-1
	0x000f 00015 (/usr/local/go/test/codegen/maps.go:54)	SUBQ	$72, SP
	0x0013 00019 (/usr/local/go/test/codegen/maps.go:54)	MOVQ	BP, 64(SP)
	0x0018 00024 (/usr/local/go/test/codegen/maps.go:54)	LEAQ	64(SP), BP
	0x001d 00029 (/usr/local/go/test/codegen/maps.go:54)	FUNCDATA	$0, gclocals·dc9b0298814590ca3ffc3a889546fc8b(SB)
	0x001d 00029 (/usr/local/go/test/codegen/maps.go:54)	FUNCDATA	$1, gclocals·955e25ebd21d9d330257196a49a276e5(SB)
	0x001d 00029 (/usr/local/go/test/codegen/maps.go:54)	FUNCDATA	$3, "".LookupStringConversionArrayLit.stkobj(SB)
	0x001d 00029 (/usr/local/go/test/codegen/maps.go:56)	XORPS	X0, X0
	0x0020 00032 (/usr/local/go/test/codegen/maps.go:56)	MOVUPS	X0, ""..autotmp_3+32(SP)
	0x0025 00037 (/usr/local/go/test/codegen/maps.go:56)	MOVUPS	X0, ""..autotmp_3+48(SP)
	0x002a 00042 (/usr/local/go/test/codegen/maps.go:56)	MOVQ	"".bytes+88(SP), AX
	0x002f 00047 (/usr/local/go/test/codegen/maps.go:56)	MOVQ	AX, ""..autotmp_3+32(SP)
	0x0034 00052 (/usr/local/go/test/codegen/maps.go:56)	MOVQ	"".bytes+96(SP), CX
	0x0039 00057 (/usr/local/go/test/codegen/maps.go:56)	MOVQ	CX, ""..autotmp_3+40(SP)
	0x003e 00062 (/usr/local/go/test/codegen/maps.go:56)	MOVQ	AX, ""..autotmp_3+48(SP)
	0x0043 00067 (/usr/local/go/test/codegen/maps.go:56)	MOVQ	CX, ""..autotmp_3+56(SP)
	0x0048 00072 (/usr/local/go/test/codegen/maps.go:56)	LEAQ	type.map[[2]string]int(SB), AX
	0x004f 00079 (/usr/local/go/test/codegen/maps.go:56)	MOVQ	AX, (SP)
	0x0053 00083 (/usr/local/go/test/codegen/maps.go:56)	MOVQ	"".m+80(SP), AX
	0x0058 00088 (/usr/local/go/test/codegen/maps.go:56)	MOVQ	AX, 8(SP)
	0x005d 00093 (/usr/local/go/test/codegen/maps.go:56)	LEAQ	""..autotmp_3+32(SP), AX
	0x0062 00098 (/usr/local/go/test/codegen/maps.go:56)	MOVQ	AX, 16(SP)
	0x0067 00103 (/usr/local/go/test/codegen/maps.go:56)	PCDATA	$1, $1
	0x0067 00103 (/usr/local/go/test/codegen/maps.go:56)	CALL	runtime.mapaccess1(SB)
	0x006c 00108 (/usr/local/go/test/codegen/maps.go:56)	MOVQ	24(SP), AX
	0x0071 00113 (/usr/local/go/test/codegen/maps.go:56)	MOVQ	(AX), AX
	0x0074 00116 (/usr/local/go/test/codegen/maps.go:56)	MOVQ	AX, "".~r2+112(SP)
	0x0079 00121 (/usr/local/go/test/codegen/maps.go:56)	MOVQ	64(SP), BP
	0x007e 00126 (/usr/local/go/test/codegen/maps.go:56)	ADDQ	$72, SP
	0x0082 00130 (/usr/local/go/test/codegen/maps.go:56)	RET
	0x0083 00131 (/usr/local/go/test/codegen/maps.go:56)	NOP
	0x0083 00131 (/usr/local/go/test/codegen/maps.go:54)	PCDATA	$1, $-1
	0x0083 00131 (/usr/local/go/test/codegen/maps.go:54)	PCDATA	$0, $-2
	0x0083 00131 (/usr/local/go/test/codegen/maps.go:54)	CALL	runtime.morestack_noctxt(SB)
	0x0088 00136 (/usr/local/go/test/codegen/maps.go:54)	PCDATA	$0, $-1
	0x0088 00136 (/usr/local/go/test/codegen/maps.go:54)	JMP	0
	0x0000 64 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 74 48  dH..%....H;a.vtH
	0x0010 83 ec 48 48 89 6c 24 40 48 8d 6c 24 40 0f 57 c0  ..HH.l$@H.l$@.W.
	0x0020 0f 11 44 24 20 0f 11 44 24 30 48 8b 44 24 58 48  ..D$ ..D$0H.D$XH
	0x0030 89 44 24 20 48 8b 4c 24 60 48 89 4c 24 28 48 89  .D$ H.L$`H.L$(H.
	0x0040 44 24 30 48 89 4c 24 38 48 8d 05 00 00 00 00 48  D$0H.L$8H......H
	0x0050 89 04 24 48 8b 44 24 50 48 89 44 24 08 48 8d 44  ..$H.D$PH.D$.H.D
	0x0060 24 20 48 89 44 24 10 e8 00 00 00 00 48 8b 44 24  $ H.D$......H.D$
	0x0070 18 48 8b 00 48 89 44 24 70 48 8b 6c 24 40 48 83  .H..H.D$pH.l$@H.
	0x0080 c4 48 c3 e8 00 00 00 00 e9 73 ff ff ff           .H.......s...
	rel 5+4 t=17 TLS+0
	rel 75+4 t=16 type.map[[2]string]int+0
	rel 104+4 t=8 runtime.mapaccess1+0
	rel 132+4 t=8 runtime.morestack_noctxt+0
type..eq.[2]string STEXT dupok size=197 args=0x18 locals=0x30
	0x0000 00000 (<autogenerated>:1)	TEXT	type..eq.[2]string(SB), DUPOK|ABIInternal, $48-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	PCDATA	$0, $-2
	0x000d 00013 (<autogenerated>:1)	JLS	185
	0x0013 00019 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0013 00019 (<autogenerated>:1)	SUBQ	$48, SP
	0x0017 00023 (<autogenerated>:1)	MOVQ	BP, 40(SP)
	0x001c 00028 (<autogenerated>:1)	LEAQ	40(SP), BP
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$0, gclocals·dc9b0298814590ca3ffc3a889546fc8b(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0021 00033 (<autogenerated>:1)	MOVQ	"".p+56(SP), AX
	0x0026 00038 (<autogenerated>:1)	MOVQ	8(AX), CX
	0x002a 00042 (<autogenerated>:1)	MOVQ	"".q+64(SP), DX
	0x002f 00047 (<autogenerated>:1)	CMPQ	8(DX), CX
	0x0033 00051 (<autogenerated>:1)	JNE	170
	0x0035 00053 (<autogenerated>:1)	MOVQ	24(DX), CX
	0x0039 00057 (<autogenerated>:1)	CMPQ	24(AX), CX
	0x003d 00061 (<autogenerated>:1)	JNE	170
	0x003f 00063 (<autogenerated>:1)	XORL	CX, CX
	0x0041 00065 (<autogenerated>:1)	JMP	86
	0x0043 00067 (<autogenerated>:1)	MOVQ	""..autotmp_11+32(SP), BX
	0x0048 00072 (<autogenerated>:1)	LEAQ	1(BX), CX
	0x004c 00076 (<autogenerated>:1)	MOVQ	"".p+56(SP), AX
	0x0051 00081 (<autogenerated>:1)	MOVQ	"".q+64(SP), DX
	0x0056 00086 (<autogenerated>:1)	CMPQ	CX, $2
	0x005a 00090 (<autogenerated>:1)	JGE	155
	0x005c 00092 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_11+32(SP)
	0x0061 00097 (<autogenerated>:1)	SHLQ	$4, CX
	0x0065 00101 (<autogenerated>:1)	MOVQ	(CX)(DX*1), SI
	0x0069 00105 (<autogenerated>:1)	MOVQ	(CX)(AX*1), DI
	0x006d 00109 (<autogenerated>:1)	MOVQ	8(AX)(CX*1), CX
	0x0072 00114 (<autogenerated>:1)	MOVQ	DI, (SP)
	0x0076 00118 (<autogenerated>:1)	MOVQ	SI, 8(SP)
	0x007b 00123 (<autogenerated>:1)	MOVQ	CX, 16(SP)
	0x0080 00128 (<autogenerated>:1)	PCDATA	$1, $0
	0x0080 00128 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x0085 00133 (<autogenerated>:1)	CMPB	24(SP), $0
	0x008a 00138 (<autogenerated>:1)	JNE	67
	0x008c 00140 (<autogenerated>:1)	MOVB	$0, "".r+72(SP)
	0x0091 00145 (<autogenerated>:1)	MOVQ	40(SP), BP
	0x0096 00150 (<autogenerated>:1)	ADDQ	$48, SP
	0x009a 00154 (<autogenerated>:1)	RET
	0x009b 00155 (<autogenerated>:1)	MOVB	$1, "".r+72(SP)
	0x00a0 00160 (<autogenerated>:1)	MOVQ	40(SP), BP
	0x00a5 00165 (<autogenerated>:1)	ADDQ	$48, SP
	0x00a9 00169 (<autogenerated>:1)	RET
	0x00aa 00170 (<autogenerated>:1)	MOVB	$0, "".r+72(SP)
	0x00af 00175 (<autogenerated>:1)	MOVQ	40(SP), BP
	0x00b4 00180 (<autogenerated>:1)	ADDQ	$48, SP
	0x00b8 00184 (<autogenerated>:1)	RET
	0x00b9 00185 (<autogenerated>:1)	NOP
	0x00b9 00185 (<autogenerated>:1)	PCDATA	$1, $-1
	0x00b9 00185 (<autogenerated>:1)	PCDATA	$0, $-2
	0x00b9 00185 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x00be 00190 (<autogenerated>:1)	PCDATA	$0, $-1
	0x00be 00190 (<autogenerated>:1)	NOP
	0x00c0 00192 (<autogenerated>:1)	JMP	0
	0x0000 64 48 8b 0c 25 00 00 00 00 48 3b 61 10 0f 86 a6  dH..%....H;a....
	0x0010 00 00 00 48 83 ec 30 48 89 6c 24 28 48 8d 6c 24  ...H..0H.l$(H.l$
	0x0020 28 48 8b 44 24 38 48 8b 48 08 48 8b 54 24 40 48  (H.D$8H.H.H.T$@H
	0x0030 39 4a 08 75 75 48 8b 4a 18 48 39 48 18 75 6b 31  9J.uuH.J.H9H.uk1
	0x0040 c9 eb 13 48 8b 5c 24 20 48 8d 4b 01 48 8b 44 24  ...H.\$ H.K.H.D$
	0x0050 38 48 8b 54 24 40 48 83 f9 02 7d 3f 48 89 4c 24  8H.T$@H...}?H.L$
	0x0060 20 48 c1 e1 04 48 8b 34 11 48 8b 3c 01 48 8b 4c   H...H.4.H.<.H.L
	0x0070 08 08 48 89 3c 24 48 89 74 24 08 48 89 4c 24 10  ..H.<$H.t$.H.L$.
	0x0080 e8 00 00 00 00 80 7c 24 18 00 75 b7 c6 44 24 48  ......|$..u..D$H
	0x0090 00 48 8b 6c 24 28 48 83 c4 30 c3 c6 44 24 48 01  .H.l$(H..0..D$H.
	0x00a0 48 8b 6c 24 28 48 83 c4 30 c3 c6 44 24 48 00 48  H.l$(H..0..D$H.H
	0x00b0 8b 6c 24 28 48 83 c4 30 c3 e8 00 00 00 00 66 90  .l$(H..0......f.
	0x00c0 e9 3b ff ff ff                                   .;...
	rel 5+4 t=17 TLS+0
	rel 129+4 t=8 runtime.memequal+0
	rel 186+4 t=8 runtime.morestack_noctxt+0
"".LookupStringConversionNestedLit STEXT size=105 args=0x28 locals=0x30
	0x0000 00000 (/usr/local/go/test/codegen/maps.go:59)	TEXT	"".LookupStringConversionNestedLit(SB), ABIInternal, $48-40
	0x0000 00000 (/usr/local/go/test/codegen/maps.go:59)	MOVQ	(TLS), CX
	0x0009 00009 (/usr/local/go/test/codegen/maps.go:59)	CMPQ	SP, 16(CX)
	0x000d 00013 (/usr/local/go/test/codegen/maps.go:59)	PCDATA	$0, $-2
	0x000d 00013 (/usr/local/go/test/codegen/maps.go:59)	JLS	98
	0x000f 00015 (/usr/local/go/test/codegen/maps.go:59)	PCDATA	$0, $-1
	0x000f 00015 (/usr/local/go/test/codegen/maps.go:59)	SUBQ	$48, SP
	0x0013 00019 (/usr/local/go/test/codegen/maps.go:59)	MOVQ	BP, 40(SP)
	0x0018 00024 (/usr/local/go/test/codegen/maps.go:59)	LEAQ	40(SP), BP
	0x001d 00029 (/usr/local/go/test/codegen/maps.go:59)	FUNCDATA	$0, gclocals·dc9b0298814590ca3ffc3a889546fc8b(SB)
	0x001d 00029 (/usr/local/go/test/codegen/maps.go:59)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x001d 00029 (/usr/local/go/test/codegen/maps.go:61)	LEAQ	type.map[[1]struct { "".s [1]string }]int(SB), AX
	0x0024 00036 (/usr/local/go/test/codegen/maps.go:61)	MOVQ	AX, (SP)
	0x0028 00040 (/usr/local/go/test/codegen/maps.go:61)	MOVQ	"".m+56(SP), AX
	0x002d 00045 (/usr/local/go/test/codegen/maps.go:61)	MOVQ	AX, 8(SP)
	0x0032 00050 (/usr/local/go/test/codegen/maps.go:61)	MOVQ	"".bytes+64(SP), AX
	0x0037 00055 (/usr/local/go/test/codegen/maps.go:61)	MOVQ	AX, 16(SP)
	0x003c 00060 (/usr/local/go/test/codegen/maps.go:61)	MOVQ	"".bytes+72(SP), AX
	0x0041 00065 (/usr/local/go/test/codegen/maps.go:61)	MOVQ	AX, 24(SP)
	0x0046 00070 (/usr/local/go/test/codegen/maps.go:61)	PCDATA	$1, $1
	0x0046 00070 (/usr/local/go/test/codegen/maps.go:61)	CALL	runtime.mapaccess1_faststr(SB)
	0x004b 00075 (/usr/local/go/test/codegen/maps.go:61)	MOVQ	32(SP), AX
	0x0050 00080 (/usr/local/go/test/codegen/maps.go:61)	MOVQ	(AX), AX
	0x0053 00083 (/usr/local/go/test/codegen/maps.go:61)	MOVQ	AX, "".~r2+88(SP)
	0x0058 00088 (/usr/local/go/test/codegen/maps.go:61)	MOVQ	40(SP), BP
	0x005d 00093 (/usr/local/go/test/codegen/maps.go:61)	ADDQ	$48, SP
	0x0061 00097 (/usr/local/go/test/codegen/maps.go:61)	RET
	0x0062 00098 (/usr/local/go/test/codegen/maps.go:61)	NOP
	0x0062 00098 (/usr/local/go/test/codegen/maps.go:59)	PCDATA	$1, $-1
	0x0062 00098 (/usr/local/go/test/codegen/maps.go:59)	PCDATA	$0, $-2
	0x0062 00098 (/usr/local/go/test/codegen/maps.go:59)	CALL	runtime.morestack_noctxt(SB)
	0x0067 00103 (/usr/local/go/test/codegen/maps.go:59)	PCDATA	$0, $-1
	0x0067 00103 (/usr/local/go/test/codegen/maps.go:59)	JMP	0
	0x0000 64 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 53 48  dH..%....H;a.vSH
	0x0010 83 ec 30 48 89 6c 24 28 48 8d 6c 24 28 48 8d 05  ..0H.l$(H.l$(H..
	0x0020 00 00 00 00 48 89 04 24 48 8b 44 24 38 48 89 44  ....H..$H.D$8H.D
	0x0030 24 08 48 8b 44 24 40 48 89 44 24 10 48 8b 44 24  $.H.D$@H.D$.H.D$
	0x0040 48 48 89 44 24 18 e8 00 00 00 00 48 8b 44 24 20  HH.D$......H.D$ 
	0x0050 48 8b 00 48 89 44 24 58 48 8b 6c 24 28 48 83 c4  H..H.D$XH.l$(H..
	0x0060 30 c3 e8 00 00 00 00 eb 97                       0........
	rel 5+4 t=17 TLS+0
	rel 32+4 t=16 type.map[[1]struct { "".s [1]string }]int+0
	rel 71+4 t=8 runtime.mapaccess1_faststr+0
	rel 99+4 t=8 runtime.morestack_noctxt+0
"".LookupStringConversionKeyedArrayLit STEXT size=138 args=0x28 locals=0x48
	0x0000 00000 (/usr/local/go/test/codegen/maps.go:64)	TEXT	"".LookupStringConversionKeyedArrayLit(SB), ABIInternal, $72-40
	0x0000 00000 (/usr/local/go/test/codegen/maps.go:64)	MOVQ	(TLS), CX
	0x0009 00009 (/usr/local/go/test/codegen/maps.go:64)	CMPQ	SP, 16(CX)
	0x000d 00013 (/usr/local/go/test/codegen/maps.go:64)	PCDATA	$0, $-2
	0x000d 00013 (/usr/local/go/test/codegen/maps.go:64)	JLS	128
	0x000f 00015 (/usr/local/go/test/codegen/maps.go:64)	PCDATA	$0, $-1
	0x000f 00015 (/usr/local/go/test/codegen/maps.go:64)	SUBQ	$72, SP
	0x0013 00019 (/usr/local/go/test/codegen/maps.go:64)	MOVQ	BP, 64(SP)
	0x0018 00024 (/usr/local/go/test/codegen/maps.go:64)	LEAQ	64(SP), BP
	0x001d 00029 (/usr/local/go/test/codegen/maps.go:64)	FUNCDATA	$0, gclocals·dc9b0298814590ca3ffc3a889546fc8b(SB)
	0x001d 00029 (/usr/local/go/test/codegen/maps.go:64)	FUNCDATA	$1, gclocals·955e25ebd21d9d330257196a49a276e5(SB)
	0x001d 00029 (/usr/local/go/test/codegen/maps.go:64)	FUNCDATA	$3, "".LookupStringConversionKeyedArrayLit.stkobj(SB)
	0x001d 00029 (/usr/local/go/test/codegen/maps.go:66)	XORPS	X0, X0
	0x0020 00032 (/usr/local/go/test/codegen/maps.go:66)	MOVUPS	X0, ""..autotmp_3+32(SP)
	0x0025 00037 (/usr/local/go/test/codegen/maps.go:66)	MOVUPS	X0, ""..autotmp_3+48(SP)
	0x002a 00042 (/usr/local/go/test/codegen/maps.go:66)	MOVQ	"".bytes+88(SP), AX
	0x002f 00047 (/usr/local/go/test/codegen/maps.go:66)	MOVQ	AX, ""..autotmp_3+32(SP)
	0x0034 00052 (/usr/local/go/test/codegen/maps.go:66)	MOVQ	"".bytes+96(SP), AX
	0x0039 00057 (/usr/local/go/test/codegen/maps.go:66)	MOVQ	AX, ""..autotmp_3+40(SP)
	0x003e 00062 (/usr/local/go/test/codegen/maps.go:66)	LEAQ	type.map[[2]string]int(SB), AX
	0x0045 00069 (/usr/local/go/test/codegen/maps.go:66)	MOVQ	AX, (SP)
	0x0049 00073 (/usr/local/go/test/codegen/maps.go:66)	MOVQ	"".m+80(SP), AX
	0x004e 00078 (/usr/local/go/test/codegen/maps.go:66)	MOVQ	AX, 8(SP)
	0x0053 00083 (/usr/local/go/test/codegen/maps.go:66)	LEAQ	""..autotmp_3+32(SP), AX
	0x0058 00088 (/usr/local/go/test/codegen/maps.go:66)	MOVQ	AX, 16(SP)
	0x005d 00093 (/usr/local/go/test/codegen/maps.go:66)	PCDATA	$1, $1
	0x005d 00093 (/usr/local/go/test/codegen/maps.go:66)	NOP
	0x0060 00096 (/usr/local/go/test/codegen/maps.go:66)	CALL	runtime.mapaccess1(SB)
	0x0065 00101 (/usr/local/go/test/codegen/maps.go:66)	MOVQ	24(SP), AX
	0x006a 00106 (/usr/local/go/test/codegen/maps.go:66)	MOVQ	(AX), AX
	0x006d 00109 (/usr/local/go/test/codegen/maps.go:66)	MOVQ	AX, "".~r2+112(SP)
	0x0072 00114 (/usr/local/go/test/codegen/maps.go:66)	MOVQ	64(SP), BP
	0x0077 00119 (/usr/local/go/test/codegen/maps.go:66)	ADDQ	$72, SP
	0x007b 00123 (/usr/local/go/test/codegen/maps.go:66)	RET
	0x007c 00124 (/usr/local/go/test/codegen/maps.go:66)	NOP
	0x007c 00124 (/usr/local/go/test/codegen/maps.go:64)	PCDATA	$1, $-1
	0x007c 00124 (/usr/local/go/test/codegen/maps.go:64)	PCDATA	$0, $-2
	0x007c 00124 (/usr/local/go/test/codegen/maps.go:64)	NOP
	0x0080 00128 (/usr/local/go/test/codegen/maps.go:64)	CALL	runtime.morestack_noctxt(SB)
	0x0085 00133 (/usr/local/go/test/codegen/maps.go:64)	PCDATA	$0, $-1
	0x0085 00133 (/usr/local/go/test/codegen/maps.go:64)	JMP	0
	0x0000 64 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 71 48  dH..%....H;a.vqH
	0x0010 83 ec 48 48 89 6c 24 40 48 8d 6c 24 40 0f 57 c0  ..HH.l$@H.l$@.W.
	0x0020 0f 11 44 24 20 0f 11 44 24 30 48 8b 44 24 58 48  ..D$ ..D$0H.D$XH
	0x0030 89 44 24 20 48 8b 44 24 60 48 89 44 24 28 48 8d  .D$ H.D$`H.D$(H.
	0x0040 05 00 00 00 00 48 89 04 24 48 8b 44 24 50 48 89  .....H..$H.D$PH.
	0x0050 44 24 08 48 8d 44 24 20 48 89 44 24 10 0f 1f 00  D$.H.D$ H.D$....
	0x0060 e8 00 00 00 00 48 8b 44 24 18 48 8b 00 48 89 44  .....H.D$.H..H.D
	0x0070 24 70 48 8b 6c 24 40 48 83 c4 48 c3 0f 1f 40 00  $pH.l$@H..H...@.
	0x0080 e8 00 00 00 00 e9 76 ff ff ff                    ......v...
	rel 5+4 t=17 TLS+0
	rel 65+4 t=16 type.map[[2]string]int+0
	rel 97+4 t=8 runtime.mapaccess1+0
	rel 129+4 t=8 runtime.morestack_noctxt+0
"".MapClearReflexive STEXT size=72 args=0x8 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/maps.go:75)	TEXT	"".MapClearReflexive(SB), ABIInternal, $24-8
	0x0000 00000 (/usr/local/go/test/codegen/maps.go:75)	MOVQ	(TLS), CX
	0x0009 00009 (/usr/local/go/test/codegen/maps.go:75)	CMPQ	SP, 16(CX)
	0x000d 00013 (/usr/local/go/test/codegen/maps.go:75)	PCDATA	$0, $-2
	0x000d 00013 (/usr/local/go/test/codegen/maps.go:75)	JLS	65
	0x000f 00015 (/usr/local/go/test/codegen/maps.go:75)	PCDATA	$0, $-1
	0x000f 00015 (/usr/local/go/test/codegen/maps.go:75)	SUBQ	$24, SP
	0x0013 00019 (/usr/local/go/test/codegen/maps.go:75)	MOVQ	BP, 16(SP)
	0x0018 00024 (/usr/local/go/test/codegen/maps.go:75)	LEAQ	16(SP), BP
	0x001d 00029 (/usr/local/go/test/codegen/maps.go:75)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x001d 00029 (/usr/local/go/test/codegen/maps.go:75)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x001d 00029 (/usr/local/go/test/codegen/maps.go:78)	LEAQ	type.map[int]int(SB), AX
	0x0024 00036 (/usr/local/go/test/codegen/maps.go:78)	MOVQ	AX, (SP)
	0x0028 00040 (/usr/local/go/test/codegen/maps.go:78)	MOVQ	"".m+32(SP), AX
	0x002d 00045 (/usr/local/go/test/codegen/maps.go:78)	MOVQ	AX, 8(SP)
	0x0032 00050 (/usr/local/go/test/codegen/maps.go:78)	PCDATA	$1, $1
	0x0032 00050 (/usr/local/go/test/codegen/maps.go:78)	CALL	runtime.mapclear(SB)
	0x0037 00055 (/usr/local/go/test/codegen/maps.go:81)	MOVQ	16(SP), BP
	0x003c 00060 (/usr/local/go/test/codegen/maps.go:81)	ADDQ	$24, SP
	0x0040 00064 (/usr/local/go/test/codegen/maps.go:81)	RET
	0x0041 00065 (/usr/local/go/test/codegen/maps.go:81)	NOP
	0x0041 00065 (/usr/local/go/test/codegen/maps.go:75)	PCDATA	$1, $-1
	0x0041 00065 (/usr/local/go/test/codegen/maps.go:75)	PCDATA	$0, $-2
	0x0041 00065 (/usr/local/go/test/codegen/maps.go:75)	CALL	runtime.morestack_noctxt(SB)
	0x0046 00070 (/usr/local/go/test/codegen/maps.go:75)	PCDATA	$0, $-1
	0x0046 00070 (/usr/local/go/test/codegen/maps.go:75)	JMP	0
	0x0000 64 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 32 48  dH..%....H;a.v2H
	0x0010 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8d 05  ...H.l$.H.l$.H..
	0x0020 00 00 00 00 48 89 04 24 48 8b 44 24 20 48 89 44  ....H..$H.D$ H.D
	0x0030 24 08 e8 00 00 00 00 48 8b 6c 24 10 48 83 c4 18  $......H.l$.H...
	0x0040 c3 e8 00 00 00 00 eb b8                          ........
	rel 5+4 t=17 TLS+0
	rel 32+4 t=16 type.map[int]int+0
	rel 51+4 t=8 runtime.mapclear+0
	rel 66+4 t=8 runtime.morestack_noctxt+0
"".MapClearIndirect STEXT size=72 args=0x8 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/maps.go:83)	TEXT	"".MapClearIndirect(SB), ABIInternal, $24-8
	0x0000 00000 (/usr/local/go/test/codegen/maps.go:83)	MOVQ	(TLS), CX
	0x0009 00009 (/usr/local/go/test/codegen/maps.go:83)	CMPQ	SP, 16(CX)
	0x000d 00013 (/usr/local/go/test/codegen/maps.go:83)	PCDATA	$0, $-2
	0x000d 00013 (/usr/local/go/test/codegen/maps.go:83)	JLS	65
	0x000f 00015 (/usr/local/go/test/codegen/maps.go:83)	PCDATA	$0, $-1
	0x000f 00015 (/usr/local/go/test/codegen/maps.go:83)	SUBQ	$24, SP
	0x0013 00019 (/usr/local/go/test/codegen/maps.go:83)	MOVQ	BP, 16(SP)
	0x0018 00024 (/usr/local/go/test/codegen/maps.go:83)	LEAQ	16(SP), BP
	0x001d 00029 (/usr/local/go/test/codegen/maps.go:83)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x001d 00029 (/usr/local/go/test/codegen/maps.go:83)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x001d 00029 (/usr/local/go/test/codegen/maps.go:87)	LEAQ	type.map[int]int(SB), AX
	0x0024 00036 (/usr/local/go/test/codegen/maps.go:87)	MOVQ	AX, (SP)
	0x0028 00040 (/usr/local/go/test/codegen/maps.go:87)	MOVQ	"".m+32(SP), AX
	0x002d 00045 (/usr/local/go/test/codegen/maps.go:87)	MOVQ	AX, 8(SP)
	0x0032 00050 (/usr/local/go/test/codegen/maps.go:87)	PCDATA	$1, $1
	0x0032 00050 (/usr/local/go/test/codegen/maps.go:87)	CALL	runtime.mapclear(SB)
	0x0037 00055 (/usr/local/go/test/codegen/maps.go:90)	MOVQ	16(SP), BP
	0x003c 00060 (/usr/local/go/test/codegen/maps.go:90)	ADDQ	$24, SP
	0x0040 00064 (/usr/local/go/test/codegen/maps.go:90)	RET
	0x0041 00065 (/usr/local/go/test/codegen/maps.go:90)	NOP
	0x0041 00065 (/usr/local/go/test/codegen/maps.go:83)	PCDATA	$1, $-1
	0x0041 00065 (/usr/local/go/test/codegen/maps.go:83)	PCDATA	$0, $-2
	0x0041 00065 (/usr/local/go/test/codegen/maps.go:83)	CALL	runtime.morestack_noctxt(SB)
	0x0046 00070 (/usr/local/go/test/codegen/maps.go:83)	PCDATA	$0, $-1
	0x0046 00070 (/usr/local/go/test/codegen/maps.go:83)	JMP	0
	0x0000 64 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 32 48  dH..%....H;a.v2H
	0x0010 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8d 05  ...H.l$.H.l$.H..
	0x0020 00 00 00 00 48 89 04 24 48 8b 44 24 20 48 89 44  ....H..$H.D$ H.D
	0x0030 24 08 e8 00 00 00 00 48 8b 6c 24 10 48 83 c4 18  $......H.l$.H...
	0x0040 c3 e8 00 00 00 00 eb b8                          ........
	rel 5+4 t=17 TLS+0
	rel 32+4 t=16 type.map[int]int+0
	rel 51+4 t=8 runtime.mapclear+0
	rel 66+4 t=8 runtime.morestack_noctxt+0
"".MapClearPointer STEXT size=72 args=0x8 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/maps.go:92)	TEXT	"".MapClearPointer(SB), ABIInternal, $24-8
	0x0000 00000 (/usr/local/go/test/codegen/maps.go:92)	MOVQ	(TLS), CX
	0x0009 00009 (/usr/local/go/test/codegen/maps.go:92)	CMPQ	SP, 16(CX)
	0x000d 00013 (/usr/local/go/test/codegen/maps.go:92)	PCDATA	$0, $-2
	0x000d 00013 (/usr/local/go/test/codegen/maps.go:92)	JLS	65
	0x000f 00015 (/usr/local/go/test/codegen/maps.go:92)	PCDATA	$0, $-1
	0x000f 00015 (/usr/local/go/test/codegen/maps.go:92)	SUBQ	$24, SP
	0x0013 00019 (/usr/local/go/test/codegen/maps.go:92)	MOVQ	BP, 16(SP)
	0x0018 00024 (/usr/local/go/test/codegen/maps.go:92)	LEAQ	16(SP), BP
	0x001d 00029 (/usr/local/go/test/codegen/maps.go:92)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x001d 00029 (/usr/local/go/test/codegen/maps.go:92)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x001d 00029 (/usr/local/go/test/codegen/maps.go:95)	LEAQ	type.map[*uint8]int(SB), AX
	0x0024 00036 (/usr/local/go/test/codegen/maps.go:95)	MOVQ	AX, (SP)
	0x0028 00040 (/usr/local/go/test/codegen/maps.go:95)	MOVQ	"".m+32(SP), AX
	0x002d 00045 (/usr/local/go/test/codegen/maps.go:95)	MOVQ	AX, 8(SP)
	0x0032 00050 (/usr/local/go/test/codegen/maps.go:95)	PCDATA	$1, $1
	0x0032 00050 (/usr/local/go/test/codegen/maps.go:95)	CALL	runtime.mapclear(SB)
	0x0037 00055 (/usr/local/go/test/codegen/maps.go:98)	MOVQ	16(SP), BP
	0x003c 00060 (/usr/local/go/test/codegen/maps.go:98)	ADDQ	$24, SP
	0x0040 00064 (/usr/local/go/test/codegen/maps.go:98)	RET
	0x0041 00065 (/usr/local/go/test/codegen/maps.go:98)	NOP
	0x0041 00065 (/usr/local/go/test/codegen/maps.go:92)	PCDATA	$1, $-1
	0x0041 00065 (/usr/local/go/test/codegen/maps.go:92)	PCDATA	$0, $-2
	0x0041 00065 (/usr/local/go/test/codegen/maps.go:92)	CALL	runtime.morestack_noctxt(SB)
	0x0046 00070 (/usr/local/go/test/codegen/maps.go:92)	PCDATA	$0, $-1
	0x0046 00070 (/usr/local/go/test/codegen/maps.go:92)	JMP	0
	0x0000 64 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 32 48  dH..%....H;a.v2H
	0x0010 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8d 05  ...H.l$.H.l$.H..
	0x0020 00 00 00 00 48 89 04 24 48 8b 44 24 20 48 89 44  ....H..$H.D$ H.D
	0x0030 24 08 e8 00 00 00 00 48 8b 6c 24 10 48 83 c4 18  $......H.l$.H...
	0x0040 c3 e8 00 00 00 00 eb b8                          ........
	rel 5+4 t=17 TLS+0
	rel 32+4 t=16 type.map[*uint8]int+0
	rel 51+4 t=8 runtime.mapclear+0
	rel 66+4 t=8 runtime.morestack_noctxt+0
"".MapClearNotReflexive STEXT size=223 args=0x8 locals=0x88
	0x0000 00000 (/usr/local/go/test/codegen/maps.go:100)	TEXT	"".MapClearNotReflexive(SB), ABIInternal, $136-8
	0x0000 00000 (/usr/local/go/test/codegen/maps.go:100)	MOVQ	(TLS), CX
	0x0009 00009 (/usr/local/go/test/codegen/maps.go:100)	LEAQ	-8(SP), AX
	0x000e 00014 (/usr/local/go/test/codegen/maps.go:100)	CMPQ	AX, 16(CX)
	0x0012 00018 (/usr/local/go/test/codegen/maps.go:100)	PCDATA	$0, $-2
	0x0012 00018 (/usr/local/go/test/codegen/maps.go:100)	JLS	213
	0x0018 00024 (/usr/local/go/test/codegen/maps.go:100)	PCDATA	$0, $-1
	0x0018 00024 (/usr/local/go/test/codegen/maps.go:100)	SUBQ	$136, SP
	0x001f 00031 (/usr/local/go/test/codegen/maps.go:100)	MOVQ	BP, 128(SP)
	0x0027 00039 (/usr/local/go/test/codegen/maps.go:100)	LEAQ	128(SP), BP
	0x002f 00047 (/usr/local/go/test/codegen/maps.go:100)	FUNCDATA	$0, gclocals·c7c4fc7b12f6707ea74acf7400192967(SB)
	0x002f 00047 (/usr/local/go/test/codegen/maps.go:100)	FUNCDATA	$1, gclocals·e84991a80b24f8ce783c4ef5447afa10(SB)
	0x002f 00047 (/usr/local/go/test/codegen/maps.go:100)	FUNCDATA	$3, "".MapClearNotReflexive.stkobj(SB)
	0x002f 00047 (/usr/local/go/test/codegen/maps.go:103)	LEAQ	""..autotmp_3+32(SP), DI
	0x0034 00052 (/usr/local/go/test/codegen/maps.go:103)	XORPS	X0, X0
	0x0037 00055 (/usr/local/go/test/codegen/maps.go:103)	LEAQ	-32(DI), DI
	0x003b 00059 (/usr/local/go/test/codegen/maps.go:103)	NOP
	0x0040 00064 (/usr/local/go/test/codegen/maps.go:103)	DUFFZERO	$273
	0x0053 00083 (/usr/local/go/test/codegen/maps.go:103)	LEAQ	type.map[float64]int(SB), AX
	0x005a 00090 (/usr/local/go/test/codegen/maps.go:103)	MOVQ	AX, (SP)
	0x005e 00094 (/usr/local/go/test/codegen/maps.go:103)	MOVQ	"".m+144(SP), CX
	0x0066 00102 (/usr/local/go/test/codegen/maps.go:103)	MOVQ	CX, 8(SP)
	0x006b 00107 (/usr/local/go/test/codegen/maps.go:103)	LEAQ	""..autotmp_3+32(SP), DX
	0x0070 00112 (/usr/local/go/test/codegen/maps.go:103)	MOVQ	DX, 16(SP)
	0x0075 00117 (/usr/local/go/test/codegen/maps.go:103)	PCDATA	$1, $1
	0x0075 00117 (/usr/local/go/test/codegen/maps.go:103)	CALL	runtime.mapiterinit(SB)
	0x007a 00122 (/usr/local/go/test/codegen/maps.go:103)	JMP	187
	0x007c 00124 (/usr/local/go/test/codegen/maps.go:103)	MOVSD	(AX), X0
	0x0080 00128 (/usr/local/go/test/codegen/maps.go:104)	MOVSD	X0, ""..autotmp_4+24(SP)
	0x0086 00134 (/usr/local/go/test/codegen/maps.go:104)	LEAQ	type.map[float64]int(SB), AX
	0x008d 00141 (/usr/local/go/test/codegen/maps.go:104)	MOVQ	AX, (SP)
	0x0091 00145 (/usr/local/go/test/codegen/maps.go:104)	MOVQ	"".m+144(SP), CX
	0x0099 00153 (/usr/local/go/test/codegen/maps.go:104)	MOVQ	CX, 8(SP)
	0x009e 00158 (/usr/local/go/test/codegen/maps.go:104)	LEAQ	""..autotmp_4+24(SP), DX
	0x00a3 00163 (/usr/local/go/test/codegen/maps.go:104)	MOVQ	DX, 16(SP)
	0x00a8 00168 (/usr/local/go/test/codegen/maps.go:104)	CALL	runtime.mapdelete(SB)
	0x00ad 00173 (/usr/local/go/test/codegen/maps.go:103)	LEAQ	""..autotmp_3+32(SP), AX
	0x00b2 00178 (/usr/local/go/test/codegen/maps.go:103)	MOVQ	AX, (SP)
	0x00b6 00182 (/usr/local/go/test/codegen/maps.go:103)	CALL	runtime.mapiternext(SB)
	0x00bb 00187 (/usr/local/go/test/codegen/maps.go:103)	MOVQ	""..autotmp_3+32(SP), AX
	0x00c0 00192 (/usr/local/go/test/codegen/maps.go:103)	TESTQ	AX, AX
	0x00c3 00195 (/usr/local/go/test/codegen/maps.go:103)	JNE	124
	0x00c5 00197 (/usr/local/go/test/codegen/maps.go:103)	PCDATA	$1, $-1
	0x00c5 00197 (/usr/local/go/test/codegen/maps.go:103)	MOVQ	128(SP), BP
	0x00cd 00205 (/usr/local/go/test/codegen/maps.go:103)	ADDQ	$136, SP
	0x00d4 00212 (/usr/local/go/test/codegen/maps.go:103)	RET
	0x00d5 00213 (/usr/local/go/test/codegen/maps.go:103)	NOP
	0x00d5 00213 (/usr/local/go/test/codegen/maps.go:100)	PCDATA	$1, $-1
	0x00d5 00213 (/usr/local/go/test/codegen/maps.go:100)	PCDATA	$0, $-2
	0x00d5 00213 (/usr/local/go/test/codegen/maps.go:100)	CALL	runtime.morestack_noctxt(SB)
	0x00da 00218 (/usr/local/go/test/codegen/maps.go:100)	PCDATA	$0, $-1
	0x00da 00218 (/usr/local/go/test/codegen/maps.go:100)	JMP	0
	0x0000 64 48 8b 0c 25 00 00 00 00 48 8d 44 24 f8 48 3b  dH..%....H.D$.H;
	0x0010 41 10 0f 86 bd 00 00 00 48 81 ec 88 00 00 00 48  A.......H......H
	0x0020 89 ac 24 80 00 00 00 48 8d ac 24 80 00 00 00 48  ..$....H..$....H
	0x0030 8d 7c 24 20 0f 57 c0 48 8d 7f e0 0f 1f 44 00 00  .|$ .W.H.....D..
	0x0040 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00 00 00 48  H.l$.H.l$......H
	0x0050 8b 6d 00 48 8d 05 00 00 00 00 48 89 04 24 48 8b  .m.H......H..$H.
	0x0060 8c 24 90 00 00 00 48 89 4c 24 08 48 8d 54 24 20  .$....H.L$.H.T$ 
	0x0070 48 89 54 24 10 e8 00 00 00 00 eb 3f f2 0f 10 00  H.T$.......?....
	0x0080 f2 0f 11 44 24 18 48 8d 05 00 00 00 00 48 89 04  ...D$.H......H..
	0x0090 24 48 8b 8c 24 90 00 00 00 48 89 4c 24 08 48 8d  $H..$....H.L$.H.
	0x00a0 54 24 18 48 89 54 24 10 e8 00 00 00 00 48 8d 44  T$.H.T$......H.D
	0x00b0 24 20 48 89 04 24 e8 00 00 00 00 48 8b 44 24 20  $ H..$.....H.D$ 
	0x00c0 48 85 c0 75 b7 48 8b ac 24 80 00 00 00 48 81 c4  H..u.H..$....H..
	0x00d0 88 00 00 00 c3 e8 00 00 00 00 e9 21 ff ff ff     ...........!...
	rel 5+4 t=17 TLS+0
	rel 75+4 t=8 runtime.duffzero+273
	rel 86+4 t=16 type.map[float64]int+0
	rel 118+4 t=8 runtime.mapiterinit+0
	rel 137+4 t=16 type.map[float64]int+0
	rel 169+4 t=8 runtime.mapdelete+0
	rel 183+4 t=8 runtime.mapiternext+0
	rel 214+4 t=8 runtime.morestack_noctxt+0
"".MapClearInterface STEXT size=234 args=0x8 locals=0x90
	0x0000 00000 (/usr/local/go/test/codegen/maps.go:108)	TEXT	"".MapClearInterface(SB), ABIInternal, $144-8
	0x0000 00000 (/usr/local/go/test/codegen/maps.go:108)	MOVQ	(TLS), CX
	0x0009 00009 (/usr/local/go/test/codegen/maps.go:108)	LEAQ	-16(SP), AX
	0x000e 00014 (/usr/local/go/test/codegen/maps.go:108)	CMPQ	AX, 16(CX)
	0x0012 00018 (/usr/local/go/test/codegen/maps.go:108)	PCDATA	$0, $-2
	0x0012 00018 (/usr/local/go/test/codegen/maps.go:108)	JLS	224
	0x0018 00024 (/usr/local/go/test/codegen/maps.go:108)	PCDATA	$0, $-1
	0x0018 00024 (/usr/local/go/test/codegen/maps.go:108)	SUBQ	$144, SP
	0x001f 00031 (/usr/local/go/test/codegen/maps.go:108)	MOVQ	BP, 136(SP)
	0x0027 00039 (/usr/local/go/test/codegen/maps.go:108)	LEAQ	136(SP), BP
	0x002f 00047 (/usr/local/go/test/codegen/maps.go:108)	FUNCDATA	$0, gclocals·c7c4fc7b12f6707ea74acf7400192967(SB)
	0x002f 00047 (/usr/local/go/test/codegen/maps.go:108)	FUNCDATA	$1, gclocals·df4d9be72e83b589af0c628812f5c907(SB)
	0x002f 00047 (/usr/local/go/test/codegen/maps.go:108)	FUNCDATA	$3, "".MapClearInterface.stkobj(SB)
	0x002f 00047 (/usr/local/go/test/codegen/maps.go:111)	LEAQ	""..autotmp_3+40(SP), DI
	0x0034 00052 (/usr/local/go/test/codegen/maps.go:111)	XORPS	X0, X0
	0x0037 00055 (/usr/local/go/test/codegen/maps.go:111)	LEAQ	-32(DI), DI
	0x003b 00059 (/usr/local/go/test/codegen/maps.go:111)	NOP
	0x0040 00064 (/usr/local/go/test/codegen/maps.go:111)	DUFFZERO	$273
	0x0053 00083 (/usr/local/go/test/codegen/maps.go:111)	LEAQ	type.map[interface {}]int(SB), AX
	0x005a 00090 (/usr/local/go/test/codegen/maps.go:111)	MOVQ	AX, (SP)
	0x005e 00094 (/usr/local/go/test/codegen/maps.go:111)	MOVQ	"".m+152(SP), CX
	0x0066 00102 (/usr/local/go/test/codegen/maps.go:111)	MOVQ	CX, 8(SP)
	0x006b 00107 (/usr/local/go/test/codegen/maps.go:111)	LEAQ	""..autotmp_3+40(SP), DX
	0x0070 00112 (/usr/local/go/test/codegen/maps.go:111)	MOVQ	DX, 16(SP)
	0x0075 00117 (/usr/local/go/test/codegen/maps.go:111)	PCDATA	$1, $1
	0x0075 00117 (/usr/local/go/test/codegen/maps.go:111)	CALL	runtime.mapiterinit(SB)
	0x007a 00122 (/usr/local/go/test/codegen/maps.go:111)	JMP	197
	0x007c 00124 (/usr/local/go/test/codegen/maps.go:111)	MOVQ	(AX), CX
	0x007f 00127 (/usr/local/go/test/codegen/maps.go:111)	MOVQ	8(AX), AX
	0x0083 00131 (/usr/local/go/test/codegen/maps.go:112)	MOVQ	CX, ""..autotmp_4+24(SP)
	0x0088 00136 (/usr/local/go/test/codegen/maps.go:112)	MOVQ	AX, ""..autotmp_4+32(SP)
	0x008d 00141 (/usr/local/go/test/codegen/maps.go:112)	LEAQ	type.map[interface {}]int(SB), AX
	0x0094 00148 (/usr/local/go/test/codegen/maps.go:112)	MOVQ	AX, (SP)
	0x0098 00152 (/usr/local/go/test/codegen/maps.go:112)	MOVQ	"".m+152(SP), CX
	0x00a0 00160 (/usr/local/go/test/codegen/maps.go:112)	MOVQ	CX, 8(SP)
	0x00a5 00165 (/usr/local/go/test/codegen/maps.go:112)	LEAQ	""..autotmp_4+24(SP), DX
	0x00aa 00170 (/usr/local/go/test/codegen/maps.go:112)	MOVQ	DX, 16(SP)
	0x00af 00175 (/usr/local/go/test/codegen/maps.go:112)	CALL	runtime.mapdelete(SB)
	0x00b4 00180 (/usr/local/go/test/codegen/maps.go:111)	LEAQ	""..autotmp_3+40(SP), AX
	0x00b9 00185 (/usr/local/go/test/codegen/maps.go:111)	MOVQ	AX, (SP)
	0x00bd 00189 (/usr/local/go/test/codegen/maps.go:111)	NOP
	0x00c0 00192 (/usr/local/go/test/codegen/maps.go:111)	CALL	runtime.mapiternext(SB)
	0x00c5 00197 (/usr/local/go/test/codegen/maps.go:111)	MOVQ	""..autotmp_3+40(SP), AX
	0x00ca 00202 (/usr/local/go/test/codegen/maps.go:111)	TESTQ	AX, AX
	0x00cd 00205 (/usr/local/go/test/codegen/maps.go:111)	JNE	124
	0x00cf 00207 (/usr/local/go/test/codegen/maps.go:111)	PCDATA	$1, $-1
	0x00cf 00207 (/usr/local/go/test/codegen/maps.go:111)	MOVQ	136(SP), BP
	0x00d7 00215 (/usr/local/go/test/codegen/maps.go:111)	ADDQ	$144, SP
	0x00de 00222 (/usr/local/go/test/codegen/maps.go:111)	RET
	0x00df 00223 (/usr/local/go/test/codegen/maps.go:111)	NOP
	0x00df 00223 (/usr/local/go/test/codegen/maps.go:108)	PCDATA	$1, $-1
	0x00df 00223 (/usr/local/go/test/codegen/maps.go:108)	PCDATA	$0, $-2
	0x00df 00223 (/usr/local/go/test/codegen/maps.go:108)	NOP
	0x00e0 00224 (/usr/local/go/test/codegen/maps.go:108)	CALL	runtime.morestack_noctxt(SB)
	0x00e5 00229 (/usr/local/go/test/codegen/maps.go:108)	PCDATA	$0, $-1
	0x00e5 00229 (/usr/local/go/test/codegen/maps.go:108)	JMP	0
	0x0000 64 48 8b 0c 25 00 00 00 00 48 8d 44 24 f0 48 3b  dH..%....H.D$.H;
	0x0010 41 10 0f 86 c8 00 00 00 48 81 ec 90 00 00 00 48  A.......H......H
	0x0020 89 ac 24 88 00 00 00 48 8d ac 24 88 00 00 00 48  ..$....H..$....H
	0x0030 8d 7c 24 28 0f 57 c0 48 8d 7f e0 0f 1f 44 00 00  .|$(.W.H.....D..
	0x0040 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00 00 00 48  H.l$.H.l$......H
	0x0050 8b 6d 00 48 8d 05 00 00 00 00 48 89 04 24 48 8b  .m.H......H..$H.
	0x0060 8c 24 98 00 00 00 48 89 4c 24 08 48 8d 54 24 28  .$....H.L$.H.T$(
	0x0070 48 89 54 24 10 e8 00 00 00 00 eb 49 48 8b 08 48  H.T$.......IH..H
	0x0080 8b 40 08 48 89 4c 24 18 48 89 44 24 20 48 8d 05  .@.H.L$.H.D$ H..
	0x0090 00 00 00 00 48 89 04 24 48 8b 8c 24 98 00 00 00  ....H..$H..$....
	0x00a0 48 89 4c 24 08 48 8d 54 24 18 48 89 54 24 10 e8  H.L$.H.T$.H.T$..
	0x00b0 00 00 00 00 48 8d 44 24 28 48 89 04 24 0f 1f 00  ....H.D$(H..$...
	0x00c0 e8 00 00 00 00 48 8b 44 24 28 48 85 c0 75 ad 48  .....H.D$(H..u.H
	0x00d0 8b ac 24 88 00 00 00 48 81 c4 90 00 00 00 c3 90  ..$....H........
	0x00e0 e8 00 00 00 00 e9 16 ff ff ff                    ..........
	rel 5+4 t=17 TLS+0
	rel 75+4 t=8 runtime.duffzero+273
	rel 86+4 t=16 type.map[interface {}]int+0
	rel 118+4 t=8 runtime.mapiterinit+0
	rel 144+4 t=16 type.map[interface {}]int+0
	rel 176+4 t=8 runtime.mapdelete+0
	rel 193+4 t=8 runtime.mapiternext+0
	rel 225+4 t=8 runtime.morestack_noctxt+0
"".MapClearSideEffect STEXT size=234 args=0x10 locals=0x88
	0x0000 00000 (/usr/local/go/test/codegen/maps.go:116)	TEXT	"".MapClearSideEffect(SB), ABIInternal, $136-16
	0x0000 00000 (/usr/local/go/test/codegen/maps.go:116)	MOVQ	(TLS), CX
	0x0009 00009 (/usr/local/go/test/codegen/maps.go:116)	LEAQ	-8(SP), AX
	0x000e 00014 (/usr/local/go/test/codegen/maps.go:116)	CMPQ	AX, 16(CX)
	0x0012 00018 (/usr/local/go/test/codegen/maps.go:116)	PCDATA	$0, $-2
	0x0012 00018 (/usr/local/go/test/codegen/maps.go:116)	JLS	224
	0x0018 00024 (/usr/local/go/test/codegen/maps.go:116)	PCDATA	$0, $-1
	0x0018 00024 (/usr/local/go/test/codegen/maps.go:116)	SUBQ	$136, SP
	0x001f 00031 (/usr/local/go/test/codegen/maps.go:116)	MOVQ	BP, 128(SP)
	0x0027 00039 (/usr/local/go/test/codegen/maps.go:116)	LEAQ	128(SP), BP
	0x002f 00047 (/usr/local/go/test/codegen/maps.go:116)	FUNCDATA	$0, gclocals·c7c4fc7b12f6707ea74acf7400192967(SB)
	0x002f 00047 (/usr/local/go/test/codegen/maps.go:116)	FUNCDATA	$1, gclocals·e84991a80b24f8ce783c4ef5447afa10(SB)
	0x002f 00047 (/usr/local/go/test/codegen/maps.go:116)	FUNCDATA	$3, "".MapClearSideEffect.stkobj(SB)
	0x002f 00047 (/usr/local/go/test/codegen/maps.go:120)	LEAQ	""..autotmp_4+32(SP), DI
	0x0034 00052 (/usr/local/go/test/codegen/maps.go:120)	XORPS	X0, X0
	0x0037 00055 (/usr/local/go/test/codegen/maps.go:120)	LEAQ	-32(DI), DI
	0x003b 00059 (/usr/local/go/test/codegen/maps.go:120)	NOP
	0x0040 00064 (/usr/local/go/test/codegen/maps.go:120)	DUFFZERO	$273
	0x0053 00083 (/usr/local/go/test/codegen/maps.go:120)	LEAQ	type.map[int]int(SB), AX
	0x005a 00090 (/usr/local/go/test/codegen/maps.go:120)	MOVQ	AX, (SP)
	0x005e 00094 (/usr/local/go/test/codegen/maps.go:120)	MOVQ	"".m+144(SP), CX
	0x0066 00102 (/usr/local/go/test/codegen/maps.go:120)	MOVQ	CX, 8(SP)
	0x006b 00107 (/usr/local/go/test/codegen/maps.go:120)	LEAQ	""..autotmp_4+32(SP), DX
	0x0070 00112 (/usr/local/go/test/codegen/maps.go:120)	MOVQ	DX, 16(SP)
	0x0075 00117 (/usr/local/go/test/codegen/maps.go:120)	PCDATA	$1, $1
	0x0075 00117 (/usr/local/go/test/codegen/maps.go:120)	CALL	runtime.mapiterinit(SB)
	0x007a 00122 (/usr/local/go/test/codegen/maps.go:120)	XORL	AX, AX
	0x007c 00124 (/usr/local/go/test/codegen/maps.go:120)	JMP	187
	0x007e 00126 (/usr/local/go/test/codegen/maps.go:120)	MOVQ	(CX), AX
	0x0081 00129 (/usr/local/go/test/codegen/maps.go:120)	MOVQ	AX, "".k+24(SP)
	0x0086 00134 (/usr/local/go/test/codegen/maps.go:121)	LEAQ	type.map[int]int(SB), CX
	0x008d 00141 (/usr/local/go/test/codegen/maps.go:121)	MOVQ	CX, (SP)
	0x0091 00145 (/usr/local/go/test/codegen/maps.go:121)	MOVQ	"".m+144(SP), DX
	0x0099 00153 (/usr/local/go/test/codegen/maps.go:121)	MOVQ	DX, 8(SP)
	0x009e 00158 (/usr/local/go/test/codegen/maps.go:121)	MOVQ	AX, 16(SP)
	0x00a3 00163 (/usr/local/go/test/codegen/maps.go:121)	CALL	runtime.mapdelete_fast64(SB)
	0x00a8 00168 (/usr/local/go/test/codegen/maps.go:120)	LEAQ	""..autotmp_4+32(SP), AX
	0x00ad 00173 (/usr/local/go/test/codegen/maps.go:120)	MOVQ	AX, (SP)
	0x00b1 00177 (/usr/local/go/test/codegen/maps.go:120)	CALL	runtime.mapiternext(SB)
	0x00b6 00182 (/usr/local/go/test/codegen/maps.go:123)	MOVQ	"".k+24(SP), AX
	0x00bb 00187 (/usr/local/go/test/codegen/maps.go:120)	MOVQ	""..autotmp_4+32(SP), CX
	0x00c0 00192 (/usr/local/go/test/codegen/maps.go:120)	TESTQ	CX, CX
	0x00c3 00195 (/usr/local/go/test/codegen/maps.go:120)	JNE	126
	0x00c5 00197 (/usr/local/go/test/codegen/maps.go:123)	MOVQ	AX, "".~r1+152(SP)
	0x00cd 00205 (/usr/local/go/test/codegen/maps.go:123)	MOVQ	128(SP), BP
	0x00d5 00213 (/usr/local/go/test/codegen/maps.go:123)	ADDQ	$136, SP
	0x00dc 00220 (/usr/local/go/test/codegen/maps.go:123)	RET
	0x00dd 00221 (/usr/local/go/test/codegen/maps.go:123)	NOP
	0x00dd 00221 (/usr/local/go/test/codegen/maps.go:116)	PCDATA	$1, $-1
	0x00dd 00221 (/usr/local/go/test/codegen/maps.go:116)	PCDATA	$0, $-2
	0x00dd 00221 (/usr/local/go/test/codegen/maps.go:116)	NOP
	0x00e0 00224 (/usr/local/go/test/codegen/maps.go:116)	CALL	runtime.morestack_noctxt(SB)
	0x00e5 00229 (/usr/local/go/test/codegen/maps.go:116)	PCDATA	$0, $-1
	0x00e5 00229 (/usr/local/go/test/codegen/maps.go:116)	JMP	0
	0x0000 64 48 8b 0c 25 00 00 00 00 48 8d 44 24 f8 48 3b  dH..%....H.D$.H;
	0x0010 41 10 0f 86 c8 00 00 00 48 81 ec 88 00 00 00 48  A.......H......H
	0x0020 89 ac 24 80 00 00 00 48 8d ac 24 80 00 00 00 48  ..$....H..$....H
	0x0030 8d 7c 24 20 0f 57 c0 48 8d 7f e0 0f 1f 44 00 00  .|$ .W.H.....D..
	0x0040 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00 00 00 48  H.l$.H.l$......H
	0x0050 8b 6d 00 48 8d 05 00 00 00 00 48 89 04 24 48 8b  .m.H......H..$H.
	0x0060 8c 24 90 00 00 00 48 89 4c 24 08 48 8d 54 24 20  .$....H.L$.H.T$ 
	0x0070 48 89 54 24 10 e8 00 00 00 00 31 c0 eb 3d 48 8b  H.T$......1..=H.
	0x0080 01 48 89 44 24 18 48 8d 0d 00 00 00 00 48 89 0c  .H.D$.H......H..
	0x0090 24 48 8b 94 24 90 00 00 00 48 89 54 24 08 48 89  $H..$....H.T$.H.
	0x00a0 44 24 10 e8 00 00 00 00 48 8d 44 24 20 48 89 04  D$......H.D$ H..
	0x00b0 24 e8 00 00 00 00 48 8b 44 24 18 48 8b 4c 24 20  $.....H.D$.H.L$ 
	0x00c0 48 85 c9 75 b9 48 89 84 24 98 00 00 00 48 8b ac  H..u.H..$....H..
	0x00d0 24 80 00 00 00 48 81 c4 88 00 00 00 c3 0f 1f 00  $....H..........
	0x00e0 e8 00 00 00 00 e9 16 ff ff ff                    ..........
	rel 5+4 t=17 TLS+0
	rel 75+4 t=8 runtime.duffzero+273
	rel 86+4 t=16 type.map[int]int+0
	rel 118+4 t=8 runtime.mapiterinit+0
	rel 137+4 t=16 type.map[int]int+0
	rel 164+4 t=8 runtime.mapdelete_fast64+0
	rel 178+4 t=8 runtime.mapiternext+0
	rel 225+4 t=8 runtime.morestack_noctxt+0
type..hash.[2]string STEXT dupok size=110 args=0x18 locals=0x28
	0x0000 00000 (<autogenerated>:1)	TEXT	type..hash.[2]string(SB), DUPOK|ABIInternal, $40-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	PCDATA	$0, $-2
	0x000d 00013 (<autogenerated>:1)	JLS	103
	0x000f 00015 (<autogenerated>:1)	PCDATA	$0, $-1
	0x000f 00015 (<autogenerated>:1)	SUBQ	$40, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 32(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	32(SP), BP
	0x001d 00029 (<autogenerated>:1)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x001d 00029 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x001d 00029 (<autogenerated>:1)	XORL	AX, AX
	0x001f 00031 (<autogenerated>:1)	MOVQ	"".h+56(SP), CX
	0x0024 00036 (<autogenerated>:1)	JMP	82
	0x0026 00038 (<autogenerated>:1)	MOVQ	AX, "".i+24(SP)
	0x002b 00043 (<autogenerated>:1)	SHLQ	$4, AX
	0x002f 00047 (<autogenerated>:1)	MOVQ	"".p+48(SP), BX
	0x0034 00052 (<autogenerated>:1)	ADDQ	BX, AX
	0x0037 00055 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x003b 00059 (<autogenerated>:1)	MOVQ	CX, 8(SP)
	0x0040 00064 (<autogenerated>:1)	PCDATA	$1, $0
	0x0040 00064 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x0045 00069 (<autogenerated>:1)	MOVQ	16(SP), CX
	0x004a 00074 (<autogenerated>:1)	MOVQ	"".i+24(SP), AX
	0x004f 00079 (<autogenerated>:1)	INCQ	AX
	0x0052 00082 (<autogenerated>:1)	CMPQ	AX, $2
	0x0056 00086 (<autogenerated>:1)	JLT	38
	0x0058 00088 (<autogenerated>:1)	MOVQ	CX, "".~r2+64(SP)
	0x005d 00093 (<autogenerated>:1)	MOVQ	32(SP), BP
	0x0062 00098 (<autogenerated>:1)	ADDQ	$40, SP
	0x0066 00102 (<autogenerated>:1)	RET
	0x0067 00103 (<autogenerated>:1)	NOP
	0x0067 00103 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0067 00103 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0067 00103 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x006c 00108 (<autogenerated>:1)	PCDATA	$0, $-1
	0x006c 00108 (<autogenerated>:1)	JMP	0
	0x0000 64 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 58 48  dH..%....H;a.vXH
	0x0010 83 ec 28 48 89 6c 24 20 48 8d 6c 24 20 31 c0 48  ..(H.l$ H.l$ 1.H
	0x0020 8b 4c 24 38 eb 2c 48 89 44 24 18 48 c1 e0 04 48  .L$8.,H.D$.H...H
	0x0030 8b 5c 24 30 48 01 d8 48 89 04 24 48 89 4c 24 08  .\$0H..H..$H.L$.
	0x0040 e8 00 00 00 00 48 8b 4c 24 10 48 8b 44 24 18 48  .....H.L$.H.D$.H
	0x0050 ff c0 48 83 f8 02 7c ce 48 89 4c 24 40 48 8b 6c  ..H...|.H.L$@H.l
	0x0060 24 20 48 83 c4 28 c3 e8 00 00 00 00 eb 92        $ H..(........
	rel 5+4 t=17 TLS+0
	rel 65+4 t=8 runtime.strhash+0
	rel 104+4 t=8 runtime.morestack_noctxt+0
go.cuinfo.packagename.command-line-arguments SDWARFINFO dupok size=0
	0x0000 63 6f 64 65 67 65 6e                             codegen
go.string."abc" SRODATA dupok size=3
	0x0000 61 62 63                                         abc
runtime.memequal64·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 runtime.memequal64+0
runtime.gcbits.01 SRODATA dupok size=1
	0x0000 01                                               .
type..namedata.*[]string- SRODATA dupok size=12
	0x0000 00 00 09 2a 5b 5d 73 74 72 69 6e 67              ...*[]string
type.*[]string SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 92 22 76 84 08 08 08 36 00 00 00 00 00 00 00 00  ."v....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]string-+0
	rel 48+8 t=1 type.[]string+0
type.[]string SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 d3 a8 f3 0a 02 08 08 17 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]string-+0
	rel 44+4 t=6 type.*[]string+0
	rel 48+8 t=1 type.string+0
type..eqfunc.[2]string SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 type..eq.[2]string+0
type..namedata.*[2]string- SRODATA dupok size=13
	0x0000 00 00 0a 2a 5b 32 5d 73 74 72 69 6e 67           ...*[2]string
type.*[2]string SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 0c 66 1f 3c 08 08 08 36 00 00 00 00 00 00 00 00  .f.<...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[2]string-+0
	rel 48+8 t=1 type.[2]string+0
runtime.gcbits.05 SRODATA dupok size=1
	0x0000 05                                               .
type.[2]string SRODATA dupok size=72
	0x0000 20 00 00 00 00 00 00 00 18 00 00 00 00 00 00 00   ...............
	0x0010 50 58 e5 e9 02 08 08 11 00 00 00 00 00 00 00 00  PX..............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 02 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 type..eqfunc.[2]string+0
	rel 32+8 t=1 runtime.gcbits.05+0
	rel 40+4 t=5 type..namedata.*[2]string-+0
	rel 44+4 t=6 type.*[2]string+0
	rel 48+8 t=1 type.string+0
	rel 56+8 t=1 type.[]string+0
type..namedata.*[]uint8- SRODATA dupok size=11
	0x0000 00 00 08 2a 5b 5d 75 69 6e 74 38                 ...*[]uint8
type.*[]uint8 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 a5 8e d0 69 08 08 08 36 00 00 00 00 00 00 00 00  ...i...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]uint8-+0
	rel 48+8 t=1 type.[]uint8+0
type.[]uint8 SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 df 7e 2e 38 02 08 08 17 00 00 00 00 00 00 00 00  .~.8............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]uint8-+0
	rel 44+4 t=6 type.*[]uint8+0
	rel 48+8 t=1 type.uint8+0
type..namedata.*[8]uint8- SRODATA dupok size=12
	0x0000 00 00 09 2a 5b 38 5d 75 69 6e 74 38              ...*[8]uint8
type.*[8]uint8 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 a9 89 a5 7a 08 08 08 36 00 00 00 00 00 00 00 00  ...z...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[8]uint8-+0
	rel 48+8 t=1 type.[8]uint8+0
runtime.gcbits. SRODATA dupok size=0
type.[8]uint8 SRODATA dupok size=72
	0x0000 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 3e f9 30 b4 0a 01 01 11 00 00 00 00 00 00 00 00  >.0.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 08 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type..namedata.*[8]uint8-+0
	rel 44+4 t=6 type.*[8]uint8+0
	rel 48+8 t=1 type.uint8+0
	rel 56+8 t=1 type.[]uint8+0
type..namedata.*[]float64- SRODATA dupok size=13
	0x0000 00 00 0a 2a 5b 5d 66 6c 6f 61 74 36 34           ...*[]float64
type.*[]float64 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 f4 91 61 4f 08 08 08 36 00 00 00 00 00 00 00 00  ..aO...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]float64-+0
	rel 48+8 t=1 type.[]float64+0
type.[]float64 SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 30 33 37 9c 02 08 08 17 00 00 00 00 00 00 00 00  037.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]float64-+0
	rel 44+4 t=6 type.*[]float64+0
	rel 48+8 t=1 type.float64+0
type..namedata.*[8]float64- SRODATA dupok size=14
	0x0000 00 00 0b 2a 5b 38 5d 66 6c 6f 61 74 36 34        ...*[8]float64
type.*[8]float64 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 5e 31 96 0a 08 08 08 36 00 00 00 00 00 00 00 00  ^1.....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[8]float64-+0
	rel 48+8 t=1 type.noalg.[8]float64+0
type.noalg.[8]float64 SRODATA dupok size=72
	0x0000 40 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  @...............
	0x0010 9d 41 3c d7 02 08 08 11 00 00 00 00 00 00 00 00  .A<.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 08 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type..namedata.*[8]float64-+0
	rel 44+4 t=6 type.*[8]float64+0
	rel 48+8 t=1 type.float64+0
	rel 56+8 t=1 type.[]float64+0
type..namedata.*[]int- SRODATA dupok size=9
	0x0000 00 00 06 2a 5b 5d 69 6e 74                       ...*[]int
type.*[]int SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 1b 31 52 88 08 08 08 36 00 00 00 00 00 00 00 00  .1R....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]int-+0
	rel 48+8 t=1 type.[]int+0
type.[]int SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 8e 66 f9 1b 02 08 08 17 00 00 00 00 00 00 00 00  .f..............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]int-+0
	rel 44+4 t=6 type.*[]int+0
	rel 48+8 t=1 type.int+0
type..namedata.*[8]int- SRODATA dupok size=10
	0x0000 00 00 07 2a 5b 38 5d 69 6e 74                    ...*[8]int
type.*[8]int SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 f3 3f a8 3b 08 08 08 36 00 00 00 00 00 00 00 00  .?.;...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[8]int-+0
	rel 48+8 t=1 type.noalg.[8]int+0
type.noalg.[8]int SRODATA dupok size=72
	0x0000 40 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  @...............
	0x0010 96 99 d5 05 02 08 08 11 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 08 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type..namedata.*[8]int-+0
	rel 44+4 t=6 type.*[8]int+0
	rel 48+8 t=1 type.int+0
	rel 56+8 t=1 type.[]int+0
type..namedata.*map.bucket[float64]int- SRODATA dupok size=26
	0x0000 00 00 17 2a 6d 61 70 2e 62 75 63 6b 65 74 5b 66  ...*map.bucket[f
	0x0010 6c 6f 61 74 36 34 5d 69 6e 74                    loat64]int
type..importpath.. SRODATA dupok size=3
	0x0000 00 00 00                                         ...
type..namedata.topbits- SRODATA dupok size=10
	0x0000 00 00 07 74 6f 70 62 69 74 73                    ...topbits
type..namedata.keys- SRODATA dupok size=7
	0x0000 00 00 04 6b 65 79 73                             ...keys
type..namedata.elems- SRODATA dupok size=8
	0x0000 00 00 05 65 6c 65 6d 73                          ...elems
type..namedata.overflow- SRODATA dupok size=11
	0x0000 00 00 08 6f 76 65 72 66 6c 6f 77                 ...overflow
type.noalg.map.bucket[float64]int SRODATA dupok size=176
	0x0000 90 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 b1 1b 8b 94 02 08 08 19 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 04 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 90 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 10 01 00 00 00 00 00 00  ................
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type..namedata.*map.bucket[float64]int-+0
	rel 44+4 t=6 type.*map.bucket[float64]int+0
	rel 48+8 t=1 type..importpath..+0
	rel 56+8 t=1 type.noalg.map.bucket[float64]int+80
	rel 80+8 t=1 type..namedata.topbits-+0
	rel 88+8 t=1 type.[8]uint8+0
	rel 104+8 t=1 type..namedata.keys-+0
	rel 112+8 t=1 type.noalg.[8]float64+0
	rel 128+8 t=1 type..namedata.elems-+0
	rel 136+8 t=1 type.noalg.[8]int+0
	rel 152+8 t=1 type..namedata.overflow-+0
	rel 160+8 t=1 type.uintptr+0
type.*map.bucket[float64]int SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 8a d6 61 2c 08 08 08 36 00 00 00 00 00 00 00 00  ..a,...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*map.bucket[float64]int-+0
	rel 48+8 t=1 type.noalg.map.bucket[float64]int+0
runtime.gcbits.2c SRODATA dupok size=1
	0x0000 2c                                               ,
type..namedata.*map.hdr[float64]int- SRODATA dupok size=23
	0x0000 00 00 14 2a 6d 61 70 2e 68 64 72 5b 66 6c 6f 61  ...*map.hdr[floa
	0x0010 74 36 34 5d 69 6e 74                             t64]int
type..namedata.count- SRODATA dupok size=8
	0x0000 00 00 05 63 6f 75 6e 74                          ...count
type..namedata.flags- SRODATA dupok size=8
	0x0000 00 00 05 66 6c 61 67 73                          ...flags
type..namedata.B. SRODATA dupok size=4
	0x0000 01 00 01 42                                      ...B
type..namedata.noverflow- SRODATA dupok size=12
	0x0000 00 00 09 6e 6f 76 65 72 66 6c 6f 77              ...noverflow
type..namedata.hash0- SRODATA dupok size=8
	0x0000 00 00 05 68 61 73 68 30                          ...hash0
type..namedata.buckets- SRODATA dupok size=10
	0x0000 00 00 07 62 75 63 6b 65 74 73                    ...buckets
type..namedata.oldbuckets- SRODATA dupok size=13
	0x0000 00 00 0a 6f 6c 64 62 75 63 6b 65 74 73           ...oldbuckets
type..namedata.nevacuate- SRODATA dupok size=12
	0x0000 00 00 09 6e 65 76 61 63 75 61 74 65              ...nevacuate
type..namedata.extra- SRODATA dupok size=8
	0x0000 00 00 05 65 78 74 72 61                          ...extra
type.noalg.map.hdr[float64]int SRODATA dupok size=296
	0x0000 30 00 00 00 00 00 00 00 30 00 00 00 00 00 00 00  0.......0.......
	0x0010 c1 01 6c 9e 02 08 08 19 00 00 00 00 00 00 00 00  ..l.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 09 00 00 00 00 00 00 00 09 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 12 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 14 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00c0 18 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 00 00 00 00 00 00 00 00 20 00 00 00 00 00 00 00  ........ .......
	0x00e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00f0 30 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  0...............
	0x0100 00 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00  ........@.......
	0x0110 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0120 50 00 00 00 00 00 00 00                          P.......
	rel 32+8 t=1 runtime.gcbits.2c+0
	rel 40+4 t=5 type..namedata.*map.hdr[float64]int-+0
	rel 44+4 t=6 type.*map.hdr[float64]int+0
	rel 48+8 t=1 type..importpath..+0
	rel 56+8 t=1 type.noalg.map.hdr[float64]int+80
	rel 80+8 t=1 type..namedata.count-+0
	rel 88+8 t=1 type.int+0
	rel 104+8 t=1 type..namedata.flags-+0
	rel 112+8 t=1 type.uint8+0
	rel 128+8 t=1 type..namedata.B.+0
	rel 136+8 t=1 type.uint8+0
	rel 152+8 t=1 type..namedata.noverflow-+0
	rel 160+8 t=1 type.uint16+0
	rel 176+8 t=1 type..namedata.hash0-+0
	rel 184+8 t=1 type.uint32+0
	rel 200+8 t=1 type..namedata.buckets-+0
	rel 208+8 t=1 type.*map.bucket[float64]int+0
	rel 224+8 t=1 type..namedata.oldbuckets-+0
	rel 232+8 t=1 type.*map.bucket[float64]int+0
	rel 248+8 t=1 type..namedata.nevacuate-+0
	rel 256+8 t=1 type.uintptr+0
	rel 272+8 t=1 type..namedata.extra-+0
	rel 280+8 t=1 type.unsafe.Pointer+0
type.*map.hdr[float64]int SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 68 ba 78 57 08 08 08 36 00 00 00 00 00 00 00 00  h.xW...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*map.hdr[float64]int-+0
	rel 48+8 t=1 type.noalg.map.hdr[float64]int+0
type..namedata.*map.iter[float64]int- SRODATA dupok size=24
	0x0000 00 00 15 2a 6d 61 70 2e 69 74 65 72 5b 66 6c 6f  ...*map.iter[flo
	0x0010 61 74 36 34 5d 69 6e 74                          at64]int
type.*map.iter[float64]int SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 32 dc e1 dd 08 08 08 36 00 00 00 00 00 00 00 00  2......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*map.iter[float64]int-+0
	rel 48+8 t=1 type.noalg.map.iter[float64]int+0
runtime.gcbits.ff SRODATA dupok size=1
	0x0000 ff                                               .
type..namedata.key- SRODATA dupok size=6
	0x0000 00 00 03 6b 65 79                                ...key
type..namedata.elem- SRODATA dupok size=7
	0x0000 00 00 04 65 6c 65 6d                             ...elem
type..namedata.t- SRODATA dupok size=4
	0x0000 00 00 01 74                                      ...t
type..namedata.h- SRODATA dupok size=4
	0x0000 00 00 01 68                                      ...h
type..namedata.bptr- SRODATA dupok size=7
	0x0000 00 00 04 62 70 74 72                             ...bptr
type..namedata.oldoverflow- SRODATA dupok size=14
	0x0000 00 00 0b 6f 6c 64 6f 76 65 72 66 6c 6f 77        ...oldoverflow
type..namedata.startBucket- SRODATA dupok size=14
	0x0000 00 00 0b 73 74 61 72 74 42 75 63 6b 65 74        ...startBucket
type..namedata.offset- SRODATA dupok size=9
	0x0000 00 00 06 6f 66 66 73 65 74                       ...offset
type..namedata.wrapped- SRODATA dupok size=10
	0x0000 00 00 07 77 72 61 70 70 65 64                    ...wrapped
type..namedata.i- SRODATA dupok size=4
	0x0000 00 00 01 69                                      ...i
type..namedata.bucket- SRODATA dupok size=9
	0x0000 00 00 06 62 75 63 6b 65 74                       ...bucket
type..namedata.checkBucket- SRODATA dupok size=14
	0x0000 00 00 0b 63 68 65 63 6b 42 75 63 6b 65 74        ...checkBucket
type.noalg.map.iter[float64]int SRODATA dupok size=440
	0x0000 60 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00  `.......@.......
	0x0010 8b 4b 48 88 02 08 08 19 00 00 00 00 00 00 00 00  .KH.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 0f 00 00 00 00 00 00 00 0f 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 20 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x00a0 00 00 00 00 00 00 00 00 30 00 00 00 00 00 00 00  ........0.......
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00c0 40 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  @...............
	0x00d0 00 00 00 00 00 00 00 00 50 00 00 00 00 00 00 00  ........P.......
	0x00e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00f0 60 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  `...............
	0x0100 00 00 00 00 00 00 00 00 70 00 00 00 00 00 00 00  ........p.......
	0x0110 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0120 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0130 00 00 00 00 00 00 00 00 90 00 00 00 00 00 00 00  ................
	0x0140 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0150 92 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0160 00 00 00 00 00 00 00 00 94 00 00 00 00 00 00 00  ................
	0x0170 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0180 96 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0190 00 00 00 00 00 00 00 00 a0 00 00 00 00 00 00 00  ................
	0x01a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01b0 b0 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.ff+0
	rel 40+4 t=5 type..namedata.*map.iter[float64]int-+0
	rel 44+4 t=6 type.*map.iter[float64]int+0
	rel 48+8 t=1 type..importpath..+0
	rel 56+8 t=1 type.noalg.map.iter[float64]int+80
	rel 80+8 t=1 type..namedata.key-+0
	rel 88+8 t=1 type.*float64+0
	rel 104+8 t=1 type..namedata.elem-+0
	rel 112+8 t=1 type.*int+0
	rel 128+8 t=1 type..namedata.t-+0
	rel 136+8 t=1 type.unsafe.Pointer+0
	rel 152+8 t=1 type..namedata.h-+0
	rel 160+8 t=1 type.*map.hdr[float64]int+0
	rel 176+8 t=1 type..namedata.buckets-+0
	rel 184+8 t=1 type.*map.bucket[float64]int+0
	rel 200+8 t=1 type..namedata.bptr-+0
	rel 208+8 t=1 type.*map.bucket[float64]int+0
	rel 224+8 t=1 type..namedata.overflow-+0
	rel 232+8 t=1 type.unsafe.Pointer+0
	rel 248+8 t=1 type..namedata.oldoverflow-+0
	rel 256+8 t=1 type.unsafe.Pointer+0
	rel 272+8 t=1 type..namedata.startBucket-+0
	rel 280+8 t=1 type.uintptr+0
	rel 296+8 t=1 type..namedata.offset-+0
	rel 304+8 t=1 type.uint8+0
	rel 320+8 t=1 type..namedata.wrapped-+0
	rel 328+8 t=1 type.bool+0
	rel 344+8 t=1 type..namedata.B.+0
	rel 352+8 t=1 type.uint8+0
	rel 368+8 t=1 type..namedata.i-+0
	rel 376+8 t=1 type.uint8+0
	rel 392+8 t=1 type..namedata.bucket-+0
	rel 400+8 t=1 type.uintptr+0
	rel 416+8 t=1 type..namedata.checkBucket-+0
	rel 424+8 t=1 type.uintptr+0
runtime.nilinterequal·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 runtime.nilinterequal+0
runtime.gcbits.02 SRODATA dupok size=1
	0x0000 02                                               .
type..namedata.*interface {}- SRODATA dupok size=16
	0x0000 00 00 0d 2a 69 6e 74 65 72 66 61 63 65 20 7b 7d  ...*interface {}
type.interface {} SRODATA dupok size=80
	0x0000 10 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x0010 e7 57 a0 18 02 08 08 14 00 00 00 00 00 00 00 00  .W..............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 24+8 t=1 runtime.nilinterequal·f+0
	rel 32+8 t=1 runtime.gcbits.02+0
	rel 40+4 t=5 type..namedata.*interface {}-+0
	rel 44+4 t=6 type.*interface {}+0
	rel 56+8 t=1 type.interface {}+80
type.*interface {} SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 4f 0f 96 9d 08 08 08 36 00 00 00 00 00 00 00 00  O......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*interface {}-+0
	rel 48+8 t=1 type.interface {}+0
type..namedata.*[]interface {}- SRODATA dupok size=18
	0x0000 00 00 0f 2a 5b 5d 69 6e 74 65 72 66 61 63 65 20  ...*[]interface 
	0x0010 7b 7d                                            {}
type.*[]interface {} SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 f3 04 9a e7 08 08 08 36 00 00 00 00 00 00 00 00  .......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]interface {}-+0
	rel 48+8 t=1 type.[]interface {}+0
type.[]interface {} SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 70 93 ea 2f 02 08 08 17 00 00 00 00 00 00 00 00  p../............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]interface {}-+0
	rel 44+4 t=6 type.*[]interface {}+0
	rel 48+8 t=1 type.interface {}+0
type..namedata.*[8]interface {}- SRODATA dupok size=19
	0x0000 00 00 10 2a 5b 38 5d 69 6e 74 65 72 66 61 63 65  ...*[8]interface
	0x0010 20 7b 7d                                          {}
type.*[8]interface {} SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 89 61 4b 14 08 08 08 36 00 00 00 00 00 00 00 00  .aK....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[8]interface {}-+0
	rel 48+8 t=1 type.noalg.[8]interface {}+0
runtime.gcbits.aaaa SRODATA dupok size=2
	0x0000 aa aa                                            ..
type.noalg.[8]interface {} SRODATA dupok size=72
	0x0000 80 00 00 00 00 00 00 00 80 00 00 00 00 00 00 00  ................
	0x0010 c7 2e 54 f0 02 08 08 11 00 00 00 00 00 00 00 00  ..T.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 08 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.aaaa+0
	rel 40+4 t=5 type..namedata.*[8]interface {}-+0
	rel 44+4 t=6 type.*[8]interface {}+0
	rel 48+8 t=1 type.interface {}+0
	rel 56+8 t=1 type.[]interface {}+0
runtime.gcbits.54550102 SRODATA dupok size=4
	0x0000 54 55 01 02                                      TU..
type..namedata.*map.bucket[interface {}]int- SRODATA dupok size=31
	0x0000 00 00 1c 2a 6d 61 70 2e 62 75 63 6b 65 74 5b 69  ...*map.bucket[i
	0x0010 6e 74 65 72 66 61 63 65 20 7b 7d 5d 69 6e 74     nterface {}]int
type.noalg.map.bucket[interface {}]int SRODATA dupok size=176
	0x0000 d0 00 00 00 00 00 00 00 d0 00 00 00 00 00 00 00  ................
	0x0010 59 aa 41 6c 02 08 08 19 00 00 00 00 00 00 00 00  Y.Al............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 04 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 10 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 90 01 00 00 00 00 00 00  ................
	rel 32+8 t=1 runtime.gcbits.54550102+0
	rel 40+4 t=5 type..namedata.*map.bucket[interface {}]int-+0
	rel 44+4 t=6 type.*map.bucket[interface {}]int+0
	rel 48+8 t=1 type..importpath..+0
	rel 56+8 t=1 type.noalg.map.bucket[interface {}]int+80
	rel 80+8 t=1 type..namedata.topbits-+0
	rel 88+8 t=1 type.[8]uint8+0
	rel 104+8 t=1 type..namedata.keys-+0
	rel 112+8 t=1 type.noalg.[8]interface {}+0
	rel 128+8 t=1 type..namedata.elems-+0
	rel 136+8 t=1 type.noalg.[8]int+0
	rel 152+8 t=1 type..namedata.overflow-+0
	rel 160+8 t=1 type.*map.bucket[interface {}]int+0
type.*map.bucket[interface {}]int SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 78 3f 0b c2 08 08 08 36 00 00 00 00 00 00 00 00  x?.....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*map.bucket[interface {}]int-+0
	rel 48+8 t=1 type.noalg.map.bucket[interface {}]int+0
type..namedata.*map.hdr[interface {}]int- SRODATA dupok size=28
	0x0000 00 00 19 2a 6d 61 70 2e 68 64 72 5b 69 6e 74 65  ...*map.hdr[inte
	0x0010 72 66 61 63 65 20 7b 7d 5d 69 6e 74              rface {}]int
type.noalg.map.hdr[interface {}]int SRODATA dupok size=296
	0x0000 30 00 00 00 00 00 00 00 30 00 00 00 00 00 00 00  0.......0.......
	0x0010 13 b8 de c6 02 08 08 19 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 09 00 00 00 00 00 00 00 09 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 12 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 14 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00c0 18 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 00 00 00 00 00 00 00 00 20 00 00 00 00 00 00 00  ........ .......
	0x00e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00f0 30 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  0...............
	0x0100 00 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00  ........@.......
	0x0110 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0120 50 00 00 00 00 00 00 00                          P.......
	rel 32+8 t=1 runtime.gcbits.2c+0
	rel 40+4 t=5 type..namedata.*map.hdr[interface {}]int-+0
	rel 44+4 t=6 type.*map.hdr[interface {}]int+0
	rel 48+8 t=1 type..importpath..+0
	rel 56+8 t=1 type.noalg.map.hdr[interface {}]int+80
	rel 80+8 t=1 type..namedata.count-+0
	rel 88+8 t=1 type.int+0
	rel 104+8 t=1 type..namedata.flags-+0
	rel 112+8 t=1 type.uint8+0
	rel 128+8 t=1 type..namedata.B.+0
	rel 136+8 t=1 type.uint8+0
	rel 152+8 t=1 type..namedata.noverflow-+0
	rel 160+8 t=1 type.uint16+0
	rel 176+8 t=1 type..namedata.hash0-+0
	rel 184+8 t=1 type.uint32+0
	rel 200+8 t=1 type..namedata.buckets-+0
	rel 208+8 t=1 type.*map.bucket[interface {}]int+0
	rel 224+8 t=1 type..namedata.oldbuckets-+0
	rel 232+8 t=1 type.*map.bucket[interface {}]int+0
	rel 248+8 t=1 type..namedata.nevacuate-+0
	rel 256+8 t=1 type.uintptr+0
	rel 272+8 t=1 type..namedata.extra-+0
	rel 280+8 t=1 type.unsafe.Pointer+0
type.*map.hdr[interface {}]int SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 1e b9 c3 3e 08 08 08 36 00 00 00 00 00 00 00 00  ...>...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*map.hdr[interface {}]int-+0
	rel 48+8 t=1 type.noalg.map.hdr[interface {}]int+0
type..namedata.*map.iter[interface {}]int- SRODATA dupok size=29
	0x0000 00 00 1a 2a 6d 61 70 2e 69 74 65 72 5b 69 6e 74  ...*map.iter[int
	0x0010 65 72 66 61 63 65 20 7b 7d 5d 69 6e 74           erface {}]int
type.*map.iter[interface {}]int SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 c2 7c 86 4b 08 08 08 36 00 00 00 00 00 00 00 00  .|.K...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*map.iter[interface {}]int-+0
	rel 48+8 t=1 type.noalg.map.iter[interface {}]int+0
type.noalg.map.iter[interface {}]int SRODATA dupok size=440
	0x0000 60 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00  `.......@.......
	0x0010 60 24 63 d7 02 08 08 19 00 00 00 00 00 00 00 00  `$c.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 0f 00 00 00 00 00 00 00 0f 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 20 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x00a0 00 00 00 00 00 00 00 00 30 00 00 00 00 00 00 00  ........0.......
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00c0 40 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  @...............
	0x00d0 00 00 00 00 00 00 00 00 50 00 00 00 00 00 00 00  ........P.......
	0x00e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00f0 60 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  `...............
	0x0100 00 00 00 00 00 00 00 00 70 00 00 00 00 00 00 00  ........p.......
	0x0110 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0120 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0130 00 00 00 00 00 00 00 00 90 00 00 00 00 00 00 00  ................
	0x0140 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0150 92 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0160 00 00 00 00 00 00 00 00 94 00 00 00 00 00 00 00  ................
	0x0170 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0180 96 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0190 00 00 00 00 00 00 00 00 a0 00 00 00 00 00 00 00  ................
	0x01a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01b0 b0 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.ff+0
	rel 40+4 t=5 type..namedata.*map.iter[interface {}]int-+0
	rel 44+4 t=6 type.*map.iter[interface {}]int+0
	rel 48+8 t=1 type..importpath..+0
	rel 56+8 t=1 type.noalg.map.iter[interface {}]int+80
	rel 80+8 t=1 type..namedata.key-+0
	rel 88+8 t=1 type.*interface {}+0
	rel 104+8 t=1 type..namedata.elem-+0
	rel 112+8 t=1 type.*int+0
	rel 128+8 t=1 type..namedata.t-+0
	rel 136+8 t=1 type.unsafe.Pointer+0
	rel 152+8 t=1 type..namedata.h-+0
	rel 160+8 t=1 type.*map.hdr[interface {}]int+0
	rel 176+8 t=1 type..namedata.buckets-+0
	rel 184+8 t=1 type.*map.bucket[interface {}]int+0
	rel 200+8 t=1 type..namedata.bptr-+0
	rel 208+8 t=1 type.*map.bucket[interface {}]int+0
	rel 224+8 t=1 type..namedata.overflow-+0
	rel 232+8 t=1 type.unsafe.Pointer+0
	rel 248+8 t=1 type..namedata.oldoverflow-+0
	rel 256+8 t=1 type.unsafe.Pointer+0
	rel 272+8 t=1 type..namedata.startBucket-+0
	rel 280+8 t=1 type.uintptr+0
	rel 296+8 t=1 type..namedata.offset-+0
	rel 304+8 t=1 type.uint8+0
	rel 320+8 t=1 type..namedata.wrapped-+0
	rel 328+8 t=1 type.bool+0
	rel 344+8 t=1 type..namedata.B.+0
	rel 352+8 t=1 type.uint8+0
	rel 368+8 t=1 type..namedata.i-+0
	rel 376+8 t=1 type.uint8+0
	rel 392+8 t=1 type..namedata.bucket-+0
	rel 400+8 t=1 type.uintptr+0
	rel 416+8 t=1 type..namedata.checkBucket-+0
	rel 424+8 t=1 type.uintptr+0
type..namedata.*map.bucket[int]int- SRODATA dupok size=22
	0x0000 00 00 13 2a 6d 61 70 2e 62 75 63 6b 65 74 5b 69  ...*map.bucket[i
	0x0010 6e 74 5d 69 6e 74                                nt]int
type.noalg.map.bucket[int]int SRODATA dupok size=176
	0x0000 90 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 b3 28 ed bb 02 08 08 19 00 00 00 00 00 00 00 00  .(..............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 04 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 90 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 10 01 00 00 00 00 00 00  ................
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type..namedata.*map.bucket[int]int-+0
	rel 44+4 t=6 type.*map.bucket[int]int+0
	rel 48+8 t=1 type..importpath..+0
	rel 56+8 t=1 type.noalg.map.bucket[int]int+80
	rel 80+8 t=1 type..namedata.topbits-+0
	rel 88+8 t=1 type.[8]uint8+0
	rel 104+8 t=1 type..namedata.keys-+0
	rel 112+8 t=1 type.noalg.[8]int+0
	rel 128+8 t=1 type..namedata.elems-+0
	rel 136+8 t=1 type.noalg.[8]int+0
	rel 152+8 t=1 type..namedata.overflow-+0
	rel 160+8 t=1 type.uintptr+0
type.*map.bucket[int]int SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 2a ff 7c 44 08 08 08 36 00 00 00 00 00 00 00 00  *.|D...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*map.bucket[int]int-+0
	rel 48+8 t=1 type.noalg.map.bucket[int]int+0
type..namedata.*map.hdr[int]int- SRODATA dupok size=19
	0x0000 00 00 10 2a 6d 61 70 2e 68 64 72 5b 69 6e 74 5d  ...*map.hdr[int]
	0x0010 69 6e 74                                         int
type.noalg.map.hdr[int]int SRODATA dupok size=296
	0x0000 30 00 00 00 00 00 00 00 30 00 00 00 00 00 00 00  0.......0.......
	0x0010 3c 29 b0 35 02 08 08 19 00 00 00 00 00 00 00 00  <).5............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 09 00 00 00 00 00 00 00 09 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 12 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 14 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00c0 18 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 00 00 00 00 00 00 00 00 20 00 00 00 00 00 00 00  ........ .......
	0x00e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00f0 30 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  0...............
	0x0100 00 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00  ........@.......
	0x0110 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0120 50 00 00 00 00 00 00 00                          P.......
	rel 32+8 t=1 runtime.gcbits.2c+0
	rel 40+4 t=5 type..namedata.*map.hdr[int]int-+0
	rel 44+4 t=6 type.*map.hdr[int]int+0
	rel 48+8 t=1 type..importpath..+0
	rel 56+8 t=1 type.noalg.map.hdr[int]int+80
	rel 80+8 t=1 type..namedata.count-+0
	rel 88+8 t=1 type.int+0
	rel 104+8 t=1 type..namedata.flags-+0
	rel 112+8 t=1 type.uint8+0
	rel 128+8 t=1 type..namedata.B.+0
	rel 136+8 t=1 type.uint8+0
	rel 152+8 t=1 type..namedata.noverflow-+0
	rel 160+8 t=1 type.uint16+0
	rel 176+8 t=1 type..namedata.hash0-+0
	rel 184+8 t=1 type.uint32+0
	rel 200+8 t=1 type..namedata.buckets-+0
	rel 208+8 t=1 type.*map.bucket[int]int+0
	rel 224+8 t=1 type..namedata.oldbuckets-+0
	rel 232+8 t=1 type.*map.bucket[int]int+0
	rel 248+8 t=1 type..namedata.nevacuate-+0
	rel 256+8 t=1 type.uintptr+0
	rel 272+8 t=1 type..namedata.extra-+0
	rel 280+8 t=1 type.unsafe.Pointer+0
type.*map.hdr[int]int SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 8b 92 74 97 08 08 08 36 00 00 00 00 00 00 00 00  ..t....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*map.hdr[int]int-+0
	rel 48+8 t=1 type.noalg.map.hdr[int]int+0
type..namedata.*map.iter[int]int- SRODATA dupok size=20
	0x0000 00 00 11 2a 6d 61 70 2e 69 74 65 72 5b 69 6e 74  ...*map.iter[int
	0x0010 5d 69 6e 74                                      ]int
type.*map.iter[int]int SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 39 ec 8d d2 08 08 08 36 00 00 00 00 00 00 00 00  9......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*map.iter[int]int-+0
	rel 48+8 t=1 type.noalg.map.iter[int]int+0
type.noalg.map.iter[int]int SRODATA dupok size=440
	0x0000 60 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00  `.......@.......
	0x0010 85 17 e7 d0 02 08 08 19 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 0f 00 00 00 00 00 00 00 0f 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 20 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x00a0 00 00 00 00 00 00 00 00 30 00 00 00 00 00 00 00  ........0.......
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00c0 40 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  @...............
	0x00d0 00 00 00 00 00 00 00 00 50 00 00 00 00 00 00 00  ........P.......
	0x00e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00f0 60 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  `...............
	0x0100 00 00 00 00 00 00 00 00 70 00 00 00 00 00 00 00  ........p.......
	0x0110 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0120 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0130 00 00 00 00 00 00 00 00 90 00 00 00 00 00 00 00  ................
	0x0140 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0150 92 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0160 00 00 00 00 00 00 00 00 94 00 00 00 00 00 00 00  ................
	0x0170 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0180 96 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0190 00 00 00 00 00 00 00 00 a0 00 00 00 00 00 00 00  ................
	0x01a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01b0 b0 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.ff+0
	rel 40+4 t=5 type..namedata.*map.iter[int]int-+0
	rel 44+4 t=6 type.*map.iter[int]int+0
	rel 48+8 t=1 type..importpath..+0
	rel 56+8 t=1 type.noalg.map.iter[int]int+80
	rel 80+8 t=1 type..namedata.key-+0
	rel 88+8 t=1 type.*int+0
	rel 104+8 t=1 type..namedata.elem-+0
	rel 112+8 t=1 type.*int+0
	rel 128+8 t=1 type..namedata.t-+0
	rel 136+8 t=1 type.unsafe.Pointer+0
	rel 152+8 t=1 type..namedata.h-+0
	rel 160+8 t=1 type.*map.hdr[int]int+0
	rel 176+8 t=1 type..namedata.buckets-+0
	rel 184+8 t=1 type.*map.bucket[int]int+0
	rel 200+8 t=1 type..namedata.bptr-+0
	rel 208+8 t=1 type.*map.bucket[int]int+0
	rel 224+8 t=1 type..namedata.overflow-+0
	rel 232+8 t=1 type.unsafe.Pointer+0
	rel 248+8 t=1 type..namedata.oldoverflow-+0
	rel 256+8 t=1 type.unsafe.Pointer+0
	rel 272+8 t=1 type..namedata.startBucket-+0
	rel 280+8 t=1 type.uintptr+0
	rel 296+8 t=1 type..namedata.offset-+0
	rel 304+8 t=1 type.uint8+0
	rel 320+8 t=1 type..namedata.wrapped-+0
	rel 328+8 t=1 type.bool+0
	rel 344+8 t=1 type..namedata.B.+0
	rel 352+8 t=1 type.uint8+0
	rel 368+8 t=1 type..namedata.i-+0
	rel 376+8 t=1 type.uint8+0
	rel 392+8 t=1 type..namedata.bucket-+0
	rel 400+8 t=1 type.uintptr+0
	rel 416+8 t=1 type..namedata.checkBucket-+0
	rel 424+8 t=1 type.uintptr+0
type..namedata.*[]*uint8- SRODATA dupok size=12
	0x0000 00 00 09 2a 5b 5d 2a 75 69 6e 74 38              ...*[]*uint8
type.*[]*uint8 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 4e ca 07 c2 08 08 08 36 00 00 00 00 00 00 00 00  N......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]*uint8-+0
	rel 48+8 t=1 type.[]*uint8+0
type.[]*uint8 SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 85 cd 8f fc 02 08 08 17 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]*uint8-+0
	rel 44+4 t=6 type.*[]*uint8+0
	rel 48+8 t=1 type.*uint8+0
type..namedata.*[8]*uint8- SRODATA dupok size=13
	0x0000 00 00 0a 2a 5b 38 5d 2a 75 69 6e 74 38           ...*[8]*uint8
type.*[8]*uint8 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 8f 36 46 b1 08 08 08 36 00 00 00 00 00 00 00 00  .6F....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[8]*uint8-+0
	rel 48+8 t=1 type.noalg.[8]*uint8+0
type.noalg.[8]*uint8 SRODATA dupok size=72
	0x0000 40 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00  @.......@.......
	0x0010 77 ad c5 4e 02 08 08 11 00 00 00 00 00 00 00 00  w..N............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 08 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.ff+0
	rel 40+4 t=5 type..namedata.*[8]*uint8-+0
	rel 44+4 t=6 type.*[8]*uint8+0
	rel 48+8 t=1 type.*uint8+0
	rel 56+8 t=1 type.[]*uint8+0
type..namedata.*map.bucket[*uint8]int- SRODATA dupok size=25
	0x0000 00 00 16 2a 6d 61 70 2e 62 75 63 6b 65 74 5b 2a  ...*map.bucket[*
	0x0010 75 69 6e 74 38 5d 69 6e 74                       uint8]int
type.*map.bucket[*uint8]int SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 54 b0 c5 9c 08 08 08 36 00 00 00 00 00 00 00 00  T......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*map.bucket[*uint8]int-+0
	rel 48+8 t=1 type.noalg.map.bucket[*uint8]int+0
runtime.gcbits.fe0102 SRODATA dupok size=3
	0x0000 fe 01 02                                         ...
type.noalg.map.bucket[*uint8]int SRODATA dupok size=176
	0x0000 90 00 00 00 00 00 00 00 90 00 00 00 00 00 00 00  ................
	0x0010 13 87 a1 52 02 08 08 19 00 00 00 00 00 00 00 00  ...R............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 04 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 90 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 10 01 00 00 00 00 00 00  ................
	rel 32+8 t=1 runtime.gcbits.fe0102+0
	rel 40+4 t=5 type..namedata.*map.bucket[*uint8]int-+0
	rel 44+4 t=6 type.*map.bucket[*uint8]int+0
	rel 48+8 t=1 type..importpath..+0
	rel 56+8 t=1 type.noalg.map.bucket[*uint8]int+80
	rel 80+8 t=1 type..namedata.topbits-+0
	rel 88+8 t=1 type.[8]uint8+0
	rel 104+8 t=1 type..namedata.keys-+0
	rel 112+8 t=1 type.noalg.[8]*uint8+0
	rel 128+8 t=1 type..namedata.elems-+0
	rel 136+8 t=1 type.noalg.[8]int+0
	rel 152+8 t=1 type..namedata.overflow-+0
	rel 160+8 t=1 type.*map.bucket[*uint8]int+0
runtime.memhash64·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 runtime.memhash64+0
type..namedata.*map[*uint8]int- SRODATA dupok size=18
	0x0000 00 00 0f 2a 6d 61 70 5b 2a 75 69 6e 74 38 5d 69  ...*map[*uint8]i
	0x0010 6e 74                                            nt
type.*map[*uint8]int SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 ee 92 be 42 08 08 08 36 00 00 00 00 00 00 00 00  ...B...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*map[*uint8]int-+0
	rel 48+8 t=1 type.map[*uint8]int+0
type.map[*uint8]int SRODATA dupok size=88
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 03 60 27 5a 02 08 08 35 00 00 00 00 00 00 00 00  .`'Z...5........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 08 08 90 00 04 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*map[*uint8]int-+0
	rel 44+4 t=6 type.*map[*uint8]int+0
	rel 48+8 t=1 type.*uint8+0
	rel 56+8 t=1 type.int+0
	rel 64+8 t=1 type.noalg.map.bucket[*uint8]int+0
	rel 72+8 t=1 runtime.memhash64·f+0
runtime.strequal·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 runtime.strequal+0
type..namedata.*[1]string- SRODATA dupok size=13
	0x0000 00 00 0a 2a 5b 31 5d 73 74 72 69 6e 67           ...*[1]string
type.*[1]string SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 6c 2e 21 e4 08 08 08 36 00 00 00 00 00 00 00 00  l.!....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[1]string-+0
	rel 48+8 t=1 type.[1]string+0
type.[1]string SRODATA dupok size=72
	0x0000 10 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 c4 b8 62 20 02 08 08 11 00 00 00 00 00 00 00 00  ..b ............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 01 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.strequal·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[1]string-+0
	rel 44+4 t=6 type.*[1]string+0
	rel 48+8 t=1 type.string+0
	rel 56+8 t=1 type.[]string+0
type..namedata.*struct { s [1]string }- SRODATA dupok size=26
	0x0000 00 00 17 2a 73 74 72 75 63 74 20 7b 20 73 20 5b  ...*struct { s [
	0x0010 31 5d 73 74 72 69 6e 67 20 7d                    1]string }
type.*struct { "".s [1]string } SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 6c 0d 86 e2 08 08 08 36 00 00 00 00 00 00 00 00  l......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*struct { s [1]string }-+0
	rel 48+8 t=1 type.struct { "".s [1]string }+0
type..importpath."". SRODATA dupok size=25
	0x0000 00 00 16 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d  ...command-line-
	0x0010 61 72 67 75 6d 65 6e 74 73                       arguments
type..namedata.s- SRODATA dupok size=4
	0x0000 00 00 01 73                                      ...s
type.struct { "".s [1]string } SRODATA dupok size=104
	0x0000 10 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 db 28 97 08 02 08 08 19 00 00 00 00 00 00 00 00  .(..............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.strequal·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*struct { s [1]string }-+0
	rel 44+4 t=6 type.*struct { "".s [1]string }+0
	rel 48+8 t=1 type..importpath."".+0
	rel 56+8 t=1 type.struct { "".s [1]string }+80
	rel 80+8 t=1 type..namedata.s-+0
	rel 88+8 t=1 type.[1]string+0
type..namedata.*[]struct { s [1]string }- SRODATA dupok size=28
	0x0000 00 00 19 2a 5b 5d 73 74 72 75 63 74 20 7b 20 73  ...*[]struct { s
	0x0010 20 5b 31 5d 73 74 72 69 6e 67 20 7d               [1]string }
type.*[]struct { "".s [1]string } SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 b5 1e 23 8a 08 08 08 36 00 00 00 00 00 00 00 00  ..#....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]struct { s [1]string }-+0
	rel 48+8 t=1 type.[]struct { "".s [1]string }+0
type.[]struct { "".s [1]string } SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 0f 43 db 01 02 08 08 17 00 00 00 00 00 00 00 00  .C..............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]struct { s [1]string }-+0
	rel 44+4 t=6 type.*[]struct { "".s [1]string }+0
	rel 48+8 t=1 type.struct { "".s [1]string }+0
type..namedata.*[1]struct { s [1]string }- SRODATA dupok size=29
	0x0000 00 00 1a 2a 5b 31 5d 73 74 72 75 63 74 20 7b 20  ...*[1]struct { 
	0x0010 73 20 5b 31 5d 73 74 72 69 6e 67 20 7d           s [1]string }
type.*[1]struct { "".s [1]string } SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 b7 86 03 5a 08 08 08 36 00 00 00 00 00 00 00 00  ...Z...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[1]struct { s [1]string }-+0
	rel 48+8 t=1 type.[1]struct { "".s [1]string }+0
type.[1]struct { "".s [1]string } SRODATA dupok size=72
	0x0000 10 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 46 36 75 0c 02 08 08 11 00 00 00 00 00 00 00 00  F6u.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 01 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.strequal·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[1]struct { s [1]string }-+0
	rel 44+4 t=6 type.*[1]struct { "".s [1]string }+0
	rel 48+8 t=1 type.struct { "".s [1]string }+0
	rel 56+8 t=1 type.[]struct { "".s [1]string }+0
type..namedata.*[][1]struct { s [1]string }- SRODATA dupok size=31
	0x0000 00 00 1c 2a 5b 5d 5b 31 5d 73 74 72 75 63 74 20  ...*[][1]struct 
	0x0010 7b 20 73 20 5b 31 5d 73 74 72 69 6e 67 20 7d     { s [1]string }
type.*[][1]struct { "".s [1]string } SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 f5 a7 34 3b 08 08 08 36 00 00 00 00 00 00 00 00  ..4;...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[][1]struct { s [1]string }-+0
	rel 48+8 t=1 type.[][1]struct { "".s [1]string }+0
type.[][1]struct { "".s [1]string } SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 38 9b 47 6f 02 08 08 17 00 00 00 00 00 00 00 00  8.Go............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[][1]struct { s [1]string }-+0
	rel 44+4 t=6 type.*[][1]struct { "".s [1]string }+0
	rel 48+8 t=1 type.[1]struct { "".s [1]string }+0
type..namedata.*[8][1]struct { s [1]string }- SRODATA dupok size=32
	0x0000 00 00 1d 2a 5b 38 5d 5b 31 5d 73 74 72 75 63 74  ...*[8][1]struct
	0x0010 20 7b 20 73 20 5b 31 5d 73 74 72 69 6e 67 20 7d   { s [1]string }
type.*[8][1]struct { "".s [1]string } SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 f4 39 0e c1 08 08 08 36 00 00 00 00 00 00 00 00  .9.....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[8][1]struct { s [1]string }-+0
	rel 48+8 t=1 type.noalg.[8][1]struct { "".s [1]string }+0
runtime.gcbits.5555 SRODATA dupok size=2
	0x0000 55 55                                            UU
type.noalg.[8][1]struct { "".s [1]string } SRODATA dupok size=72
	0x0000 80 00 00 00 00 00 00 00 78 00 00 00 00 00 00 00  ........x.......
	0x0010 0a e9 63 f4 02 08 08 11 00 00 00 00 00 00 00 00  ..c.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 08 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.5555+0
	rel 40+4 t=5 type..namedata.*[8][1]struct { s [1]string }-+0
	rel 44+4 t=6 type.*[8][1]struct { "".s [1]string }+0
	rel 48+8 t=1 type.[1]struct { "".s [1]string }+0
	rel 56+8 t=1 type.[][1]struct { "".s [1]string }+0
type..namedata.*map.bucket[[1]struct { s [1]string }]int- SRODATA dupok size=44
	0x0000 00 00 29 2a 6d 61 70 2e 62 75 63 6b 65 74 5b 5b  ..)*map.bucket[[
	0x0010 31 5d 73 74 72 75 63 74 20 7b 20 73 20 5b 31 5d  1]struct { s [1]
	0x0020 73 74 72 69 6e 67 20 7d 5d 69 6e 74              string }]int
type.*map.bucket[[1]struct { "".s [1]string }]int SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 89 0d b9 2f 08 08 08 36 00 00 00 00 00 00 00 00  .../...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*map.bucket[[1]struct { s [1]string }]int-+0
	rel 48+8 t=1 type.noalg.map.bucket[[1]struct { "".s [1]string }]int+0
runtime.gcbits.aaaa0002 SRODATA dupok size=4
	0x0000 aa aa 00 02                                      ....
type.noalg.map.bucket[[1]struct { "".s [1]string }]int SRODATA dupok size=176
	0x0000 d0 00 00 00 00 00 00 00 d0 00 00 00 00 00 00 00  ................
	0x0010 22 5d 47 75 02 08 08 19 00 00 00 00 00 00 00 00  "]Gu............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 04 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 10 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 90 01 00 00 00 00 00 00  ................
	rel 32+8 t=1 runtime.gcbits.aaaa0002+0
	rel 40+4 t=5 type..namedata.*map.bucket[[1]struct { s [1]string }]int-+0
	rel 44+4 t=6 type.*map.bucket[[1]struct { "".s [1]string }]int+0
	rel 48+8 t=1 type..importpath..+0
	rel 56+8 t=1 type.noalg.map.bucket[[1]struct { "".s [1]string }]int+80
	rel 80+8 t=1 type..namedata.topbits-+0
	rel 88+8 t=1 type.[8]uint8+0
	rel 104+8 t=1 type..namedata.keys-+0
	rel 112+8 t=1 type.noalg.[8][1]struct { "".s [1]string }+0
	rel 128+8 t=1 type..namedata.elems-+0
	rel 136+8 t=1 type.noalg.[8]int+0
	rel 152+8 t=1 type..namedata.overflow-+0
	rel 160+8 t=1 type.*map.bucket[[1]struct { "".s [1]string }]int+0
runtime.strhash·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 runtime.strhash+0
type..namedata.*map[[1]struct { s [1]string }]int- SRODATA dupok size=37
	0x0000 00 00 22 2a 6d 61 70 5b 5b 31 5d 73 74 72 75 63  .."*map[[1]struc
	0x0010 74 20 7b 20 73 20 5b 31 5d 73 74 72 69 6e 67 20  t { s [1]string 
	0x0020 7d 5d 69 6e 74                                   }]int
type.*map[[1]struct { "".s [1]string }]int SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 14 b0 6b 25 08 08 08 36 00 00 00 00 00 00 00 00  ..k%...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*map[[1]struct { s [1]string }]int-+0
	rel 48+8 t=1 type.map[[1]struct { "".s [1]string }]int+0
type.map[[1]struct { "".s [1]string }]int SRODATA dupok size=88
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 d0 84 a6 46 02 08 08 35 00 00 00 00 00 00 00 00  ...F...5........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 10 08 d0 00 0c 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*map[[1]struct { s [1]string }]int-+0
	rel 44+4 t=6 type.*map[[1]struct { "".s [1]string }]int+0
	rel 48+8 t=1 type.[1]struct { "".s [1]string }+0
	rel 56+8 t=1 type.int+0
	rel 64+8 t=1 type.noalg.map.bucket[[1]struct { "".s [1]string }]int+0
	rel 72+8 t=1 runtime.strhash·f+0
type..namedata.*[][2]string- SRODATA dupok size=15
	0x0000 00 00 0c 2a 5b 5d 5b 32 5d 73 74 72 69 6e 67     ...*[][2]string
type.*[][2]string SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 7a 40 55 c7 08 08 08 36 00 00 00 00 00 00 00 00  z@U....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[][2]string-+0
	rel 48+8 t=1 type.[][2]string+0
type.[][2]string SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 36 d5 50 66 02 08 08 17 00 00 00 00 00 00 00 00  6.Pf............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[][2]string-+0
	rel 44+4 t=6 type.*[][2]string+0
	rel 48+8 t=1 type.[2]string+0
type..namedata.*[8][2]string- SRODATA dupok size=16
	0x0000 00 00 0d 2a 5b 38 5d 5b 32 5d 73 74 72 69 6e 67  ...*[8][2]string
type.*[8][2]string SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 df 7a ed 4c 08 08 08 36 00 00 00 00 00 00 00 00  .z.L...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[8][2]string-+0
	rel 48+8 t=1 type.noalg.[8][2]string+0
runtime.gcbits.55555555 SRODATA dupok size=4
	0x0000 55 55 55 55                                      UUUU
type.noalg.[8][2]string SRODATA dupok size=72
	0x0000 00 01 00 00 00 00 00 00 f8 00 00 00 00 00 00 00  ................
	0x0010 e1 ee 64 3b 02 08 08 11 00 00 00 00 00 00 00 00  ..d;............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 08 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.55555555+0
	rel 40+4 t=5 type..namedata.*[8][2]string-+0
	rel 44+4 t=6 type.*[8][2]string+0
	rel 48+8 t=1 type.[2]string+0
	rel 56+8 t=1 type.[][2]string+0
type..namedata.*map.bucket[[2]string]int- SRODATA dupok size=28
	0x0000 00 00 19 2a 6d 61 70 2e 62 75 63 6b 65 74 5b 5b  ...*map.bucket[[
	0x0010 32 5d 73 74 72 69 6e 67 5d 69 6e 74              2]string]int
type.*map.bucket[[2]string]int SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 e8 37 12 18 08 08 08 36 00 00 00 00 00 00 00 00  .7.....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*map.bucket[[2]string]int-+0
	rel 48+8 t=1 type.noalg.map.bucket[[2]string]int+0
runtime.gcbits.aaaaaaaa0002 SRODATA dupok size=6
	0x0000 aa aa aa aa 00 02                                ......
type.noalg.map.bucket[[2]string]int SRODATA dupok size=176
	0x0000 50 01 00 00 00 00 00 00 50 01 00 00 00 00 00 00  P.......P.......
	0x0010 a4 9a 24 bd 02 08 08 19 00 00 00 00 00 00 00 00  ..$.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 04 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 10 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 90 02 00 00 00 00 00 00  ................
	rel 32+8 t=1 runtime.gcbits.aaaaaaaa0002+0
	rel 40+4 t=5 type..namedata.*map.bucket[[2]string]int-+0
	rel 44+4 t=6 type.*map.bucket[[2]string]int+0
	rel 48+8 t=1 type..importpath..+0
	rel 56+8 t=1 type.noalg.map.bucket[[2]string]int+80
	rel 80+8 t=1 type..namedata.topbits-+0
	rel 88+8 t=1 type.[8]uint8+0
	rel 104+8 t=1 type..namedata.keys-+0
	rel 112+8 t=1 type.noalg.[8][2]string+0
	rel 128+8 t=1 type..namedata.elems-+0
	rel 136+8 t=1 type.noalg.[8]int+0
	rel 152+8 t=1 type..namedata.overflow-+0
	rel 160+8 t=1 type.*map.bucket[[2]string]int+0
type..hashfunc.[2]string SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 type..hash.[2]string+0
type..namedata.*map[[2]string]int- SRODATA dupok size=21
	0x0000 00 00 12 2a 6d 61 70 5b 5b 32 5d 73 74 72 69 6e  ...*map[[2]strin
	0x0010 67 5d 69 6e 74                                   g]int
type.*map[[2]string]int SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 82 fa 13 75 08 08 08 36 00 00 00 00 00 00 00 00  ...u...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*map[[2]string]int-+0
	rel 48+8 t=1 type.map[[2]string]int+0
type.map[[2]string]int SRODATA dupok size=88
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 43 62 1f c0 02 08 08 35 00 00 00 00 00 00 00 00  Cb.....5........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 20 08 50 01 0c 00 00 00                           .P.....
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*map[[2]string]int-+0
	rel 44+4 t=6 type.*map[[2]string]int+0
	rel 48+8 t=1 type.[2]string+0
	rel 56+8 t=1 type.int+0
	rel 64+8 t=1 type.noalg.map.bucket[[2]string]int+0
	rel 72+8 t=1 type..hashfunc.[2]string+0
runtime.f64hash·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 runtime.f64hash+0
type..namedata.*map[float64]int- SRODATA dupok size=19
	0x0000 00 00 10 2a 6d 61 70 5b 66 6c 6f 61 74 36 34 5d  ...*map[float64]
	0x0010 69 6e 74                                         int
type.*map[float64]int SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 79 d7 0c a2 08 08 08 36 00 00 00 00 00 00 00 00  y......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*map[float64]int-+0
	rel 48+8 t=1 type.map[float64]int+0
type.map[float64]int SRODATA dupok size=88
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 b6 b2 f1 8e 02 08 08 35 00 00 00 00 00 00 00 00  .......5........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 08 08 90 00 08 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*map[float64]int-+0
	rel 44+4 t=6 type.*map[float64]int+0
	rel 48+8 t=1 type.float64+0
	rel 56+8 t=1 type.int+0
	rel 64+8 t=1 type.noalg.map.bucket[float64]int+0
	rel 72+8 t=1 runtime.f64hash·f+0
type..namedata.*map[int]int- SRODATA dupok size=15
	0x0000 00 00 0c 2a 6d 61 70 5b 69 6e 74 5d 69 6e 74     ...*map[int]int
type.*map[int]int SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 ab c4 20 42 08 08 08 36 00 00 00 00 00 00 00 00  .. B...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*map[int]int-+0
	rel 48+8 t=1 type.map[int]int+0
type.map[int]int SRODATA dupok size=88
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 50 1b 58 23 02 08 08 35 00 00 00 00 00 00 00 00  P.X#...5........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 08 08 90 00 04 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*map[int]int-+0
	rel 44+4 t=6 type.*map[int]int+0
	rel 48+8 t=1 type.int+0
	rel 56+8 t=1 type.int+0
	rel 64+8 t=1 type.noalg.map.bucket[int]int+0
	rel 72+8 t=1 runtime.memhash64·f+0
runtime.nilinterhash·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 runtime.nilinterhash+0
type..namedata.*map[interface {}]int- SRODATA dupok size=24
	0x0000 00 00 15 2a 6d 61 70 5b 69 6e 74 65 72 66 61 63  ...*map[interfac
	0x0010 65 20 7b 7d 5d 69 6e 74                          e {}]int
type.*map[interface {}]int SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 1c 4f 2f d2 08 08 08 36 00 00 00 00 00 00 00 00  .O/....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*map[interface {}]int-+0
	rel 48+8 t=1 type.map[interface {}]int+0
type.map[interface {}]int SRODATA dupok size=88
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 79 4c ef 4b 02 08 08 35 00 00 00 00 00 00 00 00  yL.K...5........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 10 08 d0 00 18 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*map[interface {}]int-+0
	rel 44+4 t=6 type.*map[interface {}]int+0
	rel 48+8 t=1 type.interface {}+0
	rel 56+8 t=1 type.int+0
	rel 64+8 t=1 type.noalg.map.bucket[interface {}]int+0
	rel 72+8 t=1 runtime.nilinterhash·f+0
type..namedata.*[8]string- SRODATA dupok size=13
	0x0000 00 00 0a 2a 5b 38 5d 73 74 72 69 6e 67           ...*[8]string
type.*[8]string SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 ad 94 14 6f 08 08 08 36 00 00 00 00 00 00 00 00  ...o...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[8]string-+0
	rel 48+8 t=1 type.noalg.[8]string+0
type.noalg.[8]string SRODATA dupok size=72
	0x0000 80 00 00 00 00 00 00 00 78 00 00 00 00 00 00 00  ........x.......
	0x0010 55 53 8c 3e 02 08 08 11 00 00 00 00 00 00 00 00  US.>............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 08 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.5555+0
	rel 40+4 t=5 type..namedata.*[8]string-+0
	rel 44+4 t=6 type.*[8]string+0
	rel 48+8 t=1 type.string+0
	rel 56+8 t=1 type.[]string+0
type..namedata.*map.bucket[string]int- SRODATA dupok size=25
	0x0000 00 00 16 2a 6d 61 70 2e 62 75 63 6b 65 74 5b 73  ...*map.bucket[s
	0x0010 74 72 69 6e 67 5d 69 6e 74                       tring]int
type.*map.bucket[string]int SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 c9 be cc 9c 08 08 08 36 00 00 00 00 00 00 00 00  .......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*map.bucket[string]int-+0
	rel 48+8 t=1 type.noalg.map.bucket[string]int+0
type.noalg.map.bucket[string]int SRODATA dupok size=176
	0x0000 d0 00 00 00 00 00 00 00 d0 00 00 00 00 00 00 00  ................
	0x0010 5d 68 63 71 02 08 08 19 00 00 00 00 00 00 00 00  ]hcq............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 04 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 10 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 90 01 00 00 00 00 00 00  ................
	rel 32+8 t=1 runtime.gcbits.aaaa0002+0
	rel 40+4 t=5 type..namedata.*map.bucket[string]int-+0
	rel 44+4 t=6 type.*map.bucket[string]int+0
	rel 48+8 t=1 type..importpath..+0
	rel 56+8 t=1 type.noalg.map.bucket[string]int+80
	rel 80+8 t=1 type..namedata.topbits-+0
	rel 88+8 t=1 type.[8]uint8+0
	rel 104+8 t=1 type..namedata.keys-+0
	rel 112+8 t=1 type.noalg.[8]string+0
	rel 128+8 t=1 type..namedata.elems-+0
	rel 136+8 t=1 type.noalg.[8]int+0
	rel 152+8 t=1 type..namedata.overflow-+0
	rel 160+8 t=1 type.*map.bucket[string]int+0
type..namedata.*map[string]int- SRODATA dupok size=18
	0x0000 00 00 0f 2a 6d 61 70 5b 73 74 72 69 6e 67 5d 69  ...*map[string]i
	0x0010 6e 74                                            nt
type.*map[string]int SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 8e 5e 06 04 08 08 08 36 00 00 00 00 00 00 00 00  .^.....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*map[string]int-+0
	rel 48+8 t=1 type.map[string]int+0
type.map[string]int SRODATA dupok size=88
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 e5 db c8 4a 02 08 08 35 00 00 00 00 00 00 00 00  ...J...5........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 10 08 d0 00 0c 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*map[string]int-+0
	rel 44+4 t=6 type.*map[string]int+0
	rel 48+8 t=1 type.string+0
	rel 56+8 t=1 type.int+0
	rel 64+8 t=1 type.noalg.map.bucket[string]int+0
	rel 72+8 t=1 runtime.strhash·f+0
type..namedata.*struct { string }- SRODATA dupok size=21
	0x0000 00 00 12 2a 73 74 72 75 63 74 20 7b 20 73 74 72  ...*struct { str
	0x0010 69 6e 67 20 7d                                   ing }
type.*struct { string } SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 63 de 56 c0 08 08 08 36 00 00 00 00 00 00 00 00  c.V....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*struct { string }-+0
	rel 48+8 t=1 type.struct { string }+0
type..namedata.string- SRODATA dupok size=9
	0x0000 00 00 06 73 74 72 69 6e 67                       ...string
type.struct { string } SRODATA dupok size=104
	0x0000 10 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 36 d4 0f 8b 02 08 08 19 00 00 00 00 00 00 00 00  6...............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 01 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.strequal·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*struct { string }-+0
	rel 44+4 t=6 type.*struct { string }+0
	rel 48+8 t=1 type..importpath."".+0
	rel 56+8 t=1 type.struct { string }+80
	rel 80+8 t=1 type..namedata.string-+0
	rel 88+8 t=1 type.string+0
type..namedata.*[]struct { string }- SRODATA dupok size=23
	0x0000 00 00 14 2a 5b 5d 73 74 72 75 63 74 20 7b 20 73  ...*[]struct { s
	0x0010 74 72 69 6e 67 20 7d                             tring }
type.*[]struct { string } SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 f9 86 60 ad 08 08 08 36 00 00 00 00 00 00 00 00  ..`....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]struct { string }-+0
	rel 48+8 t=1 type.[]struct { string }+0
type.[]struct { string } SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 d4 7f db 60 02 08 08 17 00 00 00 00 00 00 00 00  ...`............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]struct { string }-+0
	rel 44+4 t=6 type.*[]struct { string }+0
	rel 48+8 t=1 type.struct { string }+0
type..namedata.*[8]struct { string }- SRODATA dupok size=24
	0x0000 00 00 15 2a 5b 38 5d 73 74 72 75 63 74 20 7b 20  ...*[8]struct { 
	0x0010 73 74 72 69 6e 67 20 7d                          string }
type.*[8]struct { string } SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 19 73 0b b4 08 08 08 36 00 00 00 00 00 00 00 00  .s.....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[8]struct { string }-+0
	rel 48+8 t=1 type.noalg.[8]struct { string }+0
type.noalg.[8]struct { string } SRODATA dupok size=72
	0x0000 80 00 00 00 00 00 00 00 78 00 00 00 00 00 00 00  ........x.......
	0x0010 e8 f4 3b 01 02 08 08 11 00 00 00 00 00 00 00 00  ..;.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 08 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.5555+0
	rel 40+4 t=5 type..namedata.*[8]struct { string }-+0
	rel 44+4 t=6 type.*[8]struct { string }+0
	rel 48+8 t=1 type.struct { string }+0
	rel 56+8 t=1 type.[]struct { string }+0
type..namedata.*map.bucket[struct { string }]int- SRODATA dupok size=36
	0x0000 00 00 21 2a 6d 61 70 2e 62 75 63 6b 65 74 5b 73  ..!*map.bucket[s
	0x0010 74 72 75 63 74 20 7b 20 73 74 72 69 6e 67 20 7d  truct { string }
	0x0020 5d 69 6e 74                                      ]int
type.*map.bucket[struct { string }]int SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 b0 9b ca 54 08 08 08 36 00 00 00 00 00 00 00 00  ...T...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*map.bucket[struct { string }]int-+0
	rel 48+8 t=1 type.noalg.map.bucket[struct { string }]int+0
type.noalg.map.bucket[struct { string }]int SRODATA dupok size=176
	0x0000 d0 00 00 00 00 00 00 00 d0 00 00 00 00 00 00 00  ................
	0x0010 c5 48 1f 01 02 08 08 19 00 00 00 00 00 00 00 00  .H..............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 04 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 10 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 90 01 00 00 00 00 00 00  ................
	rel 32+8 t=1 runtime.gcbits.aaaa0002+0
	rel 40+4 t=5 type..namedata.*map.bucket[struct { string }]int-+0
	rel 44+4 t=6 type.*map.bucket[struct { string }]int+0
	rel 48+8 t=1 type..importpath..+0
	rel 56+8 t=1 type.noalg.map.bucket[struct { string }]int+80
	rel 80+8 t=1 type..namedata.topbits-+0
	rel 88+8 t=1 type.[8]uint8+0
	rel 104+8 t=1 type..namedata.keys-+0
	rel 112+8 t=1 type.noalg.[8]struct { string }+0
	rel 128+8 t=1 type..namedata.elems-+0
	rel 136+8 t=1 type.noalg.[8]int+0
	rel 152+8 t=1 type..namedata.overflow-+0
	rel 160+8 t=1 type.*map.bucket[struct { string }]int+0
type..namedata.*map[struct { string }]int- SRODATA dupok size=29
	0x0000 00 00 1a 2a 6d 61 70 5b 73 74 72 75 63 74 20 7b  ...*map[struct {
	0x0010 20 73 74 72 69 6e 67 20 7d 5d 69 6e 74            string }]int
type.*map[struct { string }]int SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 5d 96 7a 6a 08 08 08 36 00 00 00 00 00 00 00 00  ].zj...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*map[struct { string }]int-+0
	rel 48+8 t=1 type.map[struct { string }]int+0
type.map[struct { string }]int SRODATA dupok size=88
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 83 55 cd 87 02 08 08 35 00 00 00 00 00 00 00 00  .U.....5........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 10 08 d0 00 0c 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*map[struct { string }]int-+0
	rel 44+4 t=6 type.*map[struct { string }]int+0
	rel 48+8 t=1 type.struct { string }+0
	rel 56+8 t=1 type.int+0
	rel 64+8 t=1 type.noalg.map.bucket[struct { string }]int+0
	rel 72+8 t=1 runtime.strhash·f+0
type..namedata.*struct { m map[int]int }- SRODATA dupok size=28
	0x0000 00 00 19 2a 73 74 72 75 63 74 20 7b 20 6d 20 6d  ...*struct { m m
	0x0010 61 70 5b 69 6e 74 5d 69 6e 74 20 7d              ap[int]int }
type.*struct { "".m map[int]int } SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 91 40 d8 e2 08 08 08 36 00 00 00 00 00 00 00 00  .@.....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*struct { m map[int]int }-+0
	rel 48+8 t=1 type.struct { "".m map[int]int }+0
type..namedata.m- SRODATA dupok size=4
	0x0000 00 00 01 6d                                      ...m
type.struct { "".m map[int]int } SRODATA dupok size=104
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 7e d4 f3 51 02 08 08 39 00 00 00 00 00 00 00 00  ~..Q...9........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*struct { m map[int]int }-+0
	rel 44+4 t=6 type.*struct { "".m map[int]int }+0
	rel 48+8 t=1 type..importpath."".+0
	rel 56+8 t=1 type.struct { "".m map[int]int }+80
	rel 80+8 t=1 type..namedata.m-+0
	rel 88+8 t=1 type.map[int]int+0
gclocals·1a65e721a2ccc325b382662e7ffee780 SRODATA dupok size=10
	0x0000 02 00 00 00 01 00 00 00 01 00                    ..........
gclocals·69c1753bd5f81501d95132d08af04464 SRODATA dupok size=8
	0x0000 02 00 00 00 00 00 00 00                          ........
gclocals·dc9b0298814590ca3ffc3a889546fc8b SRODATA dupok size=10
	0x0000 02 00 00 00 02 00 00 00 03 00                    ..........
gclocals·955e25ebd21d9d330257196a49a276e5 SRODATA dupok size=10
	0x0000 02 00 00 00 04 00 00 00 00 00                    ..........
"".LookupStringConversionArrayLit.stkobj SRODATA size=24
	0x0000 01 00 00 00 00 00 00 00 e0 ff ff ff ff ff ff ff  ................
	0x0010 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.[2]string+0
"".LookupStringConversionKeyedArrayLit.stkobj SRODATA size=24
	0x0000 01 00 00 00 00 00 00 00 e0 ff ff ff ff ff ff ff  ................
	0x0010 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.[2]string+0
gclocals·c7c4fc7b12f6707ea74acf7400192967 SRODATA dupok size=11
	0x0000 03 00 00 00 01 00 00 00 01 01 00                 ...........
gclocals·e84991a80b24f8ce783c4ef5447afa10 SRODATA dupok size=14
	0x0000 03 00 00 00 0c 00 00 00 00 00 ff 00 00 00        ..............
"".MapClearNotReflexive.stkobj SRODATA size=24
	0x0000 01 00 00 00 00 00 00 00 a0 ff ff ff ff ff ff ff  ................
	0x0010 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.noalg.map.iter[float64]int+0
gclocals·df4d9be72e83b589af0c628812f5c907 SRODATA dupok size=14
	0x0000 03 00 00 00 0e 00 00 00 00 00 fc 03 00 00        ..............
"".MapClearInterface.stkobj SRODATA size=40
	0x0000 02 00 00 00 00 00 00 00 90 ff ff ff ff ff ff ff  ................
	0x0010 00 00 00 00 00 00 00 00 a0 ff ff ff ff ff ff ff  ................
	0x0020 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.interface {}+0
	rel 32+8 t=1 type.noalg.map.iter[interface {}]int+0
"".MapClearSideEffect.stkobj SRODATA size=24
	0x0000 01 00 00 00 00 00 00 00 a0 ff ff ff ff ff ff ff  ................
	0x0010 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.noalg.map.iter[int]int+0
aux for "".AccessInt1 SDWARFLOC size=51
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 67 00 00 00 00 00 00 00  ........g.......
	0x0020 01 00 9c 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00                                         ...
	rel 8+8 t=1 "".AccessInt1+0
aux for "".AccessInt1 SDWARFLINES size=20
	0x0000 04 02 03 0c 14 0a a5 9d 06 55 02 20 fd 06 37 02  .........U. ..7.
	0x0010 07 00 01 01                                      ....
aux for "".AccessInt1 SDWARFINFO size=84
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 41 63 63 65 73 73 49 6e  guments.AccessIn
	0x0020 74 31 00 00 00 00 00 00 00 00 00 00 00 00 00 00  t1..............
	0x0030 00 00 00 01 9c 02 00 00 00 01 10 6d 00 00 12 00  ...........m....
	0x0040 00 00 00 00 00 00 00 0f 7e 72 31 00 01 12 00 00  ........~r1.....
	0x0050 00 00 00 00                                      ....
	rel 0+0 t=24 type.int+0
	rel 0+0 t=24 type.map[int]int+0
	rel 35+8 t=1 "".AccessInt1+0
	rel 43+8 t=1 "".AccessInt1+103
	rel 63+4 t=29 go.info.map[int]int+0
	rel 67+4 t=29 +0
	rel 78+4 t=29 go.info.int+0
aux for "".AccessInt2 SDWARFLOC size=102
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 4a 00 00 00 00 00 00 00 5f 00 00 00 00 00 00 00  J......._.......
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 5f 00 00 00 00  ..........._....
	0x0050 00 00 00 01 00 9c 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00                                ......
	rel 8+8 t=1 "".AccessInt2+0
	rel 59+8 t=1 "".AccessInt2+0
aux for "".AccessInt2 SDWARFLINES size=22
	0x0000 04 02 03 11 14 0a a5 9d 06 55 06 08 9c 06 37 06  .........U....7.
	0x0010 70 02 07 00 01 01                                p.....
aux for "".AccessInt2 SDWARFINFO size=97
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 41 63 63 65 73 73 49 6e  guments.AccessIn
	0x0020 74 32 00 00 00 00 00 00 00 00 00 00 00 00 00 00  t2..............
	0x0030 00 00 00 01 9c 02 00 00 00 01 0b 6f 6b 00 19 00  ...........ok...
	0x0040 00 00 00 00 00 00 00 10 6d 00 00 17 00 00 00 00  ........m.......
	0x0050 00 00 00 00 0f 7e 72 31 00 01 17 00 00 00 00 00  .....~r1........
	0x0060 00                                               .
	rel 0+0 t=24 type.bool+0
	rel 0+0 t=24 type.map[int]int+0
	rel 35+8 t=1 "".AccessInt2+0
	rel 43+8 t=1 "".AccessInt2+95
	rel 63+4 t=29 go.info.bool+0
	rel 67+4 t=29 +0
	rel 76+4 t=29 go.info.map[int]int+0
	rel 80+4 t=29 +51
	rel 91+4 t=29 go.info.bool+0
aux for "".AccessString1 SDWARFLOC size=51
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 6a 00 00 00 00 00 00 00  ........j.......
	0x0020 01 00 9c 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00                                         ...
	rel 8+8 t=1 "".AccessString1+0
aux for "".AccessString1 SDWARFLINES size=19
	0x0000 04 02 03 17 14 0a a5 9d 06 55 06 02 27 fd 02 07  .........U..'...
	0x0010 00 01 01                                         ...
aux for "".AccessString1 SDWARFINFO size=87
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 41 63 63 65 73 73 53 74  guments.AccessSt
	0x0020 72 69 6e 67 31 00 00 00 00 00 00 00 00 00 00 00  ring1...........
	0x0030 00 00 00 00 00 00 01 9c 02 00 00 00 01 10 6d 00  ..............m.
	0x0040 00 1d 00 00 00 00 00 00 00 00 0f 7e 72 31 00 01  ...........~r1..
	0x0050 1d 00 00 00 00 00 00                             .......
	rel 0+0 t=24 type.int+0
	rel 0+0 t=24 type.map[string]int+0
	rel 38+8 t=1 "".AccessString1+0
	rel 46+8 t=1 "".AccessString1+106
	rel 66+4 t=29 go.info.map[string]int+0
	rel 70+4 t=29 +0
	rel 81+4 t=29 go.info.int+0
aux for "".AccessString2 SDWARFLOC size=102
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 51 00 00 00 00 00 00 00 67 00 00 00 00 00 00 00  Q.......g.......
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 67 00 00 00 00  ...........g....
	0x0050 00 00 00 01 00 9c 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00                                ......
	rel 8+8 t=1 "".AccessString2+0
	rel 59+8 t=1 "".AccessString2+0
aux for "".AccessString2 SDWARFLINES size=23
	0x0000 04 02 03 1c 14 0a a5 9d 06 55 06 08 e2 06 37 70  .........U....7p
	0x0010 06 19 02 07 00 01 01                             .......
aux for "".AccessString2 SDWARFINFO size=100
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 41 63 63 65 73 73 53 74  guments.AccessSt
	0x0020 72 69 6e 67 32 00 00 00 00 00 00 00 00 00 00 00  ring2...........
	0x0030 00 00 00 00 00 00 01 9c 02 00 00 00 01 0b 6f 6b  ..............ok
	0x0040 00 24 00 00 00 00 00 00 00 00 10 6d 00 00 22 00  .$.........m..".
	0x0050 00 00 00 00 00 00 00 0f 7e 72 31 00 01 22 00 00  ........~r1.."..
	0x0060 00 00 00 00                                      ....
	rel 0+0 t=24 type.bool+0
	rel 0+0 t=24 type.map[string]int+0
	rel 38+8 t=1 "".AccessString2+0
	rel 46+8 t=1 "".AccessString2+103
	rel 66+4 t=29 go.info.bool+0
	rel 70+4 t=29 +0
	rel 79+4 t=29 go.info.map[string]int+0
	rel 83+4 t=29 +51
	rel 94+4 t=29 go.info.bool+0
aux for "".LookupStringConversionSimple SDWARFLOC size=109
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 69 00 00 00 00 00 00 00  ........i.......
	0x0020 01 00 9c 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 69 00 00 00 00  ...........i....
	0x0050 00 00 00 08 00 91 08 93 08 91 10 93 08 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00           .............
	rel 8+8 t=1 "".LookupStringConversionSimple+0
	rel 59+8 t=1 "".LookupStringConversionSimple+0
aux for "".LookupStringConversionSimple SDWARFLINES size=19
	0x0000 04 02 03 26 14 0a a5 9d 06 55 06 02 26 fd 02 07  ...&.....U..&...
	0x0010 00 01 01                                         ...
aux for "".LookupStringConversionSimple SDWARFINFO size=119
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 4c 6f 6f 6b 75 70 53 74  guments.LookupSt
	0x0020 72 69 6e 67 43 6f 6e 76 65 72 73 69 6f 6e 53 69  ringConversionSi
	0x0030 6d 70 6c 65 00 00 00 00 00 00 00 00 00 00 00 00  mple............
	0x0040 00 00 00 00 00 01 9c 02 00 00 00 01 10 6d 00 00  .............m..
	0x0050 2c 00 00 00 00 00 00 00 00 10 62 79 74 65 73 00  ,.........bytes.
	0x0060 00 2c 00 00 00 00 00 00 00 00 0f 7e 72 32 00 01  .,.........~r2..
	0x0070 2c 00 00 00 00 00 00                             ,......
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 0+0 t=24 type.map[string]int+0
	rel 53+8 t=1 "".LookupStringConversionSimple+0
	rel 61+8 t=1 "".LookupStringConversionSimple+105
	rel 81+4 t=29 go.info.map[string]int+0
	rel 85+4 t=29 +0
	rel 98+4 t=29 go.info.[]uint8+0
	rel 102+4 t=29 +51
	rel 113+4 t=29 go.info.int+0
aux for "".LookupStringConversionStructLit SDWARFLOC size=109
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 69 00 00 00 00 00 00 00  ........i.......
	0x0020 01 00 9c 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 69 00 00 00 00  ...........i....
	0x0050 00 00 00 08 00 91 08 93 08 91 10 93 08 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00           .............
	rel 8+8 t=1 "".LookupStringConversionStructLit+0
	rel 59+8 t=1 "".LookupStringConversionStructLit+0
aux for "".LookupStringConversionStructLit SDWARFLINES size=19
	0x0000 04 02 03 2b 14 0a a5 9d 06 55 06 02 26 fd 02 07  ...+.....U..&...
	0x0010 00 01 01                                         ...
aux for "".LookupStringConversionStructLit SDWARFINFO size=122
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 4c 6f 6f 6b 75 70 53 74  guments.LookupSt
	0x0020 72 69 6e 67 43 6f 6e 76 65 72 73 69 6f 6e 53 74  ringConversionSt
	0x0030 72 75 63 74 4c 69 74 00 00 00 00 00 00 00 00 00  ructLit.........
	0x0040 00 00 00 00 00 00 00 00 01 9c 02 00 00 00 01 10  ................
	0x0050 6d 00 00 31 00 00 00 00 00 00 00 00 10 62 79 74  m..1.........byt
	0x0060 65 73 00 00 31 00 00 00 00 00 00 00 00 0f 7e 72  es..1.........~r
	0x0070 32 00 01 31 00 00 00 00 00 00                    2..1......
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 0+0 t=24 type.map[struct { string }]int+0
	rel 56+8 t=1 "".LookupStringConversionStructLit+0
	rel 64+8 t=1 "".LookupStringConversionStructLit+105
	rel 84+4 t=29 go.info.map[struct { string }]int+0
	rel 88+4 t=29 +0
	rel 101+4 t=29 go.info.[]uint8+0
	rel 105+4 t=29 +51
	rel 116+4 t=29 go.info.int+0
aux for "".LookupStringConversionArrayLit SDWARFLOC size=109
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 8d 00 00 00 00 00 00 00  ................
	0x0020 01 00 9c 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 8d 00 00 00 00  ................
	0x0050 00 00 00 08 00 91 08 93 08 91 10 93 08 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00           .............
	rel 8+8 t=1 "".LookupStringConversionArrayLit+0
	rel 59+8 t=1 "".LookupStringConversionArrayLit+0
aux for "".LookupStringConversionArrayLit SDWARFLINES size=19
	0x0000 04 02 03 30 14 0a a5 9d 06 2d 06 02 4b fd 02 0a  ...0.....-..K...
	0x0010 00 01 01                                         ...
aux for "".LookupStringConversionArrayLit SDWARFINFO size=121
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 4c 6f 6f 6b 75 70 53 74  guments.LookupSt
	0x0020 72 69 6e 67 43 6f 6e 76 65 72 73 69 6f 6e 41 72  ringConversionAr
	0x0030 72 61 79 4c 69 74 00 00 00 00 00 00 00 00 00 00  rayLit..........
	0x0040 00 00 00 00 00 00 00 01 9c 02 00 00 00 01 10 6d  ...............m
	0x0050 00 00 36 00 00 00 00 00 00 00 00 10 62 79 74 65  ..6.........byte
	0x0060 73 00 00 36 00 00 00 00 00 00 00 00 0f 7e 72 32  s..6.........~r2
	0x0070 00 01 36 00 00 00 00 00 00                       ..6......
	rel 0+0 t=24 type.[2]string+0
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 0+0 t=24 type.map[[2]string]int+0
	rel 55+8 t=1 "".LookupStringConversionArrayLit+0
	rel 63+8 t=1 "".LookupStringConversionArrayLit+141
	rel 83+4 t=29 go.info.map[[2]string]int+0
	rel 87+4 t=29 +0
	rel 100+4 t=29 go.info.[]uint8+0
	rel 104+4 t=29 +51
	rel 115+4 t=29 go.info.int+0
aux for type..eq.[2]string SDWARFLOC size=155
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 c5 00 00 00 00 00 00 00  ................
	0x0020 01 00 9c 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 c5 00 00 00 00  ................
	0x0050 00 00 00 02 00 91 08 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00  ................
	0x0070 00 00 00 00 00 00 00 91 00 00 00 00 00 00 00 c5  ................
	0x0080 00 00 00 00 00 00 00 02 00 91 10 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00                 ...........
	rel 8+8 t=1 type..eq.[2]string+0
	rel 59+8 t=1 type..eq.[2]string+0
	rel 111+8 t=1 type..eq.[2]string+0
aux for type..eq.[2]string SDWARFLINES size=37
	0x0000 04 01 0f 0a cd 06 cd 06 08 ff 06 37 06 02 1a ff  ...........7....
	0x0010 06 41 06 73 06 41 06 73 06 41 06 73 06 41 06 23  .A.s.A.s.A.s.A.#
	0x0020 02 05 00 01 01                                   .....
aux for type..eq.[2]string SDWARFINFO size=83
	0x0000 03 74 79 70 65 2e 2e 65 71 2e 5b 32 5d 73 74 72  .type..eq.[2]str
	0x0010 69 6e 67 00 00 00 00 00 00 00 00 00 00 00 00 00  ing.............
	0x0020 00 00 00 00 01 9c 01 00 00 00 01 10 70 00 00 01  ............p...
	0x0030 00 00 00 00 00 00 00 00 10 71 00 00 01 00 00 00  .........q......
	0x0040 00 00 00 00 00 10 72 00 01 01 00 00 00 00 00 00  ......r.........
	0x0050 00 00 00                                         ...
	rel 0+0 t=24 type.*[2]string+0
	rel 0+0 t=24 type.bool+0
	rel 0+0 t=24 type.int+0
	rel 20+8 t=1 type..eq.[2]string+0
	rel 28+8 t=1 type..eq.[2]string+197
	rel 48+4 t=29 go.info.*[2]string+0
	rel 52+4 t=29 +0
	rel 61+4 t=29 go.info.*[2]string+0
	rel 65+4 t=29 +51
	rel 74+4 t=29 go.info.bool+0
	rel 78+4 t=29 +103
aux for "".LookupStringConversionNestedLit SDWARFLOC size=109
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 69 00 00 00 00 00 00 00  ........i.......
	0x0020 01 00 9c 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 69 00 00 00 00  ...........i....
	0x0050 00 00 00 08 00 91 08 93 08 91 10 93 08 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00           .............
	rel 8+8 t=1 "".LookupStringConversionNestedLit+0
	rel 59+8 t=1 "".LookupStringConversionNestedLit+0
aux for "".LookupStringConversionNestedLit SDWARFLINES size=19
	0x0000 04 02 03 35 14 0a a5 9d 06 55 06 02 26 fd 02 07  ...5.....U..&...
	0x0010 00 01 01                                         ...
aux for "".LookupStringConversionNestedLit SDWARFINFO size=122
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 4c 6f 6f 6b 75 70 53 74  guments.LookupSt
	0x0020 72 69 6e 67 43 6f 6e 76 65 72 73 69 6f 6e 4e 65  ringConversionNe
	0x0030 73 74 65 64 4c 69 74 00 00 00 00 00 00 00 00 00  stedLit.........
	0x0040 00 00 00 00 00 00 00 00 01 9c 02 00 00 00 01 10  ................
	0x0050 6d 00 00 3b 00 00 00 00 00 00 00 00 10 62 79 74  m..;.........byt
	0x0060 65 73 00 00 3b 00 00 00 00 00 00 00 00 0f 7e 72  es..;.........~r
	0x0070 32 00 01 3b 00 00 00 00 00 00                    2..;......
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 0+0 t=24 type.map[[1]struct { "".s [1]string }]int+0
	rel 56+8 t=1 "".LookupStringConversionNestedLit+0
	rel 64+8 t=1 "".LookupStringConversionNestedLit+105
	rel 84+4 t=29 go.info.map[[1]struct { "".s [1]string }]int+0
	rel 88+4 t=29 +0
	rel 101+4 t=29 go.info.[]uint8+0
	rel 105+4 t=29 +51
	rel 116+4 t=29 go.info.int+0
aux for "".LookupStringConversionKeyedArrayLit SDWARFLOC size=109
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 8a 00 00 00 00 00 00 00  ................
	0x0020 01 00 9c 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 8a 00 00 00 00  ................
	0x0050 00 00 00 08 00 91 08 93 08 91 10 93 08 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00           .............
	rel 8+8 t=1 "".LookupStringConversionKeyedArrayLit+0
	rel 59+8 t=1 "".LookupStringConversionKeyedArrayLit+0
aux for "".LookupStringConversionKeyedArrayLit SDWARFLINES size=20
	0x0000 04 02 03 3a 14 0a a5 9d 06 2d 02 44 fd 06 37 02  ...:.....-.D..7.
	0x0010 0a 00 01 01                                      ....
aux for "".LookupStringConversionKeyedArrayLit SDWARFINFO size=126
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 4c 6f 6f 6b 75 70 53 74  guments.LookupSt
	0x0020 72 69 6e 67 43 6f 6e 76 65 72 73 69 6f 6e 4b 65  ringConversionKe
	0x0030 79 65 64 41 72 72 61 79 4c 69 74 00 00 00 00 00  yedArrayLit.....
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 01 9c 02 00  ................
	0x0050 00 00 01 10 6d 00 00 40 00 00 00 00 00 00 00 00  ....m..@........
	0x0060 10 62 79 74 65 73 00 00 40 00 00 00 00 00 00 00  .bytes..@.......
	0x0070 00 0f 7e 72 32 00 01 40 00 00 00 00 00 00        ..~r2..@......
	rel 0+0 t=24 type.[2]string+0
	rel 0+0 t=24 type.[]uint8+0
	rel 0+0 t=24 type.int+0
	rel 0+0 t=24 type.map[[2]string]int+0
	rel 60+8 t=1 "".LookupStringConversionKeyedArrayLit+0
	rel 68+8 t=1 "".LookupStringConversionKeyedArrayLit+138
	rel 88+4 t=29 go.info.map[[2]string]int+0
	rel 92+4 t=29 +0
	rel 105+4 t=29 go.info.[]uint8+0
	rel 109+4 t=29 +51
	rel 120+4 t=29 go.info.int+0
aux for "".MapClearReflexive SDWARFLOC size=51
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 48 00 00 00 00 00 00 00  ........H.......
	0x0020 01 00 9c 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00                                         ...
	rel 8+8 t=1 "".MapClearReflexive+0
aux for "".MapClearReflexive SDWARFLINES size=21
	0x0000 04 02 03 c5 00 14 0a a5 9e 06 55 06 d0 03 7e 6f  ..........U...~o
	0x0010 02 07 00 01 01                                   .....
aux for "".MapClearReflexive SDWARFINFO size=79
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 4d 61 70 43 6c 65 61 72  guments.MapClear
	0x0020 52 65 66 6c 65 78 69 76 65 00 00 00 00 00 00 00  Reflexive.......
	0x0030 00 00 00 00 00 00 00 00 00 00 01 9c 02 00 00 00  ................
	0x0040 01 10 6d 00 00 4b 00 00 00 00 00 00 00 00 00     ..m..K.........
	rel 0+0 t=24 type.map[int]int+0
	rel 42+8 t=1 "".MapClearReflexive+0
	rel 50+8 t=1 "".MapClearReflexive+72
	rel 70+4 t=29 go.info.map[int]int+0
	rel 74+4 t=29 +0
aux for "".MapClearIndirect SDWARFLOC size=102
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 48 00 00 00 00 00 00 00  ........H.......
	0x0020 01 00 9c 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 48 00 00 00 00  ...........H....
	0x0050 00 00 00 01 00 9c 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00                                ......
	rel 8+8 t=1 "".MapClearIndirect+0
	rel 59+8 t=1 "".MapClearIndirect+0
aux for "".MapClearIndirect SDWARFLINES size=21
	0x0000 04 02 03 cd 00 14 0a a5 9f 06 55 06 d0 03 7d 6f  ..........U...}o
	0x0010 02 07 00 01 01                                   .....
aux for "".MapClearIndirect SDWARFINFO size=90
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 4d 61 70 43 6c 65 61 72  guments.MapClear
	0x0020 49 6e 64 69 72 65 63 74 00 00 00 00 00 00 00 00  Indirect........
	0x0030 00 00 00 00 00 00 00 00 00 01 9c 02 00 00 00 01  ................
	0x0040 0b 73 00 54 00 00 00 00 00 00 00 00 10 6d 00 00  .s.T.........m..
	0x0050 53 00 00 00 00 00 00 00 00 00                    S.........
	rel 0+0 t=24 type.map[int]int+0
	rel 41+8 t=1 "".MapClearIndirect+0
	rel 49+8 t=1 "".MapClearIndirect+72
	rel 68+4 t=29 go.info.struct { "".m map[int]int }+0
	rel 72+4 t=29 +0
	rel 81+4 t=29 go.info.map[int]int+0
	rel 85+4 t=29 +51
aux for "".MapClearPointer SDWARFLOC size=51
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 48 00 00 00 00 00 00 00  ........H.......
	0x0020 01 00 9c 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00                                         ...
	rel 8+8 t=1 "".MapClearPointer+0
aux for "".MapClearPointer SDWARFLINES size=21
	0x0000 04 02 03 d6 00 14 0a a5 9e 06 55 06 d0 03 7e 6f  ..........U...~o
	0x0010 02 07 00 01 01                                   .....
aux for "".MapClearPointer SDWARFINFO size=77
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 4d 61 70 43 6c 65 61 72  guments.MapClear
	0x0020 50 6f 69 6e 74 65 72 00 00 00 00 00 00 00 00 00  Pointer.........
	0x0030 00 00 00 00 00 00 00 00 01 9c 02 00 00 00 01 10  ................
	0x0040 6d 00 00 5c 00 00 00 00 00 00 00 00 00           m..\.........
	rel 0+0 t=24 type.map[*uint8]int+0
	rel 40+8 t=1 "".MapClearPointer+0
	rel 48+8 t=1 "".MapClearPointer+72
	rel 68+4 t=29 go.info.map[*uint8]int+0
	rel 72+4 t=29 +0
aux for "".MapClearNotReflexive SDWARFLOC size=102
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 df 00 00 00 00 00 00 00  ................
	0x0020 01 00 9c 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 80 00 00 00 00 00 00 00 ad 00 00 00 00  ................
	0x0050 00 00 00 01 00 61 00 00 00 00 00 00 00 00 00 00  .....a..........
	0x0060 00 00 00 00 00 00                                ......
	rel 8+8 t=1 "".MapClearNotReflexive+0
	rel 59+8 t=1 "".MapClearNotReflexive+0
aux for "".MapClearNotReflexive SDWARFLINES size=35
	0x0000 04 02 03 de 00 14 0a ff f8 06 41 06 02 35 f6 06  ..........A..5..
	0x0010 4b 06 08 73 40 06 41 06 37 06 73 06 41 ac 02 0a  K..s@.A.7.s.A...
	0x0020 00 01 01                                         ...
aux for "".MapClearNotReflexive SDWARFINFO size=112
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 4d 61 70 43 6c 65 61 72  guments.MapClear
	0x0020 4e 6f 74 52 65 66 6c 65 78 69 76 65 00 00 00 00  NotReflexive....
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 01 9c 02  ................
	0x0040 00 00 00 01 10 6d 00 00 64 00 00 00 00 00 00 00  .....m..d.......
	0x0050 00 15 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 0b 6b 00 67 00 00 00 00 00 00 00 00 00 00  ...k.g..........
	rel 0+0 t=24 type.float64+0
	rel 0+0 t=24 type.map[float64]int+0
	rel 0+0 t=24 type.noalg.map.iter[float64]int+0
	rel 45+8 t=1 "".MapClearNotReflexive+0
	rel 53+8 t=1 "".MapClearNotReflexive+223
	rel 73+4 t=29 go.info.map[float64]int+0
	rel 77+4 t=29 +0
	rel 82+8 t=1 "".MapClearNotReflexive+47
	rel 90+8 t=1 "".MapClearNotReflexive+213
	rel 102+4 t=29 go.info.float64+0
	rel 106+4 t=29 +51
aux for "".MapClearInterface SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 ea 00 00 00 00 00 00 00  ................
	0x0020 01 00 9c 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 7f 00 00 00 00 00 00 00 83 00 00 00 00  ................
	0x0050 00 00 00 05 00 52 93 08 93 08 83 00 00 00 00 00  .....R..........
	0x0060 00 00 94 00 00 00 00 00 00 00 06 00 52 93 08 50  ............R..P
	0x0070 93 08 94 00 00 00 00 00 00 00 a0 00 00 00 00 00  ................
	0x0080 00 00 05 00 52 93 08 93 08 00 00 00 00 00 00 00  ....R...........
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=1 "".MapClearInterface+0
	rel 59+8 t=1 "".MapClearInterface+0
aux for "".MapClearInterface SDWARFLINES size=38
	0x0000 04 02 03 e6 00 14 0a ff f8 06 41 06 02 38 f6 06  ..........A..8..
	0x0010 41 06 08 a5 40 06 41 06 55 06 73 06 41 06 ac 06  A...@.A.U.s.A...
	0x0020 19 02 0a 00 01 01                                ......
aux for "".MapClearInterface SDWARFINFO size=109
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 4d 61 70 43 6c 65 61 72  guments.MapClear
	0x0020 49 6e 74 65 72 66 61 63 65 00 00 00 00 00 00 00  Interface.......
	0x0030 00 00 00 00 00 00 00 00 00 00 01 9c 02 00 00 00  ................
	0x0040 01 10 6d 00 00 6c 00 00 00 00 00 00 00 00 15 00  ..m..l..........
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0b  ................
	0x0060 6b 00 6f 00 00 00 00 00 00 00 00 00 00           k.o..........
	rel 0+0 t=24 type.interface {}+0
	rel 0+0 t=24 type.map[interface {}]int+0
	rel 0+0 t=24 type.noalg.map.iter[interface {}]int+0
	rel 42+8 t=1 "".MapClearInterface+0
	rel 50+8 t=1 "".MapClearInterface+234
	rel 70+4 t=29 go.info.map[interface {}]int+0
	rel 74+4 t=29 +0
	rel 79+8 t=1 "".MapClearInterface+47
	rel 87+8 t=1 "".MapClearInterface+223
	rel 99+4 t=29 go.info.interface {}+0
	rel 103+4 t=29 +51
aux for "".MapClearSideEffect SDWARFLOC size=142
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 81 00 00 00 00 00 00 00 a8 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 a8 00 00 00 00 00 00 00 bb 00 00 00 00  ..P.............
	0x0030 00 00 00 03 00 91 88 7f bb 00 00 00 00 00 00 00  ................
	0x0040 ea 00 00 00 00 00 00 00 01 00 50 00 00 00 00 00  ..........P.....
	0x0050 00 00 00 00 00 00 00 00 00 00 00 ff ff ff ff ff  ................
	0x0060 ff ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 ea 00 00 00 00 00 00 00 01 00 9c 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00        ..............
	rel 8+8 t=1 "".MapClearSideEffect+0
	rel 99+8 t=1 "".MapClearSideEffect+0
aux for "".MapClearSideEffect SDWARFLINES size=44
	0x0000 04 02 03 ee 00 14 0a ff f9 06 41 06 02 3b f6 06  ..........A..;..
	0x0010 55 06 eb 40 06 41 06 37 06 44 06 3e 06 41 06 44  U..@.A.7.D.>.A.D
	0x0020 06 5f 03 7d ab 06 2d 02 0a 00 01 01              ._.}..-.....
aux for "".MapClearSideEffect SDWARFINFO size=104
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 4d 61 70 43 6c 65 61 72  guments.MapClear
	0x0020 53 69 64 65 45 66 66 65 63 74 00 00 00 00 00 00  SideEffect......
	0x0030 00 00 00 00 00 00 00 00 00 00 00 01 9c 02 00 00  ................
	0x0040 00 01 0b 6b 00 75 00 00 00 00 00 00 00 00 10 6d  ...k.u.........m
	0x0050 00 00 74 00 00 00 00 00 00 00 00 0f 7e 72 31 00  ..t.........~r1.
	0x0060 01 74 00 00 00 00 00 00                          .t......
	rel 0+0 t=24 type.int+0
	rel 0+0 t=24 type.map[int]int+0
	rel 0+0 t=24 type.noalg.map.iter[int]int+0
	rel 43+8 t=1 "".MapClearSideEffect+0
	rel 51+8 t=1 "".MapClearSideEffect+234
	rel 70+4 t=29 go.info.int+0
	rel 74+4 t=29 +0
	rel 83+4 t=29 go.info.map[int]int+0
	rel 87+4 t=29 +91
	rel 98+4 t=29 go.info.int+0
aux for type..hash.[2]string SDWARFLOC size=174
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 2b 00 00 00 00 00 00 00 52 00 00 00 00 00 00 00  +.......R.......
	0x0020 02 00 91 68 52 00 00 00 00 00 00 00 6e 00 00 00  ...hR.......n...
	0x0030 00 00 00 00 01 00 50 00 00 00 00 00 00 00 00 00  ......P.........
	0x0040 00 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 6e  ...............n
	0x0060 00 00 00 00 00 00 00 01 00 9c 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff  ................
	0x0080 ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 6e 00 00 00 00 00 00 00 02 00 91 08 00 00  ..n.............
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00        ..............
	rel 8+8 t=1 type..hash.[2]string+0
	rel 79+8 t=1 type..hash.[2]string+0
	rel 130+8 t=1 type..hash.[2]string+0
aux for type..hash.[2]string SDWARFLINES size=24
	0x0000 04 01 0f 0a a5 06 af 06 02 1b ff 06 37 06 23 06  ............7.#.
	0x0010 41 06 73 02 07 00 01 01                          A.s.....
aux for type..hash.[2]string SDWARFINFO size=96
	0x0000 03 74 79 70 65 2e 2e 68 61 73 68 2e 5b 32 5d 73  .type..hash.[2]s
	0x0010 74 72 69 6e 67 00 00 00 00 00 00 00 00 00 00 00  tring...........
	0x0020 00 00 00 00 00 00 01 9c 01 00 00 00 01 0b 69 00  ..............i.
	0x0030 01 00 00 00 00 00 00 00 00 10 70 00 00 01 00 00  ..........p.....
	0x0040 00 00 00 00 00 00 10 68 00 00 01 00 00 00 00 00  .......h........
	0x0050 00 00 00 0f 7e 72 32 00 01 01 00 00 00 00 00 00  ....~r2.........
	rel 0+0 t=24 type.*[2]string+0
	rel 0+0 t=24 type.int+0
	rel 0+0 t=24 type.uintptr+0
	rel 22+8 t=1 type..hash.[2]string+0
	rel 30+8 t=1 type..hash.[2]string+110
	rel 49+4 t=29 go.info.int+0
	rel 53+4 t=29 +0
	rel 62+4 t=29 go.info.*[2]string+0
	rel 66+4 t=29 +71
	rel 75+4 t=29 go.info.uintptr+0
	rel 79+4 t=29 +122
	rel 90+4 t=29 go.info.uintptr+0
