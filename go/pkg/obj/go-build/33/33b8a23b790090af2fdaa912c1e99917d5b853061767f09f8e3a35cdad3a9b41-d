# command-line-arguments
"".StackStore STEXT nosplit size=10 args=0x8 locals=0x0
	0x0000 00000 (/usr/local/go/test/codegen/stack.go:24)	TEXT	"".StackStore(SB), NOSPLIT|ABIInternal, $0-8
	0x0000 00000 (/usr/local/go/test/codegen/stack.go:24)	FUNCDATA	$0, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x0000 00000 (/usr/local/go/test/codegen/stack.go:24)	FUNCDATA	$1, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x0000 00000 (/usr/local/go/test/codegen/stack.go:26)	MOVQ	$0, "".~r0+8(SP)
	0x0009 00009 (/usr/local/go/test/codegen/stack.go:26)	RET
	0x0000 48 c7 44 24 08 00 00 00 00 c3                    H.D$......
"".ZeroLargeStruct STEXT nosplit size=28 args=0x8 locals=0x0
	0x0000 00000 (/usr/local/go/test/codegen/stack.go:44)	TEXT	"".ZeroLargeStruct(SB), NOSPLIT|ABIInternal, $0-8
	0x0000 00000 (/usr/local/go/test/codegen/stack.go:44)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (/usr/local/go/test/codegen/stack.go:44)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (/usr/local/go/test/codegen/stack.go:46)	MOVQ	"".x+8(SP), AX
	0x0005 00005 (/usr/local/go/test/codegen/stack.go:46)	MOVQ	$0, (AX)
	0x000c 00012 (/usr/local/go/test/codegen/stack.go:46)	XORPS	X0, X0
	0x000f 00015 (/usr/local/go/test/codegen/stack.go:46)	MOVUPS	X0, 8(AX)
	0x0013 00019 (/usr/local/go/test/codegen/stack.go:46)	MOVUPS	X0, 24(AX)
	0x0017 00023 (/usr/local/go/test/codegen/stack.go:46)	MOVUPS	X0, 40(AX)
	0x001b 00027 (/usr/local/go/test/codegen/stack.go:47)	RET
	0x0000 48 8b 44 24 08 48 c7 00 00 00 00 00 0f 57 c0 0f  H.D$.H.......W..
	0x0010 11 40 08 0f 11 40 18 0f 11 40 28 c3              .@...@...@(.
"".KeepWanted STEXT nosplit size=58 args=0x8 locals=0x0
	0x0000 00000 (/usr/local/go/test/codegen/stack.go:60)	TEXT	"".KeepWanted(SB), NOSPLIT|ABIInternal, $0-8
	0x0000 00000 (/usr/local/go/test/codegen/stack.go:60)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (/usr/local/go/test/codegen/stack.go:60)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (/usr/local/go/test/codegen/stack.go:61)	MOVQ	"".t+8(SP), AX
	0x0005 00005 (/usr/local/go/test/codegen/stack.go:61)	MOVQ	(AX), CX
	0x0008 00008 (/usr/local/go/test/codegen/stack.go:61)	MOVQ	8(AX), DX
	0x000c 00012 (/usr/local/go/test/codegen/stack.go:61)	MOVQ	16(AX), BX
	0x0010 00016 (/usr/local/go/test/codegen/stack.go:61)	MOVQ	24(AX), SI
	0x0014 00020 (/usr/local/go/test/codegen/stack.go:61)	MOVQ	$0, (AX)
	0x001b 00027 (/usr/local/go/test/codegen/stack.go:61)	XORPS	X0, X0
	0x001e 00030 (/usr/local/go/test/codegen/stack.go:61)	MOVUPS	X0, 8(AX)
	0x0022 00034 (/usr/local/go/test/codegen/stack.go:61)	MOVUPS	X0, 24(AX)
	0x0026 00038 (/usr/local/go/test/codegen/stack.go:61)	MOVUPS	X0, 40(AX)
	0x002a 00042 (/usr/local/go/test/codegen/stack.go:61)	MOVQ	CX, (AX)
	0x002d 00045 (/usr/local/go/test/codegen/stack.go:61)	MOVQ	DX, 8(AX)
	0x0031 00049 (/usr/local/go/test/codegen/stack.go:61)	MOVQ	BX, 16(AX)
	0x0035 00053 (/usr/local/go/test/codegen/stack.go:61)	MOVQ	SI, 24(AX)
	0x0039 00057 (/usr/local/go/test/codegen/stack.go:62)	RET
	0x0000 48 8b 44 24 08 48 8b 08 48 8b 50 08 48 8b 58 10  H.D$.H..H.P.H.X.
	0x0010 48 8b 70 18 48 c7 00 00 00 00 00 0f 57 c0 0f 11  H.p.H.......W...
	0x0020 40 08 0f 11 40 18 0f 11 40 28 48 89 08 48 89 50  @...@...@(H..H.P
	0x0030 08 48 89 58 10 48 89 70 18 c3                    .H.X.H.p..
"".ArrayAdd64 STEXT nosplit size=86 args=0x60 locals=0x0
	0x0000 00000 (/usr/local/go/test/codegen/stack.go:74)	TEXT	"".ArrayAdd64(SB), NOSPLIT|ABIInternal, $0-96
	0x0000 00000 (/usr/local/go/test/codegen/stack.go:74)	FUNCDATA	$0, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x0000 00000 (/usr/local/go/test/codegen/stack.go:74)	FUNCDATA	$1, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x0000 00000 (/usr/local/go/test/codegen/stack.go:74)	XORPS	X0, X0
	0x0003 00003 (/usr/local/go/test/codegen/stack.go:74)	MOVUPS	X0, "".~r2+72(SP)
	0x0008 00008 (/usr/local/go/test/codegen/stack.go:74)	MOVUPS	X0, "".~r2+88(SP)
	0x000d 00013 (/usr/local/go/test/codegen/stack.go:75)	MOVSD	"".b+40(SP), X0
	0x0013 00019 (/usr/local/go/test/codegen/stack.go:75)	ADDSD	"".a+8(SP), X0
	0x0019 00025 (/usr/local/go/test/codegen/stack.go:75)	MOVSD	"".b+48(SP), X1
	0x001f 00031 (/usr/local/go/test/codegen/stack.go:75)	ADDSD	"".a+16(SP), X1
	0x0025 00037 (/usr/local/go/test/codegen/stack.go:75)	MOVSD	"".b+56(SP), X2
	0x002b 00043 (/usr/local/go/test/codegen/stack.go:75)	ADDSD	"".a+24(SP), X2
	0x0031 00049 (/usr/local/go/test/codegen/stack.go:75)	MOVSD	"".b+64(SP), X3
	0x0037 00055 (/usr/local/go/test/codegen/stack.go:75)	ADDSD	"".a+32(SP), X3
	0x003d 00061 (/usr/local/go/test/codegen/stack.go:75)	MOVSD	X0, "".~r2+72(SP)
	0x0043 00067 (/usr/local/go/test/codegen/stack.go:75)	MOVSD	X1, "".~r2+80(SP)
	0x0049 00073 (/usr/local/go/test/codegen/stack.go:75)	MOVSD	X2, "".~r2+88(SP)
	0x004f 00079 (/usr/local/go/test/codegen/stack.go:75)	MOVSD	X3, "".~r2+96(SP)
	0x0055 00085 (/usr/local/go/test/codegen/stack.go:75)	RET
	0x0000 0f 57 c0 0f 11 44 24 48 0f 11 44 24 58 f2 0f 10  .W...D$H..D$X...
	0x0010 44 24 28 f2 0f 58 44 24 08 f2 0f 10 4c 24 30 f2  D$(..XD$....L$0.
	0x0020 0f 58 4c 24 10 f2 0f 10 54 24 38 f2 0f 58 54 24  .XL$....T$8..XT$
	0x0030 18 f2 0f 10 5c 24 40 f2 0f 58 5c 24 20 f2 0f 11  ....\$@..X\$ ...
	0x0040 44 24 48 f2 0f 11 4c 24 50 f2 0f 11 54 24 58 f2  D$H...L$P...T$X.
	0x0050 0f 11 5c 24 60 c3                                ..\$`.
"".ArrayInit STEXT nosplit size=44 args=0x30 locals=0x0
	0x0000 00000 (/usr/local/go/test/codegen/stack.go:88)	TEXT	"".ArrayInit(SB), NOSPLIT|ABIInternal, $0-48
	0x0000 00000 (/usr/local/go/test/codegen/stack.go:88)	FUNCDATA	$0, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x0000 00000 (/usr/local/go/test/codegen/stack.go:88)	FUNCDATA	$1, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x0000 00000 (/usr/local/go/test/codegen/stack.go:88)	XORPS	X0, X0
	0x0003 00003 (/usr/local/go/test/codegen/stack.go:88)	MOVUPS	X0, "".~r2+24(SP)
	0x0008 00008 (/usr/local/go/test/codegen/stack.go:88)	MOVUPS	X0, "".~r2+40(SP)
	0x000d 00013 (/usr/local/go/test/codegen/stack.go:89)	MOVUPS	X0, "".~r2+24(SP)
	0x0012 00018 (/usr/local/go/test/codegen/stack.go:89)	MOVUPS	X0, "".~r2+40(SP)
	0x0017 00023 (/usr/local/go/test/codegen/stack.go:89)	MOVQ	"".i+8(SP), AX
	0x001c 00028 (/usr/local/go/test/codegen/stack.go:89)	MOVQ	AX, "".~r2+24(SP)
	0x0021 00033 (/usr/local/go/test/codegen/stack.go:89)	MOVQ	"".j+16(SP), AX
	0x0026 00038 (/usr/local/go/test/codegen/stack.go:89)	MOVQ	AX, "".~r2+40(SP)
	0x002b 00043 (/usr/local/go/test/codegen/stack.go:89)	RET
	0x0000 0f 57 c0 0f 11 44 24 18 0f 11 44 24 28 0f 11 44  .W...D$...D$(..D
	0x0010 24 18 0f 11 44 24 28 48 8b 44 24 08 48 89 44 24  $...D$(H.D$.H.D$
	0x0020 18 48 8b 44 24 10 48 89 44 24 28 c3              .H.D$.H.D$(.
"".check_asmout STEXT size=63 args=0x18 locals=0x8
	0x0000 00000 (/usr/local/go/test/codegen/stack.go:95)	TEXT	"".check_asmout(SB), ABIInternal, $8-24
	0x0000 00000 (/usr/local/go/test/codegen/stack.go:95)	MOVQ	(TLS), CX
	0x0009 00009 (/usr/local/go/test/codegen/stack.go:95)	CMPQ	SP, 16(CX)
	0x000d 00013 (/usr/local/go/test/codegen/stack.go:95)	PCDATA	$0, $-2
	0x000d 00013 (/usr/local/go/test/codegen/stack.go:95)	JLS	56
	0x000f 00015 (/usr/local/go/test/codegen/stack.go:95)	PCDATA	$0, $-1
	0x000f 00015 (/usr/local/go/test/codegen/stack.go:95)	SUBQ	$8, SP
	0x0013 00019 (/usr/local/go/test/codegen/stack.go:95)	MOVQ	BP, (SP)
	0x0017 00023 (/usr/local/go/test/codegen/stack.go:95)	LEAQ	(SP), BP
	0x001b 00027 (/usr/local/go/test/codegen/stack.go:95)	FUNCDATA	$0, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x001b 00027 (/usr/local/go/test/codegen/stack.go:95)	FUNCDATA	$1, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x001b 00027 (/usr/local/go/test/codegen/stack.go:96)	PCDATA	$1, $0
	0x001b 00027 (/usr/local/go/test/codegen/stack.go:96)	NOP
	0x0020 00032 (/usr/local/go/test/codegen/stack.go:96)	CALL	runtime.GC(SB)
	0x0025 00037 (/usr/local/go/test/codegen/stack.go:99)	MOVQ	"".b+24(SP), AX
	0x002a 00042 (/usr/local/go/test/codegen/stack.go:99)	MOVQ	AX, "".~r2+32(SP)
	0x002f 00047 (/usr/local/go/test/codegen/stack.go:99)	MOVQ	(SP), BP
	0x0033 00051 (/usr/local/go/test/codegen/stack.go:99)	ADDQ	$8, SP
	0x0037 00055 (/usr/local/go/test/codegen/stack.go:99)	RET
	0x0038 00056 (/usr/local/go/test/codegen/stack.go:99)	NOP
	0x0038 00056 (/usr/local/go/test/codegen/stack.go:95)	PCDATA	$1, $-1
	0x0038 00056 (/usr/local/go/test/codegen/stack.go:95)	PCDATA	$0, $-2
	0x0038 00056 (/usr/local/go/test/codegen/stack.go:95)	CALL	runtime.morestack_noctxt(SB)
	0x003d 00061 (/usr/local/go/test/codegen/stack.go:95)	PCDATA	$0, $-1
	0x003d 00061 (/usr/local/go/test/codegen/stack.go:95)	JMP	0
	0x0000 64 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 29 48  dH..%....H;a.v)H
	0x0010 83 ec 08 48 89 2c 24 48 8d 2c 24 0f 1f 44 00 00  ...H.,$H.,$..D..
	0x0020 e8 00 00 00 00 48 8b 44 24 18 48 89 44 24 20 48  .....H.D$.H.D$ H
	0x0030 8b 2c 24 48 83 c4 08 c3 e8 00 00 00 00 eb c1     .,$H...........
	rel 5+4 t=17 TLS+0
	rel 33+4 t=8 runtime.GC+0
	rel 57+4 t=8 runtime.morestack_noctxt+0
"".MightPanic STEXT nosplit size=149 args=0x38 locals=0x18
	0x0000 00000 (/usr/local/go/test/codegen/stack.go:105)	TEXT	"".MightPanic(SB), NOSPLIT|ABIInternal, $24-56
	0x0000 00000 (/usr/local/go/test/codegen/stack.go:105)	SUBQ	$24, SP
	0x0004 00004 (/usr/local/go/test/codegen/stack.go:105)	MOVQ	BP, 16(SP)
	0x0009 00009 (/usr/local/go/test/codegen/stack.go:105)	LEAQ	16(SP), BP
	0x000e 00014 (/usr/local/go/test/codegen/stack.go:105)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x000e 00014 (/usr/local/go/test/codegen/stack.go:105)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x000e 00014 (/usr/local/go/test/codegen/stack.go:106)	MOVQ	"".i+56(SP), AX
	0x0013 00019 (/usr/local/go/test/codegen/stack.go:106)	MOVQ	"".a+40(SP), CX
	0x0018 00024 (/usr/local/go/test/codegen/stack.go:106)	CMPQ	AX, CX
	0x001b 00027 (/usr/local/go/test/codegen/stack.go:106)	JCC	143
	0x001d 00029 (/usr/local/go/test/codegen/stack.go:107)	MOVQ	"".j+64(SP), CX
	0x0022 00034 (/usr/local/go/test/codegen/stack.go:107)	MOVQ	"".a+48(SP), DX
	0x0027 00039 (/usr/local/go/test/codegen/stack.go:107)	CMPQ	CX, DX
	0x002a 00042 (/usr/local/go/test/codegen/stack.go:107)	JHI	138
	0x002c 00044 (/usr/local/go/test/codegen/stack.go:107)	CMPQ	AX, CX
	0x002f 00047 (/usr/local/go/test/codegen/stack.go:107)	JHI	133
	0x0031 00049 (/usr/local/go/test/codegen/stack.go:108)	MOVQ	"".k+72(SP), AX
	0x0036 00054 (/usr/local/go/test/codegen/stack.go:108)	CMPQ	AX, DX
	0x0039 00057 (/usr/local/go/test/codegen/stack.go:108)	JHI	114
	0x003b 00059 (/usr/local/go/test/codegen/stack.go:108)	NOP
	0x0040 00064 (/usr/local/go/test/codegen/stack.go:108)	CMPQ	CX, AX
	0x0043 00067 (/usr/local/go/test/codegen/stack.go:108)	JHI	106
	0x0045 00069 (/usr/local/go/test/codegen/stack.go:109)	MOVQ	"".s+80(SP), AX
	0x004a 00074 (/usr/local/go/test/codegen/stack.go:109)	TESTQ	AX, AX
	0x004d 00077 (/usr/local/go/test/codegen/stack.go:109)	JLT	101
	0x004f 00079 (/usr/local/go/test/codegen/stack.go:110)	TESTQ	CX, CX
	0x0052 00082 (/usr/local/go/test/codegen/stack.go:110)	JEQ	94
	0x0054 00084 (/usr/local/go/test/codegen/stack.go:111)	MOVQ	16(SP), BP
	0x0059 00089 (/usr/local/go/test/codegen/stack.go:111)	ADDQ	$24, SP
	0x005d 00093 (/usr/local/go/test/codegen/stack.go:111)	RET
	0x005e 00094 (/usr/local/go/test/codegen/stack.go:110)	PCDATA	$1, $1
	0x005e 00094 (/usr/local/go/test/codegen/stack.go:110)	NOP
	0x0060 00096 (/usr/local/go/test/codegen/stack.go:110)	CALL	runtime.panicdivide(SB)
	0x0065 00101 (/usr/local/go/test/codegen/stack.go:109)	CALL	runtime.panicshift(SB)
	0x006a 00106 (/usr/local/go/test/codegen/stack.go:108)	MOVQ	AX, DX
	0x006d 00109 (/usr/local/go/test/codegen/stack.go:108)	CALL	runtime.panicSlice3B(SB)
	0x0072 00114 (/usr/local/go/test/codegen/stack.go:105)	MOVQ	DX, CX
	0x0075 00117 (/usr/local/go/test/codegen/stack.go:108)	MOVQ	AX, DX
	0x0078 00120 (/usr/local/go/test/codegen/stack.go:108)	MOVQ	CX, BX
	0x007b 00123 (/usr/local/go/test/codegen/stack.go:108)	NOP
	0x0080 00128 (/usr/local/go/test/codegen/stack.go:108)	CALL	runtime.panicSlice3Acap(SB)
	0x0085 00133 (/usr/local/go/test/codegen/stack.go:107)	CALL	runtime.panicSliceB(SB)
	0x008a 00138 (/usr/local/go/test/codegen/stack.go:107)	CALL	runtime.panicSliceAcap(SB)
	0x008f 00143 (/usr/local/go/test/codegen/stack.go:106)	CALL	runtime.panicIndex(SB)
	0x0094 00148 (/usr/local/go/test/codegen/stack.go:106)	XCHGL	AX, AX
	0x0000 48 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 48 8b  H...H.l$.H.l$.H.
	0x0010 44 24 38 48 8b 4c 24 28 48 39 c8 73 72 48 8b 4c  D$8H.L$(H9.srH.L
	0x0020 24 40 48 8b 54 24 30 48 39 d1 77 5e 48 39 c8 77  $@H.T$0H9.w^H9.w
	0x0030 54 48 8b 44 24 48 48 39 d0 77 37 0f 1f 44 00 00  TH.D$HH9.w7..D..
	0x0040 48 39 c1 77 25 48 8b 44 24 50 48 85 c0 7c 16 48  H9.w%H.D$PH..|.H
	0x0050 85 c9 74 0a 48 8b 6c 24 10 48 83 c4 18 c3 66 90  ..t.H.l$.H....f.
	0x0060 e8 00 00 00 00 e8 00 00 00 00 48 89 c2 e8 00 00  ..........H.....
	0x0070 00 00 48 89 d1 48 89 c2 48 89 cb 0f 1f 44 00 00  ..H..H..H....D..
	0x0080 e8 00 00 00 00 e8 00 00 00 00 e8 00 00 00 00 e8  ................
	0x0090 00 00 00 00 90                                   .....
	rel 97+4 t=8 runtime.panicdivide+0
	rel 102+4 t=8 runtime.panicshift+0
	rel 110+4 t=8 runtime.panicSlice3B+0
	rel 129+4 t=8 runtime.panicSlice3Acap+0
	rel 134+4 t=8 runtime.panicSliceB+0
	rel 139+4 t=8 runtime.panicSliceAcap+0
	rel 144+4 t=8 runtime.panicIndex+0
"".Defer STEXT size=185 args=0x0 locals=0x70
	0x0000 00000 (/usr/local/go/test/codegen/stack.go:114)	TEXT	"".Defer(SB), ABIInternal, $112-0
	0x0000 00000 (/usr/local/go/test/codegen/stack.go:114)	MOVQ	(TLS), CX
	0x0009 00009 (/usr/local/go/test/codegen/stack.go:114)	CMPQ	SP, 16(CX)
	0x000d 00013 (/usr/local/go/test/codegen/stack.go:114)	PCDATA	$0, $-2
	0x000d 00013 (/usr/local/go/test/codegen/stack.go:114)	JLS	175
	0x0013 00019 (/usr/local/go/test/codegen/stack.go:114)	PCDATA	$0, $-1
	0x0013 00019 (/usr/local/go/test/codegen/stack.go:114)	SUBQ	$112, SP
	0x0017 00023 (/usr/local/go/test/codegen/stack.go:114)	MOVQ	BP, 104(SP)
	0x001c 00028 (/usr/local/go/test/codegen/stack.go:114)	LEAQ	104(SP), BP
	0x0021 00033 (/usr/local/go/test/codegen/stack.go:114)	FUNCDATA	$0, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x0021 00033 (/usr/local/go/test/codegen/stack.go:114)	FUNCDATA	$1, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x0021 00033 (/usr/local/go/test/codegen/stack.go:114)	XORL	AX, AX
	0x0023 00035 (/usr/local/go/test/codegen/stack.go:115)	JMP	46
	0x0025 00037 (/usr/local/go/test/codegen/stack.go:115)	MOVQ	"".i+16(SP), CX
	0x002a 00042 (/usr/local/go/test/codegen/stack.go:115)	LEAQ	1(CX), AX
	0x002e 00046 (/usr/local/go/test/codegen/stack.go:115)	CMPQ	AX, $2
	0x0032 00050 (/usr/local/go/test/codegen/stack.go:115)	JGE	103
	0x0034 00052 (/usr/local/go/test/codegen/stack.go:115)	MOVQ	AX, "".i+16(SP)
	0x0039 00057 (/usr/local/go/test/codegen/stack.go:116)	MOVL	$0, (SP)
	0x0040 00064 (/usr/local/go/test/codegen/stack.go:116)	LEAQ	"".Defer.func1·f(SB), AX
	0x0047 00071 (/usr/local/go/test/codegen/stack.go:116)	MOVQ	AX, 8(SP)
	0x004c 00076 (/usr/local/go/test/codegen/stack.go:116)	PCDATA	$1, $0
	0x004c 00076 (/usr/local/go/test/codegen/stack.go:116)	CALL	runtime.deferproc(SB)
	0x0051 00081 (/usr/local/go/test/codegen/stack.go:116)	TESTL	AX, AX
	0x0053 00083 (/usr/local/go/test/codegen/stack.go:116)	JNE	87
	0x0055 00085 (/usr/local/go/test/codegen/stack.go:116)	JMP	37
	0x0057 00087 (/usr/local/go/test/codegen/stack.go:116)	XCHGL	AX, AX
	0x0058 00088 (/usr/local/go/test/codegen/stack.go:116)	CALL	runtime.deferreturn(SB)
	0x005d 00093 (/usr/local/go/test/codegen/stack.go:116)	MOVQ	104(SP), BP
	0x0062 00098 (/usr/local/go/test/codegen/stack.go:116)	ADDQ	$112, SP
	0x0066 00102 (/usr/local/go/test/codegen/stack.go:116)	RET
	0x0067 00103 (/usr/local/go/test/codegen/stack.go:119)	MOVL	$0, ""..autotmp_3+24(SP)
	0x006f 00111 (/usr/local/go/test/codegen/stack.go:119)	LEAQ	"".Defer.func2·f(SB), AX
	0x0076 00118 (/usr/local/go/test/codegen/stack.go:119)	MOVQ	AX, ""..autotmp_3+48(SP)
	0x007b 00123 (/usr/local/go/test/codegen/stack.go:119)	LEAQ	""..autotmp_3+24(SP), AX
	0x0080 00128 (/usr/local/go/test/codegen/stack.go:119)	MOVQ	AX, (SP)
	0x0084 00132 (/usr/local/go/test/codegen/stack.go:119)	CALL	runtime.deferprocStack(SB)
	0x0089 00137 (/usr/local/go/test/codegen/stack.go:119)	TESTL	AX, AX
	0x008b 00139 (/usr/local/go/test/codegen/stack.go:119)	JNE	157
	0x008d 00141 (/usr/local/go/test/codegen/stack.go:120)	XCHGL	AX, AX
	0x008e 00142 (/usr/local/go/test/codegen/stack.go:120)	CALL	runtime.deferreturn(SB)
	0x0093 00147 (/usr/local/go/test/codegen/stack.go:120)	MOVQ	104(SP), BP
	0x0098 00152 (/usr/local/go/test/codegen/stack.go:120)	ADDQ	$112, SP
	0x009c 00156 (/usr/local/go/test/codegen/stack.go:120)	RET
	0x009d 00157 (/usr/local/go/test/codegen/stack.go:119)	XCHGL	AX, AX
	0x009e 00158 (/usr/local/go/test/codegen/stack.go:119)	NOP
	0x00a0 00160 (/usr/local/go/test/codegen/stack.go:119)	CALL	runtime.deferreturn(SB)
	0x00a5 00165 (/usr/local/go/test/codegen/stack.go:119)	MOVQ	104(SP), BP
	0x00aa 00170 (/usr/local/go/test/codegen/stack.go:119)	ADDQ	$112, SP
	0x00ae 00174 (/usr/local/go/test/codegen/stack.go:119)	RET
	0x00af 00175 (/usr/local/go/test/codegen/stack.go:119)	NOP
	0x00af 00175 (/usr/local/go/test/codegen/stack.go:114)	PCDATA	$1, $-1
	0x00af 00175 (/usr/local/go/test/codegen/stack.go:114)	PCDATA	$0, $-2
	0x00af 00175 (/usr/local/go/test/codegen/stack.go:114)	CALL	runtime.morestack_noctxt(SB)
	0x00b4 00180 (/usr/local/go/test/codegen/stack.go:114)	PCDATA	$0, $-1
	0x00b4 00180 (/usr/local/go/test/codegen/stack.go:114)	JMP	0
	0x0000 64 48 8b 0c 25 00 00 00 00 48 3b 61 10 0f 86 9c  dH..%....H;a....
	0x0010 00 00 00 48 83 ec 70 48 89 6c 24 68 48 8d 6c 24  ...H..pH.l$hH.l$
	0x0020 68 31 c0 eb 09 48 8b 4c 24 10 48 8d 41 01 48 83  h1...H.L$.H.A.H.
	0x0030 f8 02 7d 33 48 89 44 24 10 c7 04 24 00 00 00 00  ..}3H.D$...$....
	0x0040 48 8d 05 00 00 00 00 48 89 44 24 08 e8 00 00 00  H......H.D$.....
	0x0050 00 85 c0 75 02 eb ce 90 e8 00 00 00 00 48 8b 6c  ...u.........H.l
	0x0060 24 68 48 83 c4 70 c3 c7 44 24 18 00 00 00 00 48  $hH..p..D$.....H
	0x0070 8d 05 00 00 00 00 48 89 44 24 30 48 8d 44 24 18  ......H.D$0H.D$.
	0x0080 48 89 04 24 e8 00 00 00 00 85 c0 75 10 90 e8 00  H..$.......u....
	0x0090 00 00 00 48 8b 6c 24 68 48 83 c4 70 c3 90 66 90  ...H.l$hH..p..f.
	0x00a0 e8 00 00 00 00 48 8b 6c 24 68 48 83 c4 70 c3 e8  .....H.l$hH..p..
	0x00b0 00 00 00 00 e9 47 ff ff ff                       .....G...
	rel 5+4 t=17 TLS+0
	rel 67+4 t=16 "".Defer.func1·f+0
	rel 77+4 t=8 runtime.deferproc+0
	rel 89+4 t=8 runtime.deferreturn+0
	rel 114+4 t=16 "".Defer.func2·f+0
	rel 133+4 t=8 runtime.deferprocStack+0
	rel 143+4 t=8 runtime.deferreturn+0
	rel 161+4 t=8 runtime.deferreturn+0
	rel 176+4 t=8 runtime.morestack_noctxt+0
"".Defer.func1 STEXT nosplit size=1 args=0x0 locals=0x0
	0x0000 00000 (/usr/local/go/test/codegen/stack.go:116)	TEXT	"".Defer.func1(SB), NOSPLIT|ABIInternal, $0-0
	0x0000 00000 (/usr/local/go/test/codegen/stack.go:116)	FUNCDATA	$0, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x0000 00000 (/usr/local/go/test/codegen/stack.go:116)	FUNCDATA	$1, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x0000 00000 (/usr/local/go/test/codegen/stack.go:116)	RET
	0x0000 c3                                               .
"".Defer.func2 STEXT nosplit size=1 args=0x0 locals=0x0
	0x0000 00000 (/usr/local/go/test/codegen/stack.go:119)	TEXT	"".Defer.func2(SB), NOSPLIT|ABIInternal, $0-0
	0x0000 00000 (/usr/local/go/test/codegen/stack.go:119)	FUNCDATA	$0, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x0000 00000 (/usr/local/go/test/codegen/stack.go:119)	FUNCDATA	$1, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x0000 00000 (/usr/local/go/test/codegen/stack.go:119)	RET
	0x0000 c3                                               .
type..eq.[4]float64 STEXT dupok nosplit size=53 args=0x18 locals=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	type..eq.[4]float64(SB), DUPOK|NOSPLIT|ABIInternal, $0-24
	0x0000 00000 (<autogenerated>:1)	FUNCDATA	$0, gclocals·dc9b0298814590ca3ffc3a889546fc8b(SB)
	0x0000 00000 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (<autogenerated>:1)	MOVQ	"".p+8(SP), AX
	0x0005 00005 (<autogenerated>:1)	MOVQ	"".q+16(SP), CX
	0x000a 00010 (<autogenerated>:1)	XORL	DX, DX
	0x000c 00012 (<autogenerated>:1)	JMP	17
	0x000e 00014 (<autogenerated>:1)	INCQ	DX
	0x0011 00017 (<autogenerated>:1)	CMPQ	DX, $4
	0x0015 00021 (<autogenerated>:1)	JGE	47
	0x0017 00023 (<autogenerated>:1)	MOVSD	(AX)(DX*8), X0
	0x001c 00028 (<autogenerated>:1)	MOVSD	(CX)(DX*8), X1
	0x0021 00033 (<autogenerated>:1)	UCOMISD	X1, X0
	0x0025 00037 (<autogenerated>:1)	JNE	41
	0x0027 00039 (<autogenerated>:1)	JPC	14
	0x0029 00041 (<autogenerated>:1)	MOVB	$0, "".r+24(SP)
	0x002e 00046 (<autogenerated>:1)	RET
	0x002f 00047 (<autogenerated>:1)	MOVB	$1, "".r+24(SP)
	0x0034 00052 (<autogenerated>:1)	RET
	0x0000 48 8b 44 24 08 48 8b 4c 24 10 31 d2 eb 03 48 ff  H.D$.H.L$.1...H.
	0x0010 c2 48 83 fa 04 7d 18 f2 0f 10 04 d0 f2 0f 10 0c  .H...}..........
	0x0020 d1 66 0f 2e c1 75 02 7b e5 c6 44 24 18 00 c3 c6  .f...u.{..D$....
	0x0030 44 24 18 01 c3                                   D$...
go.cuinfo.packagename.command-line-arguments SDWARFINFO dupok size=0
	0x0000 63 6f 64 65 67 65 6e                             codegen
""..inittask SNOPTRDATA size=32
	0x0000 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 24+8 t=1 runtime..inittask+0
"".Defer.func1·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 "".Defer.func1+0
"".Defer.func2·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 "".Defer.func2+0
type..eqfunc56 SRODATA dupok size=16
	0x0000 00 00 00 00 00 00 00 00 38 00 00 00 00 00 00 00  ........8.......
	rel 0+8 t=1 runtime.memequal_varlen+0
runtime.memequal64·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 runtime.memequal64+0
runtime.gcbits.01 SRODATA dupok size=1
	0x0000 01                                               .
type..namedata.*codegen.T. SRODATA dupok size=13
	0x0000 01 00 0a 2a 63 6f 64 65 67 65 6e 2e 54           ...*codegen.T
type.*"".T SRODATA size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 c3 49 f0 a5 08 08 08 36 00 00 00 00 00 00 00 00  .I.....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*codegen.T.+0
	rel 48+8 t=1 type."".T+0
runtime.gcbits. SRODATA dupok size=0
type..importpath."". SRODATA dupok size=25
	0x0000 00 00 16 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d  ...command-line-
	0x0010 61 72 67 75 6d 65 6e 74 73                       arguments
type..namedata.A. SRODATA dupok size=4
	0x0000 01 00 01 41                                      ...A
type..namedata.B. SRODATA dupok size=4
	0x0000 01 00 01 42                                      ...B
type..namedata.C. SRODATA dupok size=4
	0x0000 01 00 01 43                                      ...C
type..namedata.D. SRODATA dupok size=4
	0x0000 01 00 01 44                                      ...D
type..namedata.x- SRODATA dupok size=4
	0x0000 00 00 01 78                                      ...x
type..namedata.y- SRODATA dupok size=4
	0x0000 00 00 01 79                                      ...y
type..namedata.z- SRODATA dupok size=4
	0x0000 00 00 01 7a                                      ...z
type."".T SRODATA size=264
	0x0000 38 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  8...............
	0x0010 e0 b1 c9 1d 0f 08 08 19 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 07 00 00 00 00 00 00 00 07 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 b8 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 20 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x00b0 00 00 00 00 00 00 00 00 30 00 00 00 00 00 00 00  ........0.......
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 40 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  @...............
	0x00e0 00 00 00 00 00 00 00 00 50 00 00 00 00 00 00 00  ........P.......
	0x00f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0100 60 00 00 00 00 00 00 00                          `.......
	rel 24+8 t=1 type..eqfunc56+0
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type..namedata.*codegen.T.+0
	rel 44+4 t=5 type.*"".T+0
	rel 48+8 t=1 type..importpath."".+0
	rel 56+8 t=1 type."".T+96
	rel 80+4 t=5 type..importpath."".+0
	rel 96+8 t=1 type..namedata.A.+0
	rel 104+8 t=1 type.int+0
	rel 120+8 t=1 type..namedata.B.+0
	rel 128+8 t=1 type.int+0
	rel 144+8 t=1 type..namedata.C.+0
	rel 152+8 t=1 type.int+0
	rel 168+8 t=1 type..namedata.D.+0
	rel 176+8 t=1 type.int+0
	rel 192+8 t=1 type..namedata.x-+0
	rel 200+8 t=1 type.int+0
	rel 216+8 t=1 type..namedata.y-+0
	rel 224+8 t=1 type.int+0
	rel 240+8 t=1 type..namedata.z-+0
	rel 248+8 t=1 type.int+0
type..namedata.*[]float64- SRODATA dupok size=13
	0x0000 00 00 0a 2a 5b 5d 66 6c 6f 61 74 36 34           ...*[]float64
type.*[]float64 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 f4 91 61 4f 08 08 08 36 00 00 00 00 00 00 00 00  ..aO...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]float64-+0
	rel 48+8 t=1 type.[]float64+0
type.[]float64 SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 30 33 37 9c 02 08 08 17 00 00 00 00 00 00 00 00  037.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]float64-+0
	rel 44+4 t=6 type.*[]float64+0
	rel 48+8 t=1 type.float64+0
type..eqfunc.[4]float64 SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 type..eq.[4]float64+0
type..namedata.*[4]float64- SRODATA dupok size=14
	0x0000 00 00 0b 2a 5b 34 5d 66 6c 6f 61 74 36 34        ...*[4]float64
type.*[4]float64 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 22 eb 00 d3 08 08 08 36 00 00 00 00 00 00 00 00  "......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[4]float64-+0
	rel 48+8 t=1 type.[4]float64+0
type.[4]float64 SRODATA dupok size=72
	0x0000 20 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x0010 3b a2 ed cb 02 08 08 11 00 00 00 00 00 00 00 00  ;...............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 04 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 type..eqfunc.[4]float64+0
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type..namedata.*[4]float64-+0
	rel 44+4 t=6 type.*[4]float64+0
	rel 48+8 t=1 type.float64+0
	rel 56+8 t=1 type.[]float64+0
type..namedata.*[]int- SRODATA dupok size=9
	0x0000 00 00 06 2a 5b 5d 69 6e 74                       ...*[]int
type.*[]int SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 1b 31 52 88 08 08 08 36 00 00 00 00 00 00 00 00  .1R....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]int-+0
	rel 48+8 t=1 type.[]int+0
type.[]int SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 8e 66 f9 1b 02 08 08 17 00 00 00 00 00 00 00 00  .f..............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]int-+0
	rel 44+4 t=6 type.*[]int+0
	rel 48+8 t=1 type.int+0
type..eqfunc32 SRODATA dupok size=16
	0x0000 00 00 00 00 00 00 00 00 20 00 00 00 00 00 00 00  ........ .......
	rel 0+8 t=1 runtime.memequal_varlen+0
type..namedata.*[4]int- SRODATA dupok size=10
	0x0000 00 00 07 2a 5b 34 5d 69 6e 74                    ...*[4]int
type.*[4]int SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 f0 ba d6 e0 08 08 08 36 00 00 00 00 00 00 00 00  .......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[4]int-+0
	rel 48+8 t=1 type.[4]int+0
type.[4]int SRODATA dupok size=72
	0x0000 20 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x0010 ae 6a 57 d6 0a 08 08 11 00 00 00 00 00 00 00 00  .jW.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 04 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 type..eqfunc32+0
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type..namedata.*[4]int-+0
	rel 44+4 t=6 type.*[4]int+0
	rel 48+8 t=1 type.int+0
	rel 56+8 t=1 type.[]int+0
type..namedata.*[]uint8- SRODATA dupok size=11
	0x0000 00 00 08 2a 5b 5d 75 69 6e 74 38                 ...*[]uint8
type.*[]uint8 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 a5 8e d0 69 08 08 08 36 00 00 00 00 00 00 00 00  ...i...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]uint8-+0
	rel 48+8 t=1 type.[]uint8+0
type.[]uint8 SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 df 7e 2e 38 02 08 08 17 00 00 00 00 00 00 00 00  .~.8............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]uint8-+0
	rel 44+4 t=6 type.*[]uint8+0
	rel 48+8 t=1 type.uint8+0
runtime.memequal0·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 runtime.memequal0+0
type..namedata.*[0]uint8- SRODATA dupok size=12
	0x0000 00 00 09 2a 5b 30 5d 75 69 6e 74 38              ...*[0]uint8
type.*[0]uint8 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 be a5 63 b3 08 08 08 36 00 00 00 00 00 00 00 00  ..c....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[0]uint8-+0
	rel 48+8 t=1 type.[0]uint8+0
type.[0]uint8 SRODATA dupok size=72
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 93 13 6c e9 0a 01 01 11 00 00 00 00 00 00 00 00  ..l.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal0·f+0
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type..namedata.*[0]uint8-+0
	rel 44+4 t=6 type.*[0]uint8+0
	rel 48+8 t=1 type.uint8+0
	rel 56+8 t=1 type.[]uint8+0
type..namedata.*struct { siz uint32; started bool; heap bool; openDefer bool; sp uintptr; pc uintptr; fn uintptr; _panic uintptr; link uintptr; framepc uintptr; varp uintptr; fd uintptr; args [0]uint8 }- SRODATA dupok size=190
	0x0000 00 00 bb 2a 73 74 72 75 63 74 20 7b 20 73 69 7a  ...*struct { siz
	0x0010 20 75 69 6e 74 33 32 3b 20 73 74 61 72 74 65 64   uint32; started
	0x0020 20 62 6f 6f 6c 3b 20 68 65 61 70 20 62 6f 6f 6c   bool; heap bool
	0x0030 3b 20 6f 70 65 6e 44 65 66 65 72 20 62 6f 6f 6c  ; openDefer bool
	0x0040 3b 20 73 70 20 75 69 6e 74 70 74 72 3b 20 70 63  ; sp uintptr; pc
	0x0050 20 75 69 6e 74 70 74 72 3b 20 66 6e 20 75 69 6e   uintptr; fn uin
	0x0060 74 70 74 72 3b 20 5f 70 61 6e 69 63 20 75 69 6e  tptr; _panic uin
	0x0070 74 70 74 72 3b 20 6c 69 6e 6b 20 75 69 6e 74 70  tptr; link uintp
	0x0080 74 72 3b 20 66 72 61 6d 65 70 63 20 75 69 6e 74  tr; framepc uint
	0x0090 70 74 72 3b 20 76 61 72 70 20 75 69 6e 74 70 74  ptr; varp uintpt
	0x00a0 72 3b 20 66 64 20 75 69 6e 74 70 74 72 3b 20 61  r; fd uintptr; a
	0x00b0 72 67 73 20 5b 30 5d 75 69 6e 74 38 20 7d        rgs [0]uint8 }
type.*struct { "".siz uint32; "".started bool; "".heap bool; "".openDefer bool; "".sp uintptr; "".pc uintptr; "".fn uintptr; ""._panic uintptr; "".link uintptr; "".framepc uintptr; "".varp uintptr; "".fd uintptr; "".args [0]uint8 } SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 33 e6 af f9 08 08 08 36 00 00 00 00 00 00 00 00  3......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*struct { siz uint32; started bool; heap bool; openDefer bool; sp uintptr; pc uintptr; fn uintptr; _panic uintptr; link uintptr; framepc uintptr; varp uintptr; fd uintptr; args [0]uint8 }-+0
	rel 48+8 t=1 type.noalg.struct { "".siz uint32; "".started bool; "".heap bool; "".openDefer bool; "".sp uintptr; "".pc uintptr; "".fn uintptr; ""._panic uintptr; "".link uintptr; "".framepc uintptr; "".varp uintptr; "".fd uintptr; "".args [0]uint8 }+0
type..namedata.siz- SRODATA dupok size=6
	0x0000 00 00 03 73 69 7a                                ...siz
type..namedata.started- SRODATA dupok size=10
	0x0000 00 00 07 73 74 61 72 74 65 64                    ...started
type..namedata.heap- SRODATA dupok size=7
	0x0000 00 00 04 68 65 61 70                             ...heap
type..namedata.openDefer- SRODATA dupok size=12
	0x0000 00 00 09 6f 70 65 6e 44 65 66 65 72              ...openDefer
type..namedata.sp- SRODATA dupok size=5
	0x0000 00 00 02 73 70                                   ...sp
type..namedata.pc- SRODATA dupok size=5
	0x0000 00 00 02 70 63                                   ...pc
type..namedata.fn- SRODATA dupok size=5
	0x0000 00 00 02 66 6e                                   ...fn
type..namedata._panic- SRODATA dupok size=9
	0x0000 00 00 06 5f 70 61 6e 69 63                       ..._panic
type..namedata.link- SRODATA dupok size=7
	0x0000 00 00 04 6c 69 6e 6b                             ...link
type..namedata.framepc- SRODATA dupok size=10
	0x0000 00 00 07 66 72 61 6d 65 70 63                    ...framepc
type..namedata.varp- SRODATA dupok size=7
	0x0000 00 00 04 76 61 72 70                             ...varp
type..namedata.fd- SRODATA dupok size=5
	0x0000 00 00 02 66 64                                   ...fd
type..namedata.args- SRODATA dupok size=7
	0x0000 00 00 04 61 72 67 73                             ...args
type.noalg.struct { "".siz uint32; "".started bool; "".heap bool; "".openDefer bool; "".sp uintptr; "".pc uintptr; "".fn uintptr; ""._panic uintptr; "".link uintptr; "".framepc uintptr; "".varp uintptr; "".fd uintptr; "".args [0]uint8 } SRODATA dupok size=392
	0x0000 50 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  P...............
	0x0010 ec ff 07 77 02 08 08 19 00 00 00 00 00 00 00 00  ...w............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 0d 00 00 00 00 00 00 00 0d 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 0a 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 0c 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00c0 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 00 00 00 00 00 00 00 00 20 00 00 00 00 00 00 00  ........ .......
	0x00e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00f0 30 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  0...............
	0x0100 00 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00  ........@.......
	0x0110 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0120 50 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  P...............
	0x0130 00 00 00 00 00 00 00 00 60 00 00 00 00 00 00 00  ........`.......
	0x0140 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0150 70 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  p...............
	0x0160 00 00 00 00 00 00 00 00 80 00 00 00 00 00 00 00  ................
	0x0170 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0180 90 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type..namedata.*struct { siz uint32; started bool; heap bool; openDefer bool; sp uintptr; pc uintptr; fn uintptr; _panic uintptr; link uintptr; framepc uintptr; varp uintptr; fd uintptr; args [0]uint8 }-+0
	rel 44+4 t=6 type.*struct { "".siz uint32; "".started bool; "".heap bool; "".openDefer bool; "".sp uintptr; "".pc uintptr; "".fn uintptr; ""._panic uintptr; "".link uintptr; "".framepc uintptr; "".varp uintptr; "".fd uintptr; "".args [0]uint8 }+0
	rel 48+8 t=1 type..importpath."".+0
	rel 56+8 t=1 type.noalg.struct { "".siz uint32; "".started bool; "".heap bool; "".openDefer bool; "".sp uintptr; "".pc uintptr; "".fn uintptr; ""._panic uintptr; "".link uintptr; "".framepc uintptr; "".varp uintptr; "".fd uintptr; "".args [0]uint8 }+80
	rel 80+8 t=1 type..namedata.siz-+0
	rel 88+8 t=1 type.uint32+0
	rel 104+8 t=1 type..namedata.started-+0
	rel 112+8 t=1 type.bool+0
	rel 128+8 t=1 type..namedata.heap-+0
	rel 136+8 t=1 type.bool+0
	rel 152+8 t=1 type..namedata.openDefer-+0
	rel 160+8 t=1 type.bool+0
	rel 176+8 t=1 type..namedata.sp-+0
	rel 184+8 t=1 type.uintptr+0
	rel 200+8 t=1 type..namedata.pc-+0
	rel 208+8 t=1 type.uintptr+0
	rel 224+8 t=1 type..namedata.fn-+0
	rel 232+8 t=1 type.uintptr+0
	rel 248+8 t=1 type..namedata._panic-+0
	rel 256+8 t=1 type.uintptr+0
	rel 272+8 t=1 type..namedata.link-+0
	rel 280+8 t=1 type.uintptr+0
	rel 296+8 t=1 type..namedata.framepc-+0
	rel 304+8 t=1 type.uintptr+0
	rel 320+8 t=1 type..namedata.varp-+0
	rel 328+8 t=1 type.uintptr+0
	rel 344+8 t=1 type..namedata.fd-+0
	rel 352+8 t=1 type.uintptr+0
	rel 368+8 t=1 type..namedata.args-+0
	rel 376+8 t=1 type.[0]uint8+0
type..importpath.runtime. SRODATA dupok size=10
	0x0000 00 00 07 72 75 6e 74 69 6d 65                    ...runtime
gclocals·33cdeccccebe80329f1fdbee7f5874cb SRODATA dupok size=8
	0x0000 01 00 00 00 00 00 00 00                          ........
gclocals·1a65e721a2ccc325b382662e7ffee780 SRODATA dupok size=10
	0x0000 02 00 00 00 01 00 00 00 01 00                    ..........
gclocals·69c1753bd5f81501d95132d08af04464 SRODATA dupok size=8
	0x0000 02 00 00 00 00 00 00 00                          ........
gclocals·dc9b0298814590ca3ffc3a889546fc8b SRODATA dupok size=10
	0x0000 02 00 00 00 02 00 00 00 03 00                    ..........
aux for "".StackStore SDWARFLINES size=12
	0x0000 04 02 03 14 14 06 69 02 01 00 01 01              ......i.....
aux for "".StackStore SDWARFINFO size=71
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 53 74 61 63 6b 53 74 6f  guments.StackSto
	0x0020 72 65 00 00 00 00 00 00 00 00 00 00 00 00 00 00  re..............
	0x0030 00 00 00 01 9c 02 00 00 00 01 0f 7e 72 30 00 01  ...........~r0..
	0x0040 18 00 00 00 00 00 00                             .......
	rel 0+0 t=24 type.int+0
	rel 35+8 t=1 "".StackStore+0
	rel 43+8 t=1 "".StackStore+10
	rel 65+4 t=29 go.info.int+0
aux for "".ZeroLargeStruct SDWARFLOC size=51
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 1c 00 00 00 00 00 00 00  ................
	0x0020 01 00 9c 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00                                         ...
	rel 8+8 t=1 "".ZeroLargeStruct+0
aux for "".ZeroLargeStruct SDWARFLINES size=14
	0x0000 04 02 03 28 14 06 41 06 ec 02 01 00 01 01        ...(..A.......
aux for "".ZeroLargeStruct SDWARFINFO size=77
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 5a 65 72 6f 4c 61 72 67  guments.ZeroLarg
	0x0020 65 53 74 72 75 63 74 00 00 00 00 00 00 00 00 00  eStruct.........
	0x0030 00 00 00 00 00 00 00 00 01 9c 02 00 00 00 01 10  ................
	0x0040 78 00 00 2c 00 00 00 00 00 00 00 00 00           x..,.........
	rel 0+0 t=24 type.*"".T+0
	rel 40+8 t=1 "".ZeroLargeStruct+0
	rel 48+8 t=1 "".ZeroLargeStruct+28
	rel 68+4 t=29 go.info.*"".T+0
	rel 72+4 t=29 +0
aux for "".KeepWanted SDWARFLOC size=51
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 3a 00 00 00 00 00 00 00  ........:.......
	0x0020 01 00 9c 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00                                         ...
	rel 8+8 t=1 "".KeepWanted+0
aux for "".KeepWanted SDWARFLINES size=16
	0x0000 04 02 03 37 14 06 41 06 02 1d f6 02 01 00 01 01  ...7..A.........
aux for "".KeepWanted SDWARFINFO size=72
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 4b 65 65 70 57 61 6e 74  guments.KeepWant
	0x0020 65 64 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ed..............
	0x0030 00 00 00 01 9c 02 00 00 00 01 10 74 00 00 3c 00  ...........t..<.
	0x0040 00 00 00 00 00 00 00 00                          ........
	rel 0+0 t=24 type.*"".T+0
	rel 35+8 t=1 "".KeepWanted+0
	rel 43+8 t=1 "".KeepWanted+58
	rel 63+4 t=29 go.info.*"".T+0
	rel 67+4 t=29 +0
aux for "".ArrayAdd64 SDWARFLINES size=17
	0x0000 04 02 03 c4 00 14 06 2d 06 74 06 4b 02 43 00 01  .......-.t.K.C..
	0x0010 01                                               .
aux for "".ArrayAdd64 SDWARFINFO size=94
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 41 72 72 61 79 41 64 64  guments.ArrayAdd
	0x0020 36 34 00 00 00 00 00 00 00 00 00 00 00 00 00 00  64..............
	0x0030 00 00 00 01 9c 02 00 00 00 01 0f 61 00 00 4a 00  ...........a..J.
	0x0040 00 00 00 01 9c 0f 62 00 00 4a 00 00 00 00 02 91  ......b..J......
	0x0050 20 0f 7e 72 32 00 01 4a 00 00 00 00 00 00         .~r2..J......
	rel 0+0 t=24 type.[4]float64+0
	rel 35+8 t=1 "".ArrayAdd64+0
	rel 43+8 t=1 "".ArrayAdd64+86
	rel 63+4 t=29 go.info.[4]float64+0
	rel 74+4 t=29 go.info.[4]float64+0
	rel 88+4 t=29 go.info.[4]float64+0
aux for "".ArrayInit SDWARFLOC size=103
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 2c 00 00 00 00 00 00 00  ........,.......
	0x0020 01 00 9c 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 2c 00 00 00 00  ...........,....
	0x0050 00 00 00 02 00 91 08 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00                             .......
	rel 8+8 t=1 "".ArrayInit+0
	rel 59+8 t=1 "".ArrayInit+0
aux for "".ArrayInit SDWARFLINES size=17
	0x0000 04 02 03 d2 00 14 06 2d 06 74 06 41 02 1a 00 01  .......-.t.A....
	0x0010 01                                               .
aux for "".ArrayInit SDWARFINFO size=96
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 41 72 72 61 79 49 6e 69  guments.ArrayIni
	0x0020 74 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  t...............
	0x0030 00 00 01 9c 02 00 00 00 01 10 69 00 00 58 00 00  ..........i..X..
	0x0040 00 00 00 00 00 00 10 6a 00 00 58 00 00 00 00 00  .......j..X.....
	0x0050 00 00 00 0f 7e 72 32 00 01 58 00 00 00 00 00 00  ....~r2..X......
	rel 0+0 t=24 type.[4]int+0
	rel 0+0 t=24 type.int+0
	rel 34+8 t=1 "".ArrayInit+0
	rel 42+8 t=1 "".ArrayInit+44
	rel 62+4 t=29 go.info.int+0
	rel 66+4 t=29 +0
	rel 75+4 t=29 go.info.int+0
	rel 79+4 t=29 +51
	rel 90+4 t=29 go.info.[4]int+0
aux for "".check_asmout SDWARFLOC size=52
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 3f 00 00 00 00 00 00 00  ........?.......
	0x0020 02 00 91 08 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00                                      ....
	rel 8+8 t=1 "".check_asmout+0
aux for "".check_asmout SDWARFLINES size=22
	0x0000 04 02 03 d9 00 14 0a a5 06 88 06 41 44 06 41 06  ...........AD.A.
	0x0010 97 02 07 00 01 01                                ......
aux for "".check_asmout SDWARFINFO size=96
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 68 65 63 6b 5f 61 73  guments.check_as
	0x0020 6d 6f 75 74 00 00 00 00 00 00 00 00 00 00 00 00  mout............
	0x0030 00 00 00 00 00 01 9c 02 00 00 00 01 0f 61 00 00  .............a..
	0x0040 5f 00 00 00 00 00 10 62 00 00 5f 00 00 00 00 00  _......b.._.....
	0x0050 00 00 00 0f 7e 72 32 00 01 5f 00 00 00 00 00 00  ....~r2.._......
	rel 0+0 t=24 type.int+0
	rel 37+8 t=1 "".check_asmout+0
	rel 45+8 t=1 "".check_asmout+63
	rel 65+4 t=29 go.info.int+0
	rel 75+4 t=29 go.info.int+0
	rel 79+4 t=29 +0
	rel 90+4 t=29 go.info.int+0
aux for "".MightPanic SDWARFLOC size=266
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 95 00 00 00 00 00 00 00  ................
	0x0020 08 00 91 08 93 08 91 10 93 08 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff  ................
	0x0040 ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 95 00 00 00 00 00 00 00 02 00 91 18 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ff ff  ................
	0x0070 ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 95 00 00 00 00 00 00 00 02 00  ................
	0x0090 91 20 00 00 00 00 00 00 00 00 00 00 00 00 00 00  . ..............
	0x00a0 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 00 95 00 00 00 00 00  ................
	0x00c0 00 00 02 00 91 28 00 00 00 00 00 00 00 00 00 00  .....(..........
	0x00d0 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x00e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 95 00  ................
	0x00f0 00 00 00 00 00 00 02 00 91 30 00 00 00 00 00 00  .........0......
	0x0100 00 00 00 00 00 00 00 00 00 00                    ..........
	rel 8+8 t=1 "".MightPanic+0
	rel 66+8 t=1 "".MightPanic+0
	rel 118+8 t=1 "".MightPanic+0
	rel 170+8 t=1 "".MightPanic+0
	rel 222+8 t=1 "".MightPanic+0
aux for "".MightPanic SDWARFLINES size=43
	0x0000 04 02 0a 03 e3 00 14 9c 06 41 06 74 06 41 06 a6  .........A.t.A..
	0x0010 06 41 06 a6 06 41 06 42 06 2d 06 24 06 72 54 40  .A...A.B.-.$.rT@
	0x0020 5c 30 ae 72 06 41 02 01 00 01 01                 \0.r.A.....
aux for "".MightPanic SDWARFINFO size=124
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 4d 69 67 68 74 50 61 6e  guments.MightPan
	0x0020 69 63 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ic..............
	0x0030 00 00 00 01 9c 02 00 00 00 01 10 61 00 00 69 00  ...........a..i.
	0x0040 00 00 00 00 00 00 00 10 69 00 00 69 00 00 00 00  ........i..i....
	0x0050 00 00 00 00 10 6a 00 00 69 00 00 00 00 00 00 00  .....j..i.......
	0x0060 00 10 6b 00 00 69 00 00 00 00 00 00 00 00 10 73  ..k..i.........s
	0x0070 00 00 69 00 00 00 00 00 00 00 00 00              ..i.........
	rel 0+0 t=24 type.[]int+0
	rel 0+0 t=24 type.int+0
	rel 35+8 t=1 "".MightPanic+0
	rel 43+8 t=1 "".MightPanic+149
	rel 63+4 t=29 go.info.[]int+0
	rel 67+4 t=29 +0
	rel 76+4 t=29 go.info.int+0
	rel 80+4 t=29 +58
	rel 89+4 t=29 go.info.int+0
	rel 93+4 t=29 +110
	rel 102+4 t=29 go.info.int+0
	rel 106+4 t=29 +162
	rel 115+4 t=29 go.info.int+0
	rel 119+4 t=29 +214
aux for "".Defer SDWARFLOC size=93
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 2a 00 00 00 00 00 00 00 2e 00 00 00 00 00 00 00  *...............
	0x0020 03 00 91 98 7f 2e 00 00 00 00 00 00 00 47 00 00  .............G..
	0x0030 00 00 00 00 00 01 00 50 47 00 00 00 00 00 00 00  .......PG.......
	0x0040 76 00 00 00 00 00 00 00 03 00 91 98 7f 00 00 00  v...............
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00           .............
	rel 8+8 t=1 "".Defer+0
aux for "".Defer SDWARFLINES size=51
	0x0000 04 02 03 ec 00 14 0a cd 06 9b 24 06 23 06 41 06  ..........$.#.A.
	0x0010 37 06 37 06 56 06 55 06 b9 06 23 06 73 76 06 5f  7.7.V.U...#.sv._
	0x0020 06 08 23 06 23 06 24 06 ae 06 5f 03 7f 6f 02 0a  ..#.#.$..._..o..
	0x0030 00 01 01                                         ...
aux for "".Defer SDWARFINFO size=84
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 44 65 66 65 72 00 00 00  guments.Defer...
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 9c  ................
	0x0030 02 00 00 00 01 15 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 0b 69 00 73 00 00 00 00 00 00  .......i.s......
	0x0050 00 00 00 00                                      ....
	rel 0+0 t=24 type.int+0
	rel 0+0 t=24 type.noalg.struct { "".siz uint32; "".started bool; "".heap bool; "".openDefer bool; "".sp uintptr; "".pc uintptr; "".fn uintptr; ""._panic uintptr; "".link uintptr; "".framepc uintptr; "".varp uintptr; "".fd uintptr; "".args [0]uint8 }+0
	rel 30+8 t=1 "".Defer+0
	rel 38+8 t=1 "".Defer+185
	rel 54+8 t=1 "".Defer+35
	rel 62+8 t=1 "".Defer+103
	rel 74+4 t=29 go.info.int+0
	rel 78+4 t=29 +0
aux for "".Defer.func1 SDWARFLINES size=11
	0x0000 04 02 03 ee 00 14 02 01 00 01 01                 ...........
aux for "".Defer.func1 SDWARFINFO size=60
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 44 65 66 65 72 2e 66 75  guments.Defer.fu
	0x0020 6e 63 31 00 00 00 00 00 00 00 00 00 00 00 00 00  nc1.............
	0x0030 00 00 00 00 01 9c 02 00 00 00 01 00              ............
	rel 36+8 t=1 "".Defer.func1+0
	rel 44+8 t=1 "".Defer.func1+1
aux for "".Defer.func2 SDWARFLINES size=11
	0x0000 04 02 03 f1 00 14 02 01 00 01 01                 ...........
aux for "".Defer.func2 SDWARFINFO size=60
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 44 65 66 65 72 2e 66 75  guments.Defer.fu
	0x0020 6e 63 32 00 00 00 00 00 00 00 00 00 00 00 00 00  nc2.............
	0x0030 00 00 00 00 01 9c 02 00 00 00 01 00              ............
	rel 36+8 t=1 "".Defer.func2+0
	rel 44+8 t=1 "".Defer.func2+1
aux for type..eq.[4]float64 SDWARFLOC size=155
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 35 00 00 00 00 00 00 00  ........5.......
	0x0020 01 00 9c 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 35 00 00 00 00  ...........5....
	0x0050 00 00 00 02 00 91 08 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00  ................
	0x0070 00 00 00 00 00 00 00 2e 00 00 00 00 00 00 00 35  ...............5
	0x0080 00 00 00 00 00 00 00 02 00 91 10 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00                 ...........
	rel 8+8 t=1 type..eq.[4]float64+0
	rel 59+8 t=1 type..eq.[4]float64+0
	rel 111+8 t=1 type..eq.[4]float64+0
aux for type..eq.[4]float64 SDWARFLINES size=22
	0x0000 04 01 0f 06 41 06 87 06 37 06 d7 06 41 06 19 06  ....A...7...A...
	0x0010 41 02 01 00 01 01                                A.....
aux for type..eq.[4]float64 SDWARFINFO size=84
	0x0000 03 74 79 70 65 2e 2e 65 71 2e 5b 34 5d 66 6c 6f  .type..eq.[4]flo
	0x0010 61 74 36 34 00 00 00 00 00 00 00 00 00 00 00 00  at64............
	0x0020 00 00 00 00 00 01 9c 01 00 00 00 01 10 70 00 00  .............p..
	0x0030 01 00 00 00 00 00 00 00 00 10 71 00 00 01 00 00  ..........q.....
	0x0040 00 00 00 00 00 00 10 72 00 01 01 00 00 00 00 00  .......r........
	0x0050 00 00 00 00                                      ....
	rel 0+0 t=24 type.*[4]float64+0
	rel 0+0 t=24 type.bool+0
	rel 21+8 t=1 type..eq.[4]float64+0
	rel 29+8 t=1 type..eq.[4]float64+53
	rel 49+4 t=29 go.info.*[4]float64+0
	rel 53+4 t=29 +0
	rel 62+4 t=29 go.info.*[4]float64+0
	rel 66+4 t=29 +51
	rel 75+4 t=29 go.info.bool+0
	rel 79+4 t=29 +103
